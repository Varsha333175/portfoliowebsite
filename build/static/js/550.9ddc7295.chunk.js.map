{"version":3,"file":"static/js/550.9ddc7295.chunk.js","mappings":"gKAKA,MAAMA,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCG/BM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICCtCC,EAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASC,cCA/DC,EAA+B,QAAUJ,EADjB,kBCF9B,SAASK,EAAYC,GACjB,OAAQA,GACW,kBAARA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCDA,SAASK,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEI,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBC,GAC3B,OAAQL,EAAoBK,EAAMC,UAC9BH,EAAaI,MAAMC,GAASZ,EAAeS,EAAMG,KACzD,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GAC5B,MAAM,QAAEQ,EAAO,QAAEP,GCFrB,SAAgCD,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,MAAM,QAAEQ,EAAO,QAAEP,GAAYD,EAC7B,MAAO,CACHQ,SAAqB,IAAZA,GAAqBjB,EAAeiB,GACvCA,OACAE,EACNT,QAASV,EAAeU,GAAWA,OAAUS,EAErD,CACA,OAAyB,IAAlBV,EAAMW,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBZ,GAAOa,EAAAA,EAAAA,YAAW1C,IACtE,OAAO2C,EAAAA,EAAAA,UAAQ,KAAM,CAAGN,UAASP,aAAY,CAACc,EAA0BP,GAAUO,EAA0Bd,IAChH,CACA,SAASc,EAA0BC,GAC/B,OAAOvB,MAAMC,QAAQsB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAMC,MAAOX,EACdU,EAAmBC,IAAO,CACtBC,UAAY9B,GAAUkB,EAAaW,IAAK3B,MAAMC,KAAWH,EAAMG,MCrBvE,MAAM4B,GAAqBjE,EAAAA,EAAAA,eAAc,CAAC,GCGpCkE,GAA2BlE,EAAAA,EAAAA,eAAc,CAAC,GCL1CmE,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqBC,GAAoF,IAAnF,kBAAEC,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEC,GAAYL,EAC5GC,GCtBJ,SAAsBK,GAClB,IAAK,MAAMd,KAAOc,EACdf,EAAmBC,GAAO,IACnBD,EAAmBC,MACnBc,EAASd,GAGxB,CDeyBe,CAAaN,GA2ClC,MAAMO,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyB9C,EAAO+C,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,KAChBpC,EAAAA,EAAAA,YAAWhD,MACXmC,EACHkD,SAAUC,EAAYnD,KAEpB,SAAE/B,GAAagF,EACfxC,EAAUF,EAAuBP,GACjCoD,EAAcX,EAAezC,EAAO/B,GAC1C,IAAKA,GAAYI,EAAW,CAOxBoC,EAAQ4C,cEtCpB,SAA0BX,EAAWU,EAAapD,EAAOuC,GACrD,MAAQc,cAAeC,IAAWzC,EAAAA,EAAAA,YAAW1C,GACvCoF,GAAc1C,EAAAA,EAAAA,YAAWnC,GACzB8E,GAAkB3C,EAAAA,EAAAA,YAAWzC,GAC7BqF,GAAsB5C,EAAAA,EAAAA,YAAWhD,GAAqBK,cACtDwF,GAAmBC,EAAAA,EAAAA,UAIzBpB,EAAsBA,GAAuBgB,EAAYK,UACpDF,EAAiBG,SAAWtB,IAC7BmB,EAAiBG,QAAUtB,EAAoBG,EAAW,CACtDU,cACAE,SACAtD,QACAwD,kBACAM,wBAAuBN,IACW,IAA5BA,EAAgBhD,QAEtBiD,yBAGR,MAAMJ,EAAgBK,EAAiBG,SACvCE,EAAAA,EAAAA,qBAAmB,KACfV,GAAiBA,EAAcW,OAAOhE,EAAOwD,EAAgB,IAMjE,MAAMS,GAAeN,EAAAA,EAAAA,QAAOtD,QAAQL,EAAMhB,KAAkCkF,OAAOC,kBAgCnF,OA/BA5F,GAA0B,KACjB8E,IAELA,EAAce,SAWVH,EAAaJ,SAAWR,EAAcgB,gBACtChB,EAAcgB,eAAeC,iBACjC,KAEJ7F,EAAAA,EAAAA,YAAU,KACD4E,IAELA,EAAckB,kBACTN,EAAaJ,SAAWR,EAAcgB,gBACvChB,EAAcgB,eAAeC,iBAE7BL,EAAaJ,UACbI,EAAaJ,SAAU,EAEvBK,OAAOC,iBAAkB,GAC7B,IAEGd,CACX,CFzBoCmB,CAAiB9B,EAAWU,EAAaH,EAAgBV,GAKjF,MAAMkC,GAA2B5D,EAAAA,EAAAA,YAAWmB,GACtC0C,GAAW7D,EAAAA,EAAAA,YAAWnC,GAAaC,OACrC8B,EAAQ4C,gBACRL,EAAgBvC,EAAQ4C,cAAcT,aAEtCK,EAAgByB,EAAUpC,EAAmBmC,GAErD,CAKA,OAAQE,EAAAA,cAAoBxG,EAAcyG,SAAU,CAAEC,MAAOpE,GACzDuC,GAAiBvC,EAAQ4C,cAAiBsB,EAAAA,cAAoB3B,EAAe,CAAEK,cAAe5C,EAAQ4C,iBAAkBJ,IAAqB,KAC7IT,EAAUE,EAAW1C,EG1DjC,SAAsBoD,EAAaC,EAAeN,GAC9C,OAAO+B,EAAAA,EAAAA,cAAaC,IAChBA,GAAY3B,EAAY4B,OAAS5B,EAAY4B,MAAMD,GAC/C1B,IACA0B,EACM1B,EAAc2B,MAAMD,GACpB1B,EAAc4B,WAEpBlC,IAC2B,oBAAhBA,EACPA,EAAYgC,GAEP9F,EAAY8D,KACjBA,EAAYc,QAAUkB,GAE9B,GAOJ,CAAC1B,GACL,CHmCwC6B,CAAa9B,EAAa3C,EAAQ4C,cAAeN,GAAcK,EAAanF,EAAUwC,EAAQ4C,eAClI,IAGA,OADAR,EAAoBZ,GAAyBS,EACtCG,CACX,CACA,SAASM,EAAWgC,GAAe,IAAd,SAAEjC,GAAUiC,EAC7B,MAAMC,GAAgBvE,EAAAA,EAAAA,YAAWkB,GAAoBsD,GACrD,OAAOD,QAA8B1E,IAAbwC,EAClBkC,EAAgB,IAAMlC,EACtBA,CACV,CI5DA,SAASoC,EAAkBC,GACvB,SAASC,EAAO9C,GACZ,OAAON,EAAsBmD,EAAa7C,EADQ+C,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVE,MACP,OAAOH,EAMX,MAAMI,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMH,EAAQ,CAMrBM,IAAKA,CAACC,EAASlE,KAIN+D,EAAeI,IAAInE,IACpB+D,EAAeK,IAAIpE,EAAK2D,EAAO3D,IAE5B+D,EAAeE,IAAIjE,KAGtC,CCxCA,MAAMqE,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAezD,GACpB,MAKqB,kBAAdA,IAIHA,EAAU0D,SAAS,SAOvBF,EAAqBG,QAAQ3D,IAAc,GAIvC,QAAQ4D,KAAK5D,GAIrB,CC3BA,MAAM6D,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoB9E,EAAGQ,GAAwB,IAAtB,OAAEV,EAAM,SAAEuB,GAAUb,EAClD,OAAQoE,EAAeT,IAAInE,IACvBA,EAAI+E,WAAW,YACbjF,QAAuBjB,IAAbwC,OACLqD,EAAgB1E,IAAgB,YAARA,EACvC,CCRA,MAAMgF,EAAiBhC,GAAUxE,QAAQwE,GAASA,EAAMiC,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBd,OCRzC,MAAM2B,EAAyBC,GAAWzF,GAAuB,kBAARA,GAAoBA,EAAI+E,WAAWU,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiBA,CAAC5C,EAAO6C,IACpBA,GAAyB,kBAAV7C,EAChB6C,EAAKC,UAAU9C,GACfA,ECNJ+C,EAAQA,CAACC,EAAKC,EAAKtI,IAAMuI,KAAKF,IAAIE,KAAKD,IAAItI,EAAGqI,GAAMC,GCEpDE,EAAS,CACX1B,KAAO9G,GAAmB,kBAANA,EACpByI,MAAOC,WACPP,UAAYnI,GAAMA,GAEhB2I,EAAQ,IACPH,EACHL,UAAYnI,GAAMoI,EAAM,EAAG,EAAGpI,IAE5B4I,EAAQ,IACPJ,EACHK,QAAS,GCPPC,EAAY9I,GAAMuI,KAAKQ,MAAU,IAAJ/I,GAAc,IAC3CgJ,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASnJ,GACd,MAAoB,kBAANA,CAClB,CCVA,MAAMoJ,EAAkBC,IAAI,CACxBvC,KAAO9G,GAAMmJ,EAASnJ,IAAMA,EAAEsJ,SAASD,IAAiC,IAAxBrJ,EAAEuJ,MAAM,KAAKrD,OAC7DuC,MAAOC,WACPP,UAAYnI,GAAM,GAAGA,IAAIqJ,MAEvBG,EAAUJ,EAAe,OACzBK,EAAUL,EAAe,KACzBM,GAAKN,EAAe,MACpBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAqB,IACpBJ,EACHhB,MAAQzI,GAAMyJ,EAAQhB,MAAMzI,GAAK,IACjCmI,UAAYnI,GAAMyJ,EAAQtB,UAAc,IAAJnI,ICblC8J,GAAM,IACLtB,EACHL,UAAWI,KAAKQ,OCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,EACRuC,QAASvC,EACTwC,QAASxC,EACTyC,QAASzC,EACTZ,MAAK,EACLsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,EACN8C,MAAO9C,EACP+C,MAAO/C,EACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZlC,EAAGkC,GACHjC,EAAGiC,GACHhC,EAAGgC,GACHkD,YAAalD,GACb/B,qBAAsB+B,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAM,MAAEC,EAAK,KAAEC,EAAI,UAAExF,EAAS,gBAAEyF,GAAoBN,EAEpD,IAAIO,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAM1L,KAAOkL,EAAc,CAC5B,MAAMlI,EAAQkI,EAAalL,GAI3B,GAAI0F,EAAkB1F,GAAM,CACxBsL,EAAKtL,GAAOgD,EACZ,QACJ,CAEA,MAAM2I,EAAYjE,GAAiB1H,GAC7B4L,EAAchG,EAAe5C,EAAO2I,GAC1C,GAAI/G,EAAeT,IAAInE,GAAM,CAKzB,GAHAwL,GAAe,EACf1F,EAAU9F,GAAO4L,GAEZF,EACD,SAEA1I,KAAW2I,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACS1L,EAAI+E,WAAW,WAEpB0G,GAAqB,EACrBF,EAAgBvL,GAAO4L,GAGvBP,EAAMrL,GAAO4L,CAErB,CAiBA,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,EAAStF,EAAqEqL,EAAoBT,GAAmB,IAA1G,2BAAEU,GAA6B,EAAI,mBAAEC,GAAqB,GAAOvL,EAE5FwL,EAAkB,GAKtB,IAAK,IAAIC,EAAI,EAAGA,EAAI1G,EAAe0G,IAAK,CACpC,MAAMjM,EAAM2E,EAAmBsH,QACRpN,IAAnBiH,EAAU9F,KAEVgM,GAAmB,GADG9G,EAAelF,IAAQA,KACN8F,EAAU9F,OAEzD,CAaA,OAZI8L,IAA+BhG,EAAUT,IACzC2G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9Bd,EACAY,EAAkBZ,EAAkBtF,EAAW+F,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CSW8BG,CAAelB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,MAAM,QAAEhB,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOY,EAC3DF,EAAME,gBAAkB,GAAGd,KAAWC,KAAWC,GACrD,CACJ,CCvEA,MAAMyB,GAAwBA,KAAA,CAC1Bf,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASe,GAAkBC,EAAQC,EAAQpO,GACvC,IAAK,MAAM6B,KAAOuM,EACTvH,EAAcuH,EAAOvM,KAAU8E,EAAoB9E,EAAK7B,KACzDmO,EAAOtM,GAAOuM,EAAOvM,GAGjC,CAQA,SAASwM,GAASrO,EAAOoD,EAAanF,GAClC,MACMiP,EAAQ,CAAC,EAMf,OAFAgB,GAAkBhB,EALAlN,EAAMkN,OAAS,CAAC,EAKElN,GACpCb,OAAOmP,OAAOpB,EAdlB,SAA+B7K,EAAwBe,EAAanF,GAAU,IAA9C,kBAAEgP,GAAmB5K,EACjD,OAAOvB,EAAAA,EAAAA,UAAQ,KACX,MAAMgM,EAAQmB,KAEd,OADApB,GAAgBC,EAAO1J,EAAa,CAAEuK,4BAA6B1P,GAAYgP,GACxE9N,OAAOmP,OAAO,CAAC,EAAGxB,EAAMK,KAAML,EAAMI,MAAM,GAClD,CAAC9J,GACR,CAQyBmL,CAAuBvO,EAAOoD,EAAanF,IACzD+B,EAAMwO,gBAAkBxO,EAAMwO,gBAAgBtB,GAASA,CAClE,CACA,SAASuB,GAAazO,EAAOoD,EAAanF,GAEtC,MAAMyQ,EAAY,CAAC,EACbxB,EAAQmB,GAASrO,EAAOoD,EAAanF,GAoB3C,OAnBI+B,EAAMqB,OAA+B,IAAvBrB,EAAM2O,eAEpBD,EAAUE,WAAY,EAEtB1B,EAAM2B,WACF3B,EAAM4B,iBACF5B,EAAM6B,mBACF,OAEZ7B,EAAM8B,aACa,IAAfhP,EAAMqB,KACA,OACA,QAAsB,MAAfrB,EAAMqB,KAAe,IAAM,WAEzBX,IAAnBV,EAAMiP,WACLjP,EAAMkP,OAASlP,EAAMmP,YAAcnP,EAAMoP,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUxB,MAAQA,EACXwB,CACX,CChDA,MAAMW,GAAmB,IAAI3I,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS4I,GAAkBzN,GACvB,OAAQA,EAAI+E,WAAW,UAClB/E,EAAI+E,WAAW,SAAmB,cAAR/E,GAC3BA,EAAI+E,WAAW,WACf/E,EAAI+E,WAAW,UACf/E,EAAI+E,WAAW,UACf/E,EAAI+E,WAAW,aACfyI,GAAiBrJ,IAAInE,EAC7B,CCrDA,IAAI0N,GAAiB1N,IAASyN,GAAkBzN,GAoBhD,KAnBiC2N,GAyBLC,QAAQ,0BAA0BpH,WArB1DkH,GAAiB1N,GAAQA,EAAI+E,WAAW,OAAS0I,GAAkBzN,GAAO2N,GAAY3N,GAsB1F,CACA,MAAO6N,IACH,CA5BJ,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQtF,GAChC,MAAyB,kBAAXqF,EACRA,EACA1G,GAAGvB,UAAUkI,EAAStF,EAAOqF,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAcnD,EAAKzK,EAEf2K,EAASkD,EAAUjD,GAAmB,IAFrB,MAAEkD,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE/D,EAAO,QAAEC,EAAO,WAAE+D,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHC,GAAQpO,EAMP,GALAwK,GAAgBC,EAAO2D,EAAQzD,EAASC,GAKpCiD,EAIA,YAHIpD,EAAMI,MAAMwD,UACZ5D,EAAM6D,MAAMD,QAAU5D,EAAMI,MAAMwD,UAI1C5D,EAAM6D,MAAQ7D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,MAAM,MAAEyD,EAAK,MAAEzD,EAAK,WAAE0D,GAAe9D,EAKjC6D,EAAMhJ,YACFiJ,IACA1D,EAAMvF,UAAYgJ,EAAMhJ,kBACrBgJ,EAAMhJ,WAGbiJ,SACalQ,IAAZ4L,QAAqC5L,IAAZ6L,GAAyBW,EAAMvF,aACzDuF,EAAME,gBFzBd,SAAgCwD,EAAYtE,EAASC,GAGjD,MAAO,GAFWoD,GAAWrD,EAASsE,EAAW5J,EAAG4J,EAAWzG,UAC7CwF,GAAWpD,EAASqE,EAAW3J,EAAG2J,EAAWvG,SAEnE,CEqBgCwG,CAAuBD,OAAwBlQ,IAAZ4L,EAAwBA,EAAU,QAAiB5L,IAAZ6L,EAAwBA,EAAU,UAG1H7L,IAAVyP,IACAQ,EAAM3J,EAAImJ,QACAzP,IAAV0P,IACAO,EAAM1J,EAAImJ,QACI1P,IAAd2P,IACAM,EAAMvI,MAAQiI,QAEC3P,IAAf4P,GD7BR,SAAsBK,EAAOjL,GAAqD,IAA7CoL,EAAOrL,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGoK,EAAMpK,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGsL,IAAWtL,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,KAAAA,UAAA,GAErEkL,EAAML,WAAa,EAGnB,MAAMU,EAAOD,EAAcjB,GAAWE,GAEtCW,EAAMK,EAAKnB,QAAU3G,GAAGvB,WAAWkI,GAEnC,MAAMS,EAAapH,GAAGvB,UAAUjC,GAC1B6K,EAAcrH,GAAGvB,UAAUmJ,GACjCH,EAAMK,EAAKjB,OAAS,GAAGO,KAAcC,GACzC,CCkBQU,CAAaN,EAAOL,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMU,GAAuBA,KAAA,IACtBjD,KACH0C,MAAO,CAAC,ICJNT,GAAYiB,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIpS,cCMzD,SAASqS,GAAYpR,EAAOoD,EAAaiO,EAAW3O,GAChD,MAAM4O,GAAcxQ,EAAAA,EAAAA,UAAQ,KACxB,MAAMgM,EAAQoE,KAEd,OADAjB,GAAcnD,EAAO1J,EAAa,CAAEuK,4BAA4B,GAASuC,GAASxN,GAAY1C,EAAMiN,mBAC7F,IACAH,EAAM6D,MACTzD,MAAO,IAAKJ,EAAMI,OACrB,GACF,CAAC9J,IACJ,GAAIpD,EAAMkN,MAAO,CACb,MAAMqE,EAAY,CAAC,EACnBrD,GAAkBqD,EAAWvR,EAAMkN,MAAOlN,GAC1CsR,EAAYpE,MAAQ,IAAKqE,KAAcD,EAAYpE,MACvD,CACA,OAAOoE,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkBhM,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GAwBvC,MAvBkBjD,CAACE,EAAW1C,EAAOd,EAAGmD,EAAoBpE,KAAa,IAA/B,aAAE8O,GAAc1K,EACtD,MAGMiP,GAHiBnL,EAAezD,GAChC0O,GACA3C,IAC6BzO,EAAO+M,EAAc9O,EAAUyE,GAC5DgP,EPoBd,SAAqB1R,EAAO2R,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM7P,KAAO7B,EAQF,WAAR6B,GAA4C,kBAAjB7B,EAAM4R,SAEjCrC,GAAc1N,KACU,IAAvB4P,GAA+BnC,GAAkBzN,KAChD8P,IAAUrC,GAAkBzN,IAE7B7B,EAAiB,WAAK6B,EAAI+E,WAAW,aACtC8K,EAAc7P,GAAO7B,EAAM6B,IAGnC,OAAO6P,CACX,COzC8BG,CAAY7R,EAA4B,kBAAd0C,EAAwB+O,GAClEK,EAAe,IACdJ,KACAJ,EACHpS,QAOE,SAAE6S,GAAa/R,EACfgS,GAAmBlR,EAAAA,EAAAA,UAAQ,IAAO+F,EAAckL,GAAYA,EAASjM,MAAQiM,GAAW,CAACA,IAC/F,OAAOE,EAAAA,EAAAA,eAAcvP,EAAW,IACzBoP,EACHC,SAAUC,GACZ,CAGV,CChCA,SAASE,GAAWC,EAAO9P,EAAmB+P,EAAWC,GAAY,IAAxC,MAAEnF,EAAK,KAAEC,GAAM9K,EACxClD,OAAOmP,OAAO6D,EAAQjF,MAAOA,EAAOmF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAMvQ,KAAOsL,EACdgF,EAAQjF,MAAMqF,YAAY1Q,EAAKsL,EAAKtL,GAE5C,CCHA,MAAM2Q,GAAsB,IAAI9L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS+L,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAahS,EAAW2R,GAC5C,IAAK,MAAMxQ,KAAO6Q,EAAY/B,MAC1BwB,EAAQS,aAAcJ,GAAoBxM,IAAInE,GAA0BA,EAAnBjD,EAAYiD,GAAY6Q,EAAY/B,MAAM9O,GAEvG,CCNA,SAASgR,GAA4B7S,EAAO8S,GACxC,MAAM,MAAE5F,GAAUlN,EACZ+S,EAAY,CAAC,EACnB,IAAK,MAAMlR,KAAOqL,GACVrG,EAAcqG,EAAMrL,KACnBiR,EAAU5F,OAASrG,EAAciM,EAAU5F,MAAMrL,KAClD8E,EAAoB9E,EAAK7B,MACzB+S,EAAUlR,GAAOqL,EAAMrL,IAG/B,OAAOkR,CACX,CCVA,SAASF,GAA4B7S,EAAO8S,GACxC,MAAMC,EAAYC,GAA8BhT,EAAO8S,GACvD,IAAK,MAAMjR,KAAO7B,EACd,GAAI6G,EAAc7G,EAAM6B,KAASgF,EAAciM,EAAUjR,IAAO,CAI5DkR,GAHuD,IAArCvM,EAAmBH,QAAQxE,GACvC,OAASA,EAAIoR,OAAO,GAAGC,cAAgBrR,EAAIsR,UAAU,GACrDtR,GACiB7B,EAAM6B,EACjC,CAEJ,OAAOkR,CACX,CCfA,SAASK,GAAwBpT,EAAOqT,EAAY7N,GAAkD,IAA1C8N,EAAa7N,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8N,EAAe9N,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAf4N,IACPA,EAAaA,OAAsB3S,IAAX8E,EAAuBA,EAASxF,EAAMwF,OAAQ8N,EAAeC,IAM/D,kBAAfF,IACPA,EAAarT,EAAMM,UAAYN,EAAMM,SAAS+S,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB3S,IAAX8E,EAAuBA,EAASxF,EAAMwF,OAAQ8N,EAAeC,IAElFF,CACX,CCvBA,MAAMG,GAAqBhU,GAChBC,MAAMC,QAAQF,GCCnBiU,GAAiBjU,GACZa,QAAQb,GAAkB,kBAANA,GAAkBA,EAAEkU,KAAOlU,EAAEmU,SAEtDC,GAAgCpU,GAE3BgU,GAAkBhU,GAAKA,EAAEA,EAAEkG,OAAS,IAAM,EAAIlG,ECCzD,SAASqU,GAAmBhP,GACxB,MAAMiP,EAAiBjN,EAAchC,GAASA,EAAMiB,MAAQjB,EAC5D,OAAO4O,GAAcK,GACfA,EAAeH,UACfG,CACV,CCMA,MAAMC,GAAsBC,GAAW,CAAChU,EAAO/B,KAC3C,MAAMwC,GAAUI,EAAAA,EAAAA,YAAW1C,GACrBqF,GAAkB3C,EAAAA,EAAAA,YAAWzC,GAC7B6V,EAAOA,IAbjB,SAAkB5R,EAA+DrC,EAAOS,EAAS+C,GAAiB,IAA/F,4BAAEqP,EAA2B,kBAAEqB,EAAiB,QAAEC,GAAU9R,EAC3E,MAAMyK,EAAQ,CACVC,aAAcqH,GAAiBpU,EAAOS,EAAS+C,EAAiBqP,GAChEH,YAAawB,KAKjB,OAHIC,IACArH,EAAM9H,MAASD,GAAaoP,EAAQnU,EAAO+E,EAAU+H,IAElDA,CACX,CAIuBuH,CAAUL,EAAQhU,EAAOS,EAAS+C,GACrD,OAAOvF,EAAWgW,ICdtB,SAAqBK,GACjB,MAAMpV,GAAMyE,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBzE,EAAI2E,UACJ3E,EAAI2E,QAAUyQ,KAEXpV,EAAI2E,OACf,CDQ+B0Q,CAAYN,EAAK,EAEhD,SAASG,GAAiBpU,EAAOS,EAAS+C,EAAiBgR,GACvD,MAAM5C,EAAS,CAAC,EACV6C,EAAeD,EAAmBxU,EAAO,CAAC,GAChD,IAAK,MAAM6B,KAAO4S,EACd7C,EAAO/P,GAAOgS,GAAmBY,EAAa5S,IAElD,IAAI,QAAErB,EAAO,QAAEP,GAAYD,EAC3B,MAAM0U,EAA0B3U,EAAsBC,GAChD2U,EAAkBvU,EAAcJ,GAClCS,GACAkU,IACCD,IACiB,IAAlB1U,EAAMW,eACUD,IAAZF,IACAA,EAAUC,EAAQD,cACNE,IAAZT,IACAA,EAAUQ,EAAQR,UAE1B,IAAI2U,IAA4BpR,IACE,IAA5BA,EAAgBhD,QAEtBoU,EAA4BA,IAAyC,IAAZpU,EACzD,MAAMqU,EAAeD,EAA4B3U,EAAUO,EAC3D,GAAIqU,GACwB,mBAAjBA,IACNlV,EAAoBkV,GAAe,EACvBpV,MAAMC,QAAQmV,GAAgBA,EAAe,CAACA,IACtDC,SAASzB,IACV,MAAM0B,EAAW3B,GAAwBpT,EAAOqT,GAChD,IAAK0B,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,KAAe9G,GAAW4G,EACjD,IAAK,MAAMlT,KAAOsM,EAAQ,CACtB,IAAI+G,EAAc/G,EAAOtM,GACzB,GAAIpC,MAAMC,QAAQwV,GAAc,CAQ5BA,EAAcA,EAHAN,EACRM,EAAYxP,OAAS,EACrB,EAEV,CACoB,OAAhBwP,IACAtD,EAAO/P,GAAOqT,EAEtB,CACA,IAAK,MAAMrT,KAAOmT,EACdpD,EAAO/P,GAAOmT,EAAcnT,EAAI,GAE5C,CACA,OAAO+P,CACX,CE9EA,MAAMuD,GAAQC,GAAQA,ECAtB,MAAMC,GACFC,WAAAA,GACIC,KAAKC,MAAQ,GACbD,KAAKE,UAAY,IAAI/O,GACzB,CACAgP,GAAAA,CAAIC,GACA,IAAKJ,KAAKE,UAAUzP,IAAI2P,GAGpB,OAFAJ,KAAKE,UAAUC,IAAIC,GACnBJ,KAAKC,MAAMI,KAAKD,IACT,CAEf,CACAE,MAAAA,CAAOF,GACH,MAAMG,EAAQP,KAAKC,MAAMnP,QAAQsP,IAClB,IAAXG,IACAP,KAAKC,MAAMO,OAAOD,EAAO,GACzBP,KAAKE,UAAUO,OAAOL,GAE9B,CACAM,KAAAA,GACIV,KAAKC,MAAM9P,OAAS,EACpB6P,KAAKE,UAAUQ,OACnB,ECpBJ,MAAMC,GAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,MAAQC,SAAUC,GAAOC,OAAQC,GAAaxJ,MAAOyJ,GAAS,MAAEC,IDQhE,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAM9J,EAAQ,CACV+J,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZP,EAAQN,GAAWc,QAAO,CAACC,EAAKpV,KAClCoV,EAAIpV,GDIZ,SAA0B8U,GAKtB,IAAIO,EAAY,IAAI7B,GAChB8B,EAAY,IAAI9B,GAChB+B,EAAW,EAKXL,GAAe,EACfM,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITrB,SAAU,SAACsB,GACP,MAAMC,EADuCjS,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,IACNsR,EACjCY,EAAQD,EAAoBR,EAAYC,EAO9C,OAT0B1R,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,IAItB6R,EAAY5B,IAAI+B,GAChBE,EAAMjC,IAAI+B,IAAaC,GAAqBX,IAE5CK,EAAWF,EAAU1B,MAAM9P,QAExB+R,CACX,EAIApB,OAASoB,IACLN,EAAUtB,OAAO4B,GACjBH,EAAYtB,OAAOyB,EAAS,EAKhC9B,QAAUY,IAMN,GAAIQ,EACAM,GAAiB,MADrB,CAUA,GANAN,GAAe,GACdG,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUlB,QAEVmB,EAAWF,EAAU1B,MAAM9P,OACvB0R,EACA,IAAK,IAAItJ,EAAI,EAAGA,EAAIsJ,EAAUtJ,IAAK,CAC/B,MAAM2J,EAAWP,EAAU1B,MAAM1H,GACjC2J,EAASlB,GACLe,EAAYtR,IAAIyR,KAChBD,EAAKrB,SAASsB,GACdd,IAER,CAEJI,GAAe,EACXM,IACAA,GAAiB,EACjBG,EAAK7B,QAAQY,GApBjB,CAqBA,GAGR,OAAOiB,CACX,CCjFmBI,EAAiB,IAAOjB,GAAe,IAC3CM,IACR,CAAC,GACEY,EAAeC,GAAWtB,EAAMsB,GAAQnC,QAAQ7I,GAChDiL,EAAeA,KACjB,MAAMjB,EAAYkB,YAAYC,MAC9BtB,GAAe,EACf7J,EAAM+J,MAAQD,EACR,IAAO,GACP7O,KAAKD,IAAIC,KAAKF,IAAIiP,EAAYhK,EAAMgK,UAnB/B,IAmBuD,GAClEhK,EAAMgK,UAAYA,EAClBhK,EAAMiK,cAAe,EACrBb,GAAWpB,QAAQ+C,GACnB/K,EAAMiK,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBsB,GACtB,EASE5B,EAAWD,GAAWc,QAAO,CAACC,EAAKpV,KACrC,MAAM2V,EAAOhB,EAAM3U,GAMnB,OALAoV,EAAIpV,GAAO,SAAC8T,GAAkD,IAAzCuC,EAASzS,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GAAU0S,EAAS1S,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GAG7C,OAFKkR,IATTA,GAAe,EACfC,GAAoB,EACf9J,EAAMiK,cACPN,EAAkBsB,IAQXP,EAAKrB,SAASR,EAASuC,EAAWC,EAC7C,EACOlB,CAAG,GACX,CAAC,GAEJ,MAAO,CAAEd,WAAUE,OADHV,GAAYO,GAAWpB,SAASjT,GAAQ2U,EAAM3U,GAAKwU,OAAOV,KAC/C7I,QAAO0J,QACtC,CCtD2E4B,CAAqD,qBAA1BC,sBAAwCA,sBAAwBlD,IAAM,GCKtKmD,GAAkB,CACpB7V,eAAgBsR,GAAmB,CAC/BlB,4BAA6BA,GAC7BqB,kBAAmBhD,GACnBiD,QAASA,CAACnU,EAAO+E,EAAQ1C,KAAoC,IAAlC,YAAEqQ,EAAW,aAAE3F,GAAc1K,EACpD+T,GAAMmC,MAAK,KACP,IACI7F,EAAY9B,WAEJ,oBADG7L,EAASyT,QAEVzT,EAASyT,UACTzT,EAAS0T,uBACvB,CACA,MAAOC,GAEHhG,EAAY9B,WAAa,CACrB5J,EAAG,EACHC,EAAG,EACHkD,MAAO,EACPE,OAAQ,EAEhB,KAEJ+L,GAAMhS,QAAO,KACT6L,GAAcyC,EAAa3F,EAAc,CAAEY,4BAA4B,GAASuC,GAASnL,EAAS4T,SAAU3Y,EAAMiN,mBAClHwF,GAAU1N,EAAU2N,EAAY,GAClC,KC9BRkG,GAAmB,CACrBnW,eAAgBsR,GAAmB,CAC/BlB,4BAA2B,GAC3BqB,kBAAmBjG,MCP3B,SAAS4K,GAAY1K,EAAQ2K,EAAWC,GAAsC,IAA7B/L,EAAOvH,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAEuT,SAAS,GAElE,OADA7K,EAAO8K,iBAAiBH,EAAWC,EAAS/L,GACrC,IAAMmB,EAAO+K,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GAA2B,IAApBK,EAAShU,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHiU,MAAO,CACH1S,EAAGoS,EAAMK,EAAY,KACrBxS,EAAGmS,EAAMK,EAAY,MAGjC,CACA,MAAME,GAAkBZ,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICRjF,SAASQ,GAAgBzL,EAAQ2K,EAAWC,EAAS/L,GACjD,OAAO6L,GAAY1K,EAAQ2K,EAAWa,GAAeZ,GAAU/L,EACnE,CCEA,MAAM6M,GAAmBA,CAACC,EAAGC,IAAOva,GAAMua,EAAED,EAAEta,IACxCwa,GAAO,mBAAAC,EAAAxU,UAAAC,OAAIwU,EAAY,IAAAza,MAAAwa,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA1U,UAAA0U,GAAA,OAAKD,EAAalD,OAAO6C,GAAiB,ECRvE,SAASO,GAAWja,GAChB,IAAIka,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOla,EACAma,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcpZ,GACnB,IAAIgZ,GAAO,EACX,GAAa,MAAThZ,EACAgZ,EAAOG,UAEN,GAAa,MAATnZ,EACLgZ,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAOA,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACFxF,WAAAA,CAAYyF,GACRxF,KAAKyF,WAAY,EACjBzF,KAAKwF,KAAOA,CAChB,CACA/W,MAAAA,GAAW,ECCf,SAASiX,GAAcF,EAAMG,GACzB,MAAMpC,EAAY,WAAaoC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOtB,GAAgBmB,EAAKlX,QAASiV,GAXjBsC,CAAChC,EAAOiC,KACxB,GAA0B,UAAtBjC,EAAMC,aAA2BuB,KACjC,OACJ,MAAM5a,EAAQ+a,EAAKO,WACfP,EAAK1W,gBAAkBrE,EAAMub,YAC7BR,EAAK1W,eAAemX,UAAU,aAAcN,GAE5Clb,EAAMmb,IACN/E,GAAMpS,QAAO,IAAMhE,EAAMmb,GAAc/B,EAAOiC,IAClD,GAEyD,CACzDrC,SAAU+B,EAAKO,WAAWH,IAElC,CChBA,MAAMM,GAAgBA,CAACnY,EAAQoY,MACtBA,IAGIpY,IAAWoY,GAITD,GAAcnY,EAAQoY,EAAMC,gBCL3C,SAASC,GAA0Bzb,EAAM4Y,GACrC,IAAKA,EACD,OACJ,MAAM8C,EAAwB,IAAIC,aAAa,UAAY3b,GAC3D4Y,EAAQ8C,EAAuBrC,GAAiBqC,GACpD,CCVA,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAM1E,EAAWsE,GAAkBjW,IAAIqW,EAAMhO,QAC7CsJ,GAAYA,EAAS0E,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQvH,QAAQoH,GAAqB,EAqBzC,SAASI,GAAoBnK,EAASnF,EAASyK,GAC3C,MAAM8E,EApBV,SAAiCla,GAAuB,IAAtB,KAAEma,KAASxP,GAAS3K,EAClD,MAAMoa,EAAaD,GAAQle,SAItB2d,GAAUjW,IAAIyW,IACfR,GAAUhW,IAAIwW,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAUnW,IAAI2W,GAC9B5a,EAAM8a,KAAKC,UAAU5P,GAQ3B,OAHK0P,EAAc7a,KACf6a,EAAc7a,GAAO,IAAIgb,qBAAqBT,GAA0B,CAAEI,UAASxP,KAEhF0P,EAAc7a,EACzB,CAEsCib,CAAyB9P,GAG3D,OAFA+O,GAAkB9V,IAAIkM,EAASsF,GAC/B8E,EAA0BQ,QAAQ5K,GAC3B,KACH4J,GAAkB/F,OAAO7D,GACzBoK,EAA0BS,UAAU7K,EAAQ,CAEpD,CC3CA,MAAM8K,GAAiB,CACnB/c,KAAM,EACNgd,IAAK,GCAT,MAAMC,GAAoB,CACtBzb,OAAQ,CACJoZ,QDAR,cAA4BA,GACxBxF,WAAAA,GACI8H,SAAS3X,WACT8P,KAAK8H,gBAAiB,EACtB9H,KAAK+H,UAAW,CACpB,CACAC,aAAAA,GACIhI,KAAKtQ,UACL,MAAM,SAAEuY,EAAW,CAAC,GAAMjI,KAAKwF,KAAKO,YAC9B,KAAEkB,EAAMvR,OAAQwS,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDxQ,EAAU,CACZwP,KAAMA,EAAOA,EAAK3Y,aAAUnD,EAC5B+c,aACAG,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoB/G,KAAKwF,KAAKlX,QAASmJ,GA7BhBmP,IAC1B,MAAM,eAAE0B,GAAmB1B,EAI3B,GAAI5G,KAAK+H,WAAaO,EAClB,OAMJ,GALAtI,KAAK+H,SAAWO,EAKZF,IAASE,GAAkBtI,KAAK8H,eAChC,OAEKQ,IACLtI,KAAK8H,gBAAiB,GAEtB9H,KAAKwF,KAAK1W,gBACVkR,KAAKwF,KAAK1W,eAAemX,UAAU,cAAeqC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBxI,KAAKwF,KAAKO,WACjD7D,EAAWoG,EAAiBC,EAAkBC,EACpDtG,GAAYA,EAAS0E,EAAM,GAGnC,CACAnX,KAAAA,GACIuQ,KAAKgI,eACT,CACAvZ,MAAAA,GACI,GAAoC,qBAAzB6Y,qBACP,OACJ,MAAM,MAAE7c,EAAK,UAAE8S,GAAcyC,KAAKwF,KAC5BiD,EAAoB,CAAC,SAAU,SAAU,QAAQ9d,KAO/D,SAAiCmC,GAA0D,IAAzD,SAAEmb,EAAW,CAAC,GAAGnb,GAAImb,SAAUS,EAAe,CAAC,GAAGxY,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQtF,GAASqd,EAASrd,KAAU8d,EAAa9d,EACrD,CAToE+d,CAAyBle,EAAO8S,IACxFkL,GACAzI,KAAKgI,eAEb,CACAtY,OAAAA,GAAY,ICxDZzD,IAAK,CACDsZ,QHMR,cAA2BA,GACvBxF,WAAAA,GACI8H,SAAS3X,WACT8P,KAAK4I,qBAAuBhJ,GAC5BI,KAAK6I,mBAAqBjJ,GAC1BI,KAAK8I,0BAA4BlJ,GACjCI,KAAK+I,kBAAoB,CAACC,EAAYC,KAClC,GAAIjJ,KAAKkJ,WACL,OACJlJ,KAAK6I,qBACL,MAAMpe,EAAQuV,KAAKwF,KAAKO,WAgBlBoD,EAA0B9E,GAAgB1V,OAAQ,aAfhCya,CAACC,EAAUC,KAC/B,IAAKtJ,KAAKuJ,gBACN,OACJ,MAAM,MAAE5P,EAAK,YAAE6P,EAAW,gBAAEC,GAAoBzJ,KAAKwF,KAAKO,WAC1DlF,GAAMpS,QAAO,KAKRgb,GACIvD,GAAclG,KAAKwF,KAAKlX,QAAS+a,EAASzQ,QAEzCe,GAASA,EAAM0P,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EACJ,GACzC,GAEgF,CAAE7F,UAAWhZ,EAAMkP,OAASlP,EAAmB,eAC/Hif,EAA8BrF,GAAgB1V,OAAQ,iBAAiB,CAACgb,EAAaC,IAAe5J,KAAK6J,YAAYF,EAAaC,IAAa,CAAEnG,UAAWhZ,EAAM+e,aAAe/e,EAAuB,mBAC9MuV,KAAK6I,mBAAqBpE,GAAK0E,EAAyBO,GACxD1J,KAAK8J,WAAWd,EAAYC,EAAU,EAE1CjJ,KAAK+J,qBAAuB,KACxB,MAmBMC,EAAwB1G,GAAYtD,KAAKwF,KAAKlX,QAAS,WAnBtC2b,IACnB,GAAyB,UAArBA,EAAa3d,KAAmB0T,KAAKkJ,WACrC,OAWJlJ,KAAK6I,qBACL7I,KAAK6I,mBAAqBvF,GAAYtD,KAAKwF,KAAKlX,QAAS,SAXpC4b,IACM,UAAnBA,EAAW5d,KAAoB0T,KAAKuJ,iBAExClD,GAA0B,MAAM,CAACxC,EAAOiC,KACpC,MAAM,MAAEnM,GAAUqG,KAAKwF,KAAKO,WACxBpM,GACAkH,GAAMpS,QAAO,IAAMkL,EAAMkK,EAAOiC,IACpC,GACF,IAINO,GAA0B,QAAQ,CAACxC,EAAOiC,KACtC9F,KAAK8J,WAAWjG,EAAOiC,EAAK,GAC9B,IAQAqE,EAAqB7G,GAAYtD,KAAKwF,KAAKlX,QAAS,QALvC8b,KACVpK,KAAKkJ,YAEV7C,GAA0B,UAAU,CAACsD,EAAaC,IAAe5J,KAAK6J,YAAYF,EAAaC,IAAY,IAG/G5J,KAAK8I,0BAA4BrE,GAAKuF,EAAuBG,EAAmB,CAExF,CACAL,UAAAA,CAAWjG,EAAOiC,GACd9F,KAAKkJ,YAAa,EAClB,MAAM,WAAEtP,EAAU,SAAEC,GAAamG,KAAKwF,KAAKO,WAIvClM,GAAYmG,KAAKwF,KAAK1W,gBACtBkR,KAAKwF,KAAK1W,eAAemX,UAAU,YAAY,GAE/CrM,GACAiH,GAAMpS,QAAO,IAAMmL,EAAWiK,EAAOiC,IAE7C,CACAyD,aAAAA,GACIvJ,KAAK6I,qBACL7I,KAAKkJ,YAAa,EAKlB,OAJclJ,KAAKwF,KAAKO,WACdlM,UAAYmG,KAAKwF,KAAK1W,gBAC5BkR,KAAKwF,KAAK1W,eAAemX,UAAU,YAAY,IAE3CZ,IACZ,CACAwE,WAAAA,CAAYhG,EAAOiC,GACf,IAAK9F,KAAKuJ,gBACN,OACJ,MAAM,YAAEC,GAAgBxJ,KAAKwF,KAAKO,WAC9ByD,GACA3I,GAAMpS,QAAO,IAAM+a,EAAY3F,EAAOiC,IAE9C,CACArW,KAAAA,GACI,MAAMhF,EAAQuV,KAAKwF,KAAKO,WAClBsE,EAAwBhG,GAAgB5Z,EAAMgf,gBAAkB9a,OAASqR,KAAKwF,KAAKlX,QAAS,cAAe0R,KAAK+I,kBAAmB,CAAEtF,UAAWhZ,EAAMmP,YAAcnP,EAAsB,kBAC1L6f,EAAsBhH,GAAYtD,KAAKwF,KAAKlX,QAAS,QAAS0R,KAAK+J,sBACzE/J,KAAK4I,qBAAuBnE,GAAK4F,EAAuBC,EAC5D,CACA5a,OAAAA,GACIsQ,KAAK4I,uBACL5I,KAAK6I,qBACL7I,KAAK8I,2BACT,IGzGA/c,MAAO,CACHwZ,QCTR,cAA2BA,GACvBxF,WAAAA,GACI8H,SAAS3X,WACT8P,KAAK2F,UAAW,CACpB,CACA4E,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBxK,KAAKwF,KAAKlX,QAAQmc,QAAQ,iBAC/C,CACA,MAAOtH,GACHqH,GAAiB,CACrB,CACKA,GAAmBxK,KAAKwF,KAAK1W,iBAElCkR,KAAKwF,KAAK1W,eAAemX,UAAU,cAAc,GACjDjG,KAAK2F,UAAW,EACpB,CACA+E,MAAAA,GACS1K,KAAK2F,UAAa3F,KAAKwF,KAAK1W,iBAEjCkR,KAAKwF,KAAK1W,eAAemX,UAAU,cAAc,GACjDjG,KAAK2F,UAAW,EACpB,CACAlW,KAAAA,GACIuQ,KAAKtQ,QAAU+U,GAAKnB,GAAYtD,KAAKwF,KAAKlX,QAAS,SAAS,IAAM0R,KAAKuK,YAAYjH,GAAYtD,KAAKwF,KAAKlX,QAAS,QAAQ,IAAM0R,KAAK0K,WACzI,CACAhb,OAAAA,GAAY,IDtBZ1D,MAAO,CACHuZ,QLQR,cAA2BA,GACvB9V,KAAAA,GACIuQ,KAAKtQ,QAAU+U,GAAKiB,GAAc1F,KAAKwF,MAAM,GAAOE,GAAc1F,KAAKwF,MAAM,GACjF,CACA9V,OAAAA,GAAY,KO5BhB,SAASib,GAAeC,EAAMC,GAC1B,IAAK3gB,MAAMC,QAAQ0gB,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK1a,OACxB,GAAI2a,IAAeF,EAAKza,OACpB,OAAO,EACX,IAAK,IAAIoI,EAAI,EAAGA,EAAIuS,EAAYvS,IAC5B,GAAIsS,EAAKtS,KAAOqS,EAAKrS,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASwS,GAAejd,EAAegQ,EAAY7N,GAC/C,MAAMxF,EAAQqD,EAAciY,WAC5B,OAAOlI,GAAwBpT,EAAOqT,OAAuB3S,IAAX8E,EAAuBA,EAASxF,EAAMwF,OAf5F,SAAoBnC,GAChB,MAAMQ,EAAU,CAAC,EAEjB,OADAR,EAAcuO,OAAOkD,SAAQ,CAACjQ,EAAOhD,IAASgC,EAAQhC,GAAOgD,EAAMiB,QAC5DjC,CACX,CAWoG0c,CAAWld,GAP/G,SAAqBA,GACjB,MAAMmd,EAAW,CAAC,EAElB,OADAnd,EAAcuO,OAAOkD,SAAQ,CAACjQ,EAAOhD,IAAS2e,EAAS3e,GAAOgD,EAAMiC,gBAC7D0Z,CACX,CAG+H1Z,CAAYzD,GAC3I,CCnBA,IAAIod,GAAUtL,GACVuL,GAAYvL,GCGhB,MAAMwL,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAWxhB,MAAMC,QAAQuhB,IAAgC,kBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAO5gB,SAAS4gB,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClBxhB,MAAMC,QAAQuhB,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsBhf,IAAA,IAAEyX,EAAGC,EAAGuH,EAAGC,GAAElf,EAAA,MAAK,gBAAgByX,MAAMC,MAAMuH,MAAMC,IAAI,EAC9EJ,GAAuB,CACzBK,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQR,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CS,QAAST,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CU,OAAQV,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDW,QAASX,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASY,GAAwBhB,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpBxhB,MAAMC,QAAQuhB,GACVA,EAAOiB,IAAID,IACXd,GAAqBF,EACnC,CCRA,MAAMkB,GAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EACEG,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO1N,GACX,MAAM2N,EAAYC,GArBtB,SAAyB/b,EAAGgc,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACArV,EAAI,EACR,GACIqV,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWf,GAAWgB,EAAUT,EAAKE,GAAO5b,EACxCkc,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZpb,KAAKqb,IAAIF,GAAYX,MACxBzU,EAAI0U,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQR,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWW,EAASV,GAAIO,EAAKE,EACxE,CC9CA,MAAMnB,GAASe,GAAY,IAAM,EAAG,EAAG,GACjCd,GAAUc,GAAY,EAAG,EAAG,IAAM,GAClCb,GAAYa,GAAY,IAAM,EAAG,IAAM,GCJvCa,GAAiB7B,GACZhiB,MAAMC,QAAQ+hB,IAA4B,kBAAZA,EAAK,GCCxC8B,GAAgBtC,GAAYjjB,GAAMA,GAAK,GAAMijB,EAAO,EAAIjjB,GAAK,GAAK,EAAIijB,EAAO,GAAK,EAAIjjB,KAAO,ECA7FwlB,GAAiBvC,GAAYjjB,GAAM,EAAIijB,EAAO,EAAIjjB,GCClD6jB,GAAU7jB,GAAM,EAAI+J,KAAK0b,IAAI1b,KAAK2b,KAAK1lB,IACvC8jB,GAAU0B,GAAc3B,IACxB8B,GAAYJ,GAAa1B,ICDzBG,GAAUS,GAAY,IAAM,KAAM,IAAM,KACxCV,GAASyB,GAAcxB,IACvB4B,GAAYL,GAAaxB,ICEzB8B,GAAe,CACjBrC,OAAQrM,GACRuM,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN8B,UAAS,GACT7B,QAAO,GACPC,OAAM,GACN6B,UAAS,GACT5B,QAAO,GACP8B,WCjBgB9lB,IAAOA,GAAK,GAAK,EAAI,GAAM+jB,GAAO/jB,GAAK,IAAO,EAAI+J,KAAKgc,IAAI,GAAI,IAAM/lB,EAAI,MDmBvFgmB,GAA8B3Q,IAChC,GAAI5T,MAAMC,QAAQ2T,GAAa,CAE3BqN,GAAgC,IAAtBrN,EAAW3N,OAAc,2DACnC,MAAOue,EAAIC,EAAIC,EAAIC,GAAM/Q,EACzB,OAAOoP,GAAYwB,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAf/Q,GAEZqN,QAAuChgB,IAA7BmjB,GAAaxQ,GAA2B,wBAAwBA,MACnEwQ,GAAaxQ,IAEjBA,CAAU,EE3BfgR,GAAgBA,CAAC3c,EAAM4c,IAAc9kB,GAChCa,QAASsI,EAASnJ,IAAMkJ,EAAiBpC,KAAK9G,IAAMA,EAAEoH,WAAWc,IACnE4c,GAAYnlB,OAAOC,UAAUC,eAAeC,KAAKE,EAAG8kB,IAEvDC,GAAaA,CAACC,EAAOC,EAAOC,IAAWllB,IACzC,IAAKmJ,EAASnJ,GACV,OAAOA,EACX,MAAOsa,EAAGC,EAAGuH,EAAGnZ,GAAS3I,EAAEmlB,MAAMnc,GACjC,MAAO,CACH,CAACgc,GAAQtc,WAAW4R,GACpB,CAAC2K,GAAQvc,WAAW6R,GACpB,CAAC2K,GAAQxc,WAAWoZ,GACpBnZ,WAAiBzH,IAAVyH,EAAsBD,WAAWC,GAAS,EACpD,ECbCyc,GAAU,IACT5c,EACHL,UAAYnI,GAAMuI,KAAKQ,MAHL/I,IAAMoI,EAAM,EAAG,IAAKpI,GAGTqlB,CAAarlB,KAExCslB,GAAO,CACTxe,KAAM+d,GAAc,MAAO,OAC3Bpc,MAAOsc,GAAW,MAAO,QAAS,QAClC5c,UAAWtF,IAAA,IAAC,IAAE0iB,EAAG,MAAEC,EAAK,KAAEC,EAAM9c,MAAO+c,EAAU,GAAG7iB,EAAA,MAAK,QACrDuiB,GAAQjd,UAAUod,GAClB,KACAH,GAAQjd,UAAUqd,GAClB,KACAJ,GAAQjd,UAAUsd,GAClB,KACA3c,EAASH,EAAMR,UAAUud,IACzB,GAAG,GCYX,MAAMC,GAAM,CACR7e,KAAM+d,GAAc,KACpBpc,MAhCJ,SAAkBzI,GACd,IAAI4lB,EAAI,GACJC,EAAI,GACJtL,EAAI,GACJD,EAAI,GAmBR,OAjBIta,EAAEkG,OAAS,GACX0f,EAAI5lB,EAAE2T,UAAU,EAAG,GACnBkS,EAAI7lB,EAAE2T,UAAU,EAAG,GACnB4G,EAAIva,EAAE2T,UAAU,EAAG,GACnB2G,EAAIta,EAAE2T,UAAU,EAAG,KAInBiS,EAAI5lB,EAAE2T,UAAU,EAAG,GACnBkS,EAAI7lB,EAAE2T,UAAU,EAAG,GACnB4G,EAAIva,EAAE2T,UAAU,EAAG,GACnB2G,EAAIta,EAAE2T,UAAU,EAAG,GACnBiS,GAAKA,EACLC,GAAKA,EACLtL,GAAKA,EACLD,GAAKA,GAEF,CACHiL,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASvL,EAAG,IAClB5R,MAAO2R,EAAIwL,SAASxL,EAAG,IAAM,IAAM,EAE3C,EAIInS,UAAWmd,GAAKnd,WC/Bd4d,GAAO,CACTjf,KAAM+d,GAAc,MAAO,OAC3Bpc,MAAOsc,GAAW,MAAO,aAAc,aACvC5c,UAAWtF,IAAwD,IAAvD,IAAEmjB,EAAG,WAAEC,EAAU,UAAEC,EAAWvd,MAAO+c,EAAU,GAAG7iB,EAC1D,MAAQ,QACJ0F,KAAKQ,MAAMid,GACX,KACAvc,EAAQtB,UAAUW,EAASmd,IAC3B,KACAxc,EAAQtB,UAAUW,EAASod,IAC3B,KACApd,EAASH,EAAMR,UAAUud,IACzB,GAAG,GCZTS,GAAQ,CACVrf,KAAO9G,GAAMslB,GAAKxe,KAAK9G,IAAM2lB,GAAI7e,KAAK9G,IAAM+lB,GAAKjf,KAAK9G,GACtDyI,MAAQzI,GACAslB,GAAKxe,KAAK9G,GACHslB,GAAK7c,MAAMzI,GAEb+lB,GAAKjf,KAAK9G,GACR+lB,GAAKtd,MAAMzI,GAGX2lB,GAAIld,MAAMzI,GAGzBmI,UAAYnI,GACDmJ,EAASnJ,GACVA,EACAA,EAAEH,eAAe,OACbylB,GAAKnd,UAAUnI,GACf+lB,GAAK5d,UAAUnI,ICF3BkU,GAAMA,CAACkS,EAAMC,EAAIC,KAAcA,EAAWF,EAAOE,EAAWD,EAAKD,ECpBvE,SAASG,GAAS/nB,EAAGgoB,EAAG5D,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDpkB,EAAc,GAATgoB,EAAIhoB,GAASokB,EACzBA,EAAI,GACG4D,EACP5D,EAAI,EAAI,EACDpkB,GAAKgoB,EAAIhoB,IAAM,EAAI,EAAIokB,GAAK,EAChCpkB,CACX,CCHA,MAAMioB,GAAiBA,CAACL,EAAMC,EAAIrmB,KAC9B,MAAM0mB,EAAWN,EAAOA,EACxB,OAAO7d,KAAKoe,KAAKpe,KAAKD,IAAI,EAAGtI,GAAKqmB,EAAKA,EAAKK,GAAYA,GAAU,EAEhEE,GAAa,CAACjB,GAAKL,GAAMS,IAE/B,SAASc,GAAOV,GACZ,MAAMje,GAFYlI,EAEQmmB,EAFFS,GAAWE,MAAM5e,GAASA,EAAKpB,KAAK9G,MAA1CA,MAGlBkhB,GAAUrgB,QAAQqH,GAAO,IAAIie,yEAC7B,IAAIY,EAAQ7e,EAAKO,MAAM0d,GAKvB,OAJIje,IAAS6d,KAETgB,EDRR,SAAmBlkB,GAAwC,IAAvC,IAAEmjB,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEvd,GAAO9F,EACrDmjB,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKQ,EAGA,CACD,MAAMO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCznB,EAAI,EAAI0nB,EAAYM,EAC1BjB,EAAMgB,GAAS/nB,EAAGgoB,EAAGR,EAAM,EAAI,GAC/BR,EAAQe,GAAS/nB,EAAGgoB,EAAGR,GACvBP,EAAOc,GAAS/nB,EAAGgoB,EAAGR,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKhd,KAAKQ,MAAY,IAANwc,GAChBC,MAAOjd,KAAKQ,MAAc,IAARyc,GAClBC,KAAMld,KAAKQ,MAAa,IAAP0c,GACjB9c,QAER,CCjBgBqe,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACb,EAAMC,KACpB,MAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,EAAU,IAAKF,GACrB,OAAQlnB,IACJonB,EAAQ7B,IAAMkB,GAAeS,EAAS3B,IAAK4B,EAAO5B,IAAKvlB,GACvDonB,EAAQ5B,MAAQiB,GAAeS,EAAS1B,MAAO2B,EAAO3B,MAAOxlB,GAC7DonB,EAAQ3B,KAAOgB,GAAeS,EAASzB,KAAM0B,EAAO1B,KAAMzlB,GAC1DonB,EAAQze,MAAQuL,GAAIgT,EAASve,MAAOwe,EAAOxe,MAAO3I,GAC3CslB,GAAKnd,UAAUif,GACzB,ECtBL,MAAMC,GAAkB,CACpBC,M3EZqB,gF2EarBC,SAAU,OACVzf,MAAO,OACPW,MAAOkN,IAEL6R,GAAiB,CACnBF,MAAOre,EACPse,SAAU,SACVzf,MAAO,OACPW,MAAO0d,GAAM1d,OAEXgf,GAAkB,CACpBH,MAAOte,EACPue,SAAU,UACVzf,MAAO,OACPW,MAAOD,EAAOC,OAElB,SAASif,GAAS7L,EAAIhZ,GAAqC,IAAnC,MAAEykB,EAAK,SAAEC,EAAQ,MAAEzf,EAAK,MAAEW,GAAO5F,EACrD,MAAM2d,EAAU3E,EAAK8L,UAAUxC,MAAMmC,GAChC9G,IAEL3E,EAAK,MAAQ0L,GAAY/G,EAAQta,OACjC2V,EAAK8L,UAAY9L,EAAK8L,UAAUroB,QAAQgoB,EAAOxf,GAC/C+T,EAAKzJ,OAAOgE,QAAQoK,EAAQkC,IAAIja,IACpC,CACA,SAASmf,GAAoBviB,GACzB,MAAMwiB,EAAgBxiB,EAAMyiB,WACtBjM,EAAO,CACTxW,MAAOwiB,EACPF,UAAWE,EACXzV,OAAQ,GACR2V,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJIpM,EAAKxW,MAAMuB,SAAS,WACpB8gB,GAAS7L,EAAMwL,IACnBK,GAAS7L,EAAM2L,IACfE,GAAS7L,EAAM4L,IACR5L,CACX,CACA,SAASqM,GAAkBloB,GACvB,OAAO4nB,GAAoB5nB,GAAGoS,MAClC,CACA,SAAS+V,GAAkBvZ,GACvB,MAAM,OAAEwD,EAAM,UAAE4V,EAAS,QAAED,EAAO,UAAEJ,GAAcC,GAAoBhZ,GAChEwZ,EAAYhW,EAAOlM,OACzB,OAAQlG,IACJ,IAAIqoB,EAASV,EACb,IAAK,IAAIrZ,EAAI,EAAGA,EAAI8Z,EAAW9Z,IAEvB+Z,EADA/Z,EAAIyZ,EACKM,EAAO/oB,QAAQ+nB,GAAgBvf,MAAO9H,EAAEsO,IAE5CA,EAAIyZ,EAAUC,EACVK,EAAO/oB,QAAQkoB,GAAe1f,MAAOqe,GAAMhe,UAAUnI,EAAEsO,KAGvD+Z,EAAO/oB,QAAQmoB,GAAgB3f,MAAOgB,EAAS9I,EAAEsO,KAGlE,OAAO+Z,CAAM,CAErB,CACA,MAAMC,GAAwBtoB,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMuoB,GAAU,CACZzhB,KA/EJ,SAAc9G,GACV,IAAIkQ,EAAIsY,EACR,OAAQC,MAAMzoB,IACVmJ,EAASnJ,MACwB,QAA9BkQ,EAAKlQ,EAAEmlB,MAAMnc,UAAgC,IAAPkH,OAAgB,EAASA,EAAGhK,SAAW,KAC3C,QAA9BsiB,EAAKxoB,EAAEmlB,MAAMlc,UAAgC,IAAPuf,OAAgB,EAASA,EAAGtiB,SAAW,GAChF,CACZ,EAyEIuC,MAAOyf,GACPC,qBACAO,kBATJ,SAA2B1oB,GACvB,MAAM2oB,EAAST,GAAkBloB,GAEjC,OADoBmoB,GAAkBnoB,EAC/B4oB,CAAYD,EAAOjG,IAAI4F,IAClC,GC5EMO,GAAeA,CAACzY,EAAQzB,IAAYnQ,GAAM,GAAGA,EAAI,EAAImQ,EAASyB,IACpE,SAAS0Y,GAAS1Y,EAAQzB,GACtB,MAAsB,kBAAXyB,EACCpQ,GAAMkU,GAAI9D,EAAQzB,EAAQ3O,GAE7BmmB,GAAMrf,KAAKsJ,GACT6W,GAAS7W,EAAQzB,GAGjByB,EAAOhJ,WAAW,QACnByhB,GAAazY,EAAQzB,GACrBoa,GAAW3Y,EAAQzB,EAEjC,CACA,MAAMqa,GAAWA,CAAC5C,EAAMC,KACpB,MAAMgC,EAAS,IAAIjC,GACbgC,EAAYC,EAAOniB,OACnB+iB,EAAa7C,EAAK1D,KAAI,CAACwG,EAAU5a,IAAMwa,GAASI,EAAU7C,EAAG/X,MACnE,OAAQtO,IACJ,IAAK,IAAIsO,EAAI,EAAGA,EAAI8Z,EAAW9Z,IAC3B+Z,EAAO/Z,GAAK2a,EAAW3a,GAAGtO,GAE9B,OAAOqoB,CAAM,CAChB,EAECc,GAAYA,CAAC/Y,EAAQzB,KACvB,MAAM0Z,EAAS,IAAKjY,KAAWzB,GACzBsa,EAAa,CAAC,EACpB,IAAK,MAAM5mB,KAAOgmB,OACMnnB,IAAhBkP,EAAO/N,SAAsCnB,IAAhByN,EAAOtM,KACpC4mB,EAAW5mB,GAAOymB,GAAS1Y,EAAO/N,GAAMsM,EAAOtM,KAGvD,OAAQrC,IACJ,IAAK,MAAMqC,KAAO4mB,EACdZ,EAAOhmB,GAAO4mB,EAAW5mB,GAAKrC,GAElC,OAAOqoB,CAAM,CAChB,EAECU,GAAaA,CAAC3Y,EAAQzB,KACxB,MAAMya,EAAWb,GAAQJ,kBAAkBxZ,GACrC0a,EAAczB,GAAoBxX,GAClCkZ,EAAc1B,GAAoBjZ,GAIxC,OAHuB0a,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/BzN,GAAKwO,GAASK,EAAYjX,OAAQkX,EAAYlX,QAASgX,IAG9DnI,IAAQ,EAAM,mBAAmB7Q,WAAgBzB,6KAC1Cka,GAAazY,EAAQzB,GAChC,EChDE2X,GAAWA,CAACF,EAAMC,EAAIhhB,KACxB,MAAMkkB,EAAmBlD,EAAKD,EAC9B,OAA4B,IAArBmD,EAAyB,GAAKlkB,EAAQ+gB,GAAQmD,CAAgB,ECJnEC,GAAYA,CAACpD,EAAMC,IAAQ7nB,GAAM0V,GAAIkS,EAAMC,EAAI7nB,GAgBrD,SAASirB,GAAapB,EAAQpG,EAAMyH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,kBADO1pB,EAiB+BqoB,EAAO,IAfnDmB,GAEW,kBAANxpB,EACLmmB,GAAMrf,KAAK9G,GAAKinB,GAAW8B,GAE7B9oB,MAAMC,QAAQF,GACZgpB,GAEW,kBAANhpB,EACLmpB,GAEJK,IAbX,IAA4BxpB,EAkBxB,MAAM6pB,EAAYxB,EAAOniB,OAAS,EAClC,IAAK,IAAIoI,EAAI,EAAGA,EAAIub,EAAWvb,IAAK,CAChC,IAAIwb,EAAQF,EAAavB,EAAO/Z,GAAI+Z,EAAO/Z,EAAI,IAC/C,GAAI2T,EAAM,CACN,MAAM8H,EAAiB9pB,MAAMC,QAAQ+hB,GAAQA,EAAK3T,IAAMqH,GAAOsM,EAC/D6H,EAAQtP,GAAKuP,EAAgBD,EACjC,CACAH,EAAOvT,KAAK0T,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO5B,GAAqD,IAA3CjgB,MAAO8hB,GAAU,EAAI,KAAEjI,EAAI,MAAE6H,GAAO7jB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMkkB,EAAcF,EAAM/jB,OAM1B,GALAgb,GAAUiJ,IAAgB9B,EAAOniB,OAAQ,wDAKrB,IAAhBikB,EACA,MAAO,IAAM9B,EAAO,GAEpB4B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnB/B,EAAS,IAAIA,GAAQ+B,WAEzB,MAAMT,EAASF,GAAapB,EAAQpG,EAAM6H,GACpCD,EAAYF,EAAOzjB,OACnBmkB,EAAgBrqB,IAClB,IAAIsO,EAAI,EACR,GAAIub,EAAY,EACZ,KAAOvb,EAAI2b,EAAM/jB,OAAS,KAClBlG,EAAIiqB,EAAM3b,EAAI,IADOA,KAKjC,MAAMgc,EAAkBhE,GAAS2D,EAAM3b,GAAI2b,EAAM3b,EAAI,GAAItO,GACzD,OAAO2pB,EAAOrb,GAAGgc,EAAgB,EAErC,OAAOJ,EACAlqB,GAAMqqB,EAAajiB,EAAM6hB,EAAM,GAAIA,EAAME,EAAc,GAAInqB,IAC5DqqB,CACV,CCvFA,SAASE,GAAcC,GACnB,MAAMna,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQoa,GACxB,MAAMpiB,EAAMgI,EAAOA,EAAOnK,OAAS,GACnC,IAAK,IAAIoI,EAAI,EAAGA,GAAKmc,EAAWnc,IAAK,CACjC,MAAMoc,EAAiBpE,GAAS,EAAGmE,EAAWnc,GAC9C+B,EAAO+F,KAAKlC,GAAI7L,EAAK,EAAGqiB,GAC5B,CACJ,CDLIC,CAAWta,EAAQma,EAAItkB,OAAS,GACzBmK,CACX,CEIA,SAASua,GAAS/nB,GAA4E,IAA3E,SAAEgoB,EAAW,IAAKD,UAAWE,EAAc,MAAEC,EAAK,KAAE9I,EAAO,aAAcpf,EAKxF,MAAMmoB,EAAkBlH,GAAc7B,GAChCA,EAAKS,IAAI8B,IACTA,GAA2BvC,GAK3B3U,EAAQ,CACV2d,MAAM,EACN5lB,MAAOylB,EAAe,IAKpBI,EC7BV,SAA8B7a,EAAQwa,GAClC,OAAOxa,EAAOqS,KAAKyI,GAAMA,EAAIN,GACjC,CD2B0BO,CAGtBL,GAASA,EAAM7kB,SAAW4kB,EAAe5kB,OACnC6kB,EACAR,GAAcO,GAAiBD,GAC/BQ,EAAoBrB,GAAYkB,EAAeJ,EAAgB,CACjE7I,KAAMhiB,MAAMC,QAAQ8qB,GACdA,GA9BS5Y,EA+BK0Y,EA/BGrJ,EA+BauJ,EA9BjC5Y,EAAOsQ,KAAI,IAAMjB,GAAUW,KAAW7L,OAAO,EAAGnE,EAAOlM,OAAS,MAD3E,IAAuBkM,EAAQqP,EAiC3B,MAAO,CACH6J,mBAAoBT,EACpBlK,KAAOiC,IACHtV,EAAMjI,MAAQgmB,EAAkBzI,GAChCtV,EAAM2d,KAAOrI,GAAKiI,EACXvd,GAGnB,CE1CA,SAASie,GAAkBvK,EAAUwK,GACjC,OAAOA,EAAgBxK,GAAY,IAAOwK,GAAiB,CAC/D,CCNA,MAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAc/I,EAAGve,GAC5C,MAAMunB,EAAQrjB,KAAKD,IAAIsa,EAAI6I,GAAwB,GACnD,OAAOF,GAAkBlnB,EAAUsnB,EAAaC,GAAQhJ,EAAIgJ,EAChE,CCFA,MAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAUrpB,GAA6D,IACxEspB,EACAC,GAFY,SAAEvB,EAAW,IAAG,OAAEwB,EAAS,IAAI,SAAErL,EAAW,EAAC,KAAEsL,EAAO,GAAIzpB,EAG1Eoe,GAAQ4J,GAAY1J,GAAsB4K,IAAc,8CACxD,IAAIQ,EAAe,EAAIF,EAIvBE,EAAenkB,EAAM4jB,GAAYC,GAAYM,GAC7C1B,EAAWziB,EAAM0jB,GAAaC,GAAa1K,GAAsBwJ,IAC7D0B,EAAe,GAIfJ,EAAYK,IACR,MAAMC,EAAmBD,EAAeD,EAClClV,EAAQoV,EAAmB5B,EAC3BvQ,EAAImS,EAAmBzL,EACvBzG,EAAImS,GAAgBF,EAAcD,GAClCzK,EAAIvZ,KAAKokB,KAAKtV,GACpB,OAAOwU,GAAWvR,EAAIC,EAAKuH,CAAC,EAEhCsK,EAAcI,IACV,MACMnV,EADmBmV,EAAeD,EACP1B,EAC3B9I,EAAI1K,EAAQ2J,EAAWA,EACvB9H,EAAI3Q,KAAKgc,IAAIgI,EAAc,GAAKhkB,KAAKgc,IAAIiI,EAAc,GAAK3B,EAC5D+B,EAAIrkB,KAAKokB,KAAKtV,GACdwO,EAAI6G,GAAgBnkB,KAAKgc,IAAIiI,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBX,GAAU,GAAK,EAAI,KACzC9J,EAAI7I,GAAK0T,GAAM/G,CAAC,IAOvCsG,EAAYK,GACEjkB,KAAKokB,KAAKH,EAAe3B,KACxB2B,EAAexL,GAAY6J,EAAW,GACzCgB,GAEZO,EAAcI,GACAjkB,KAAKokB,KAAKH,EAAe3B,IACIA,EAAWA,GAAvC7J,EAAWwL,KAI9B,MACMA,EAmBV,SAAyBL,EAAUC,EAAYS,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIve,EAAI,EAAGA,EAAIye,GAAgBze,IAChCwe,GAAkBX,EAASW,GAAUV,EAAWU,GAEpD,OAAOA,CACX,CAzByBE,CAAgBb,EAAUC,EAD1B,EAAIvB,GAGzB,GADAA,EAAW1J,GAAsB0J,GAC7BpC,MAAM+D,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACTrC,YAGH,CACD,MAAMoC,EAAY1kB,KAAKgc,IAAIiI,EAAc,GAAKF,EAC9C,MAAO,CACHW,YACAC,QAAwB,EAAfX,EAAmBhkB,KAAKoe,KAAK2F,EAAOW,GAC7CpC,WAER,CACJ,CACA,MAAMkC,GAAiB,GAQvB,SAASL,GAAgBF,EAAcD,GACnC,OAAOC,EAAejkB,KAAKoe,KAAK,EAAI4F,EAAeA,EACvD,CClFA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa7f,EAASgE,GAC3B,OAAOA,EAAK9Q,MAAM2B,QAAyBnB,IAAjBsM,EAAQnL,IACtC,CAuBA,SAASirB,GAAMzqB,GAAkD,IAAjD,UAAE+nB,EAAS,UAAE2C,EAAS,UAAEC,KAAchgB,GAAS3K,EAC3D,MAAMuN,EAASwa,EAAU,GACnBjc,EAASic,EAAUA,EAAU1kB,OAAS,GAKtCoH,EAAQ,CAAE2d,MAAM,EAAO5lB,MAAO+K,IAC9B,UAAE6c,EAAS,QAAEC,EAAO,KAAEZ,EAAI,SAAEzB,EAAQ,SAAE7J,EAAQ,uBAAEyM,GA9B1D,SAA0BjgB,GACtB,IAAIkgB,EAAgB,CAChB1M,SAAU,EACViM,UAAW,IACXC,QAAS,GACTZ,KAAM,EACNmB,wBAAwB,KACrBjgB,GAGP,IAAK6f,GAAa7f,EAAS4f,KACvBC,GAAa7f,EAAS2f,IAAe,CACrC,MAAMQ,EAAUzB,GAAW1e,GAC3BkgB,EAAgB,IACTA,KACAC,EACHrB,KAAM,GAEVoB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiB,IAC5FpgB,EACHwT,UAAWK,GAAsB7T,EAAQwT,UAAY,KAEnD6M,EAAkB7M,GAAY,EAC9BuL,EAAeW,GAAW,EAAI3kB,KAAKoe,KAAKsG,EAAYX,IACpDwB,EAAenf,EAASyB,EACxB2d,EAAsB1M,GAAsB9Y,KAAKoe,KAAKsG,EAAYX,IAQlE0B,EAAkBzlB,KAAKqb,IAAIkK,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CAClB,MAAM2B,EAAcxB,GAAgBqB,EAAqBxB,GAEzD0B,EAAiBrL,IACb,MAAMuJ,EAAW5jB,KAAKokB,KAAKJ,EAAewB,EAAsBnL,GAChE,OAAQjU,EACJwd,IACO0B,EACCtB,EAAewB,EAAsBD,GACrCI,EACA3lB,KAAK0b,IAAIiK,EAActL,GACvBkL,EAAevlB,KAAK4lB,IAAID,EAActL,GAAG,CAE7D,MACK,GAAqB,IAAjB2J,EAEL0B,EAAiBrL,GAAMjU,EACnBpG,KAAKokB,KAAKoB,EAAsBnL,IAC3BkL,GACID,EAAkBE,EAAsBD,GAAgBlL,OAEpE,CAED,MAAMwL,EAAoBL,EAAsBxlB,KAAKoe,KAAK4F,EAAeA,EAAe,GACxF0B,EAAiBrL,IACb,MAAMuJ,EAAW5jB,KAAKokB,KAAKJ,EAAewB,EAAsBnL,GAE1DyL,EAAW9lB,KAAKF,IAAI+lB,EAAoBxL,EAAG,KACjD,OAAQjU,EACHwd,IACK0B,EACEtB,EAAewB,EAAsBD,GACrCvlB,KAAK+lB,KAAKD,GACVD,EACIN,EACAvlB,KAAKgmB,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAO,CACH9C,mBAAoBmC,GAAyB5C,GAAmB,KAChElK,KAAOiC,IACH,MAAMve,EAAU4pB,EAAcrL,GAC9B,GAAK6K,EAqBDngB,EAAM2d,KAAOrI,GAAKiI,MArBO,CACzB,IAAI9W,EAAkB8Z,EACZ,IAANjL,IAOI7O,EADAwY,EAAe,EACGb,GAAsBuC,EAAerL,EAAGve,GAGxC,GAG1B,MAAMmqB,EAA2BjmB,KAAKqb,IAAI7P,IAAoByZ,EACxDiB,EAA+BlmB,KAAKqb,IAAIjV,EAAStK,IAAYkpB,EACnEjgB,EAAM2d,KACFuD,GAA4BC,CACpC,CAKA,OADAnhB,EAAMjI,MAAQiI,EAAM2d,KAAOtc,EAAStK,EAC7BiJ,CAAK,EAGxB,CC7HA,SAASohB,GAAO7rB,GAAiK,IAAhK,UAAE+nB,EAAS,SAAE5J,EAAW,EAAG,MAAE2N,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAE1mB,EAAG,IAAEC,EAAG,UAAEilB,EAAY,GAAG,UAAEC,GAAY3qB,EAC3K,MAAMuN,EAASwa,EAAU,GACnBtd,EAAQ,CACV2d,MAAM,EACN5lB,MAAO+K,GAGL4e,EAAmBhvB,QACTkB,IAARmH,EACOC,OACCpH,IAARoH,GAEGC,KAAKqb,IAAIvb,EAAMrI,GAAKuI,KAAKqb,IAAItb,EAAMtI,GAD/BqI,EAC0CC,EAEzD,IAAI2mB,EAAYN,EAAQ3N,EACxB,MAAMkO,EAAQ9e,EAAS6e,EACjBtgB,OAA0BzN,IAAjB6tB,EAA6BG,EAAQH,EAAaG,GAK7DvgB,IAAWugB,IACXD,EAAYtgB,EAASyB,GACzB,MAAM+e,EAAavM,IAAOqM,EAAY1mB,KAAKokB,KAAK/J,EAAIgM,GAC9CQ,EAAcxM,GAAMjU,EAASwgB,EAAUvM,GACvCyM,EAAiBzM,IACnB,MAAMvL,EAAQ8X,EAAUvM,GAClB3R,EAASme,EAAWxM,GAC1BtV,EAAM2d,KAAO1iB,KAAKqb,IAAIvM,IAAUkW,EAChCjgB,EAAMjI,MAAQiI,EAAM2d,KAAOtc,EAASsC,CAAM,EAQ9C,IAAIqe,EACAC,EACJ,MAAMC,EAAsB5M,IAjCL5iB,SAkCAsN,EAAMjI,WAlCSnE,IAARmH,GAAqBrI,EAAIqI,QAAiBnH,IAARoH,GAAqBtI,EAAIsI,KAoCrFgnB,EAAsB1M,EACtB2M,EAAWjC,GAAO,CACd1C,UAAW,CAACtd,EAAMjI,MAAO2pB,EAAgB1hB,EAAMjI,QAC/C2b,SAAU0K,GAAsB0D,EAAYxM,EAAGtV,EAAMjI,OACrD6nB,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,cACF,EAGN,OADAgC,EAAmB,GACZ,CACHlE,mBAAoB,KACpB3K,KAAOiC,IAOH,IAAI6M,GAAkB,EAUtB,OATKF,QAAoCruB,IAAxBouB,IACbG,GAAkB,EAClBJ,EAAczM,GACd4M,EAAmB5M,SAMK1hB,IAAxBouB,GAAqC1M,EAAI0M,EAClCC,EAAS5O,KAAKiC,EAAI0M,KAGxBG,GAAmBJ,EAAczM,GAC3BtV,EACX,EAGZ,CClFA,MAAMoiB,GAAmBlrB,IACrB,MAAMmrB,EAAgB9sB,IAAA,IAAC,UAAEyU,GAAWzU,EAAA,OAAK2B,EAAO8S,EAAU,EAC1D,MAAO,CACHlX,MAAOA,IAAMwW,GAAMpS,OAAOmrB,GAAe,GACzCC,KAAMA,IAAM9Y,GAAY6Y,GAKxBlX,IAAKA,IAAM1B,GAAUQ,aAAeR,GAAUO,UAAYkB,YAAYC,MACzE,ECRCoX,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIlF,EAAW,EAEf,IAAIvd,EAAQyiB,EAAUpP,KAAKkK,GAC3B,MAAQvd,EAAM2d,MAAQJ,EAAWgF,IAC7BhF,GAHa,GAIbvd,EAAQyiB,EAAUpP,KAAKkK,GAE3B,OAAOA,GAAYgF,GAAuBG,IAAWnF,CACzD,CCJA,MAAMoF,GAAQ,CACVC,MAAOxB,GACPA,QAAO,GACPyB,MAAOvF,GACPA,UAAWA,GACX0C,OAAMA,IASV,SAAS8C,GAAYvtB,GAA2M,IAGxNwtB,EACAC,GAJc,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAASf,GAAiB9E,UAAW8F,EAAW,KAAExoB,EAAO,YAAW,OAAEyoB,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,KAAazjB,GAAS3K,EACtNquB,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAIN,IAAIC,EADJH,IAEA,MAAMI,EAAmBvB,GAAM/nB,IAAS0iB,GAKxC,IAAI6G,EACAD,IAAqB5G,IACK,kBAAnB8F,EAAY,KAInBe,EAAwBzH,GAAY,CAAC,EAAG,KAAM0G,EAAa,CACvDtoB,OAAO,IAEXsoB,EAAc,CAAC,EAAG,MAEtB,MAAMX,EAAYyB,EAAiB,IAAKhkB,EAASod,UAAW8F,IAC5D,IAAIgB,EACe,WAAfb,IACAa,EAAoBF,EAAiB,IAC9BhkB,EACHod,UAAW,IAAI8F,GAAatG,UAC5BpJ,WAAYxT,EAAQwT,UAAY,MAGxC,IAAI2Q,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAUzE,oBAA+BqF,IACzCZ,EAAUzE,mBAAqBwE,GAAsBC,IAEzD,MAAM,mBAAEzE,GAAuByE,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvB1E,IACAyG,EAAmBzG,EAAqBsF,EACxCoB,EAAgBD,GAAoBpB,EAAS,GAAKC,GAEtD,IAAIqB,EAAc,EAClB,MAAMC,EAAQ5a,IACV,GAAkB,OAAdua,EACA,OAOAX,EAAQ,IACRW,EAAYtpB,KAAKF,IAAIwpB,EAAWva,IAChC4Z,EAAQ,IACRW,EAAYtpB,KAAKF,IAAIiP,EAAY0a,EAAgBd,EAAOW,IAExDI,EADa,OAAbL,EACcA,EAMArpB,KAAKQ,MAAMuO,EAAYua,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAczB,GAASU,GAAS,EAAI,GAAK,GAC5DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAc1pB,KAAKD,IAAI6pB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIY,EAAQ,CAMR,MAAMrK,EAAW/d,KAAKF,IAAI4pB,EAAaD,GAAiBD,EAKxD,IAAIQ,EAAmBhqB,KAAKiqB,MAAMlM,GAK9BmM,EAAoBnM,EAAW,GAK9BmM,GAAqBnM,GAAY,IAClCmM,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBhqB,KAAKF,IAAIkqB,EAAkB5B,EAAS,GAIhC9vB,QAAQ0xB,EAAmB,KAE3B,YAAf1B,GACA4B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAflB,IACLyB,EAAiBZ,IAGzBW,EAAUjqB,EAAM,EAAG,EAAGqqB,GAAqBV,CAC/C,CAMA,MAAMzkB,EAAQ8kB,EACR,CAAEnH,MAAM,EAAO5lB,MAAOqrB,EAAY,IAClC4B,EAAe3R,KAAK0R,GACtBZ,IACAnkB,EAAMjI,MAAQosB,EAAsBnkB,EAAMjI,QAE9C,IAAI,KAAE4lB,GAAS3d,EACV8kB,GAAyC,OAAvB9G,IACnBL,EAAOiG,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMS,EAAmC,OAAbd,IACT,aAAdD,GAA2C,YAAdA,GAA2B1G,GAO7D,OANIgG,GACAA,EAAS3jB,EAAMjI,OAEfqtB,GACAC,IAEGrlB,CAAK,EAEVslB,EAAsBA,KACxBrB,GAAmBA,EAAgB3B,OACnC2B,OAAkBrwB,CAAS,EAEzB2V,EAASA,KACX8a,EAAY,OACZiB,IACAvC,IACAe,IACAS,EAAYC,EAAa,IAAI,EAE3Ba,EAASA,KACXhB,EAAY,WACZX,GAAcA,IACd4B,IACAvC,GAAwB,EAEtBwC,EAAOA,KACT,GAAI1B,EACA,OACCI,IACDA,EAAkBd,EAAOyB,IAC7B,MAAMzZ,EAAM8Y,EAAgB9Y,MAC5BqY,GAAUA,IACO,OAAbc,EACAC,EAAYpZ,EAAMmZ,EAEZC,GAA2B,aAAdF,IACnBE,EAAYpZ,GAEE,aAAdkZ,GACAP,IAEJU,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgBnxB,OAAO,EAEvBmwB,GACAsC,IAEJ,MAAMC,EAAW,CACbC,KAAIA,CAACzB,EAAS0B,IACH1C,EAAuByC,KAAKzB,EAAS0B,GAEhD,QAAIC,GACA,OAAO5R,GAAsB4Q,EACjC,EACA,QAAIgB,CAAKC,GACLA,EAAU/R,GAAsB+R,GAChCjB,EAAciB,EACG,OAAbtB,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgB9Y,MAAQya,EAAUhC,EAH9CU,EAAWsB,CAKnB,EACA,YAAIrI,GACA,MAAMA,EAA4C,OAAjCkF,EAAUzE,mBACrBwE,GAAsBC,GACtBA,EAAUzE,mBAChB,OAAOjK,GAAsBwJ,EACjC,EACA,SAAIqG,GACA,OAAOA,CACX,EACA,SAAIA,CAAMiC,GACFA,IAAajC,GAAUK,IAE3BL,EAAQiC,EACRL,EAASG,KAAO5R,GAAsB4Q,GAC1C,EACA,SAAI3kB,GACA,OAAOqkB,CACX,EACAkB,OACAO,MAAOA,KACHzB,EAAY,SACZC,EAAWK,CAAW,EAE1BrC,KAAMA,KACFuB,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZZ,GAAUA,IACVla,IAAQ,EAEZA,OAAQA,KACe,OAAfib,GACAI,EAAKJ,GACTjb,GAAQ,EAEZwc,SAAUA,KACN1B,EAAY,UAAU,EAE1B2B,OAASjB,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOS,CACX,CClSA,MAAMS,GCTN,SAActb,GACV,IAAI6U,EACJ,MAAO,UACY5rB,IAAX4rB,IACAA,EAAS7U,KACN6U,EAEf,CDEsB0G,EAAK,IAAM7zB,OAAOE,eAAeC,KAAK2zB,QAAQ7zB,UAAW,aAIzE8zB,GAAoB,IAAIxsB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAASysB,GAA2BtuB,EAAOuuB,EAAS/wB,GAAwC,IAAtC,SAAEouB,EAAQ,WAAED,KAAexjB,GAAS3K,EAOtF,KAN+B0wB,MAC3BG,GAAkBltB,IAAIotB,KACrBpmB,EAAQojB,aACc,WAAvBpjB,EAAQqjB,YACY,IAApBrjB,EAAQ0f,SACS,YAAjB1f,EAAQtF,MAER,OAAO,EAIX,IACImoB,EACAC,EAFAa,GAAa,EAQb0C,GAAgB,EAKpB,MAAMzC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAGNF,IACA,IAAI,UAAExG,EAAS,SAAEC,EAAW,IAAG,KAAE5I,EAAI,MAAE8I,GAAUvd,EAIjD,GAvCkCsmB,EAACF,EAAWpmB,IAA6B,WAAjBA,EAAQtF,MACpD,oBAAd0rB,IACClS,GAAuBlU,EAAQyU,MAqC5B6R,CAA8BF,EAAWpmB,GAAU,CACnD,MAAMumB,EAAkB3D,GAAa,IAC9B5iB,EACHmjB,OAAQ,EACRH,MAAO,IAEX,IAAIljB,EAAQ,CAAE2d,MAAM,EAAO5lB,MAAOulB,EAAU,IAC5C,MAAMoJ,EAAwB,GAK9B,IAAIpR,EAAI,EACR,MAAQtV,EAAM2d,MAAQrI,EArDV,KAsDRtV,EAAQymB,EAAgBT,OAAO1Q,GAC/BoR,EAAsB5d,KAAK9I,EAAMjI,OACjCud,GA7DQ,GA+DZmI,OAAQ7pB,EACR0pB,EAAYoJ,EACZnJ,EAAWjI,EAjEC,GAkEZX,EAAO,QACX,CACA,MAAMtgB,EE3FV,SAAsBgR,EAASihB,EAAWhJ,GAAwF,IAA7E,MAAE4F,EAAQ,EAAC,SAAE3F,EAAQ,OAAE8F,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAE5O,EAAI,MAAE8I,GAAQ9kB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3H,MAAMguB,EAAkB,CAAE,CAACL,GAAYhJ,GACnCG,IACAkJ,EAAgB5jB,OAAS0a,GAC7B,MAAMtJ,EAASgB,GAAwBR,GAMvC,OAFIhiB,MAAMC,QAAQuhB,KACdwS,EAAgBxS,OAASA,GACtB9O,EAAQlS,QAAQwzB,EAAiB,CACpCzD,QACA3F,WACApJ,OAASxhB,MAAMC,QAAQuhB,GAAmB,SAATA,EACjCyS,KAAM,OACNC,WAAYxD,EAAS,EACrByD,UAA0B,YAAfvD,EAA2B,YAAc,UAE5D,CFyEsBwD,CAAahvB,EAAMivB,MAAMjwB,QAASuvB,EAAWhJ,EAAW,IACnEpd,EACHqd,WASA5I,KAAMA,EACN8I,UAEEwJ,EAAkBA,KACpBV,GAAgB,EAChBlyB,EAAUkV,QAAQ,EAEhB2d,EAAaA,KACfX,GAAgB,EAChBjd,GAAMpS,OAAO+vB,GACblE,IACAe,GAAuB,EAU3BzvB,EAAU8yB,SAAW,KACbZ,IAEJxuB,EAAMoB,IGhId,SAA0BmkB,EAAS/nB,GAAmC,IAAjC,OAAE8tB,EAAM,WAAEE,EAAa,QAAQhuB,EAIhE,OAAO+nB,EAHO+F,GAAyB,SAAfE,GAAyBF,EAAS,IAAM,EAC1D,EACA/F,EAAU1kB,OAAS,EAE7B,CH2HkBwuB,CAAiB9J,EAAWpd,IACtCwjB,GAAcA,IACdwD,IAAY,EAoEhB,MA/DiB,CACbzB,KAAIA,CAACzB,EAAS0B,IACH1C,EAAuByC,KAAKzB,EAAS0B,GAEhD2B,eAAeC,IACXjzB,EAAUizB,SAAWA,EACrBjzB,EAAU8yB,SAAW,KACd9e,IAEX,QAAIsd,GACA,OAAO5R,GAAsB1f,EAAUswB,aAAe,EAC1D,EACA,QAAIgB,CAAKC,GACLvxB,EAAUswB,YAAc9Q,GAAsB+R,EAClD,EACA,SAAIhC,GACA,OAAOvvB,EAAUkzB,YACrB,EACA,SAAI3D,CAAMiC,GACNxxB,EAAUkzB,aAAe1B,CAC7B,EACA,YAAItI,GACA,OAAOxJ,GAAsBwJ,EACjC,EACAgI,KAAMA,KACE1B,IAEJxvB,EAAUkxB,OAIV/b,GAAYyd,GAAgB,EAEhCnB,MAAOA,IAAMzxB,EAAUyxB,QACvBxD,KAAMA,KAEF,GADAuB,GAAa,EACe,SAAxBxvB,EAAUgwB,UACV,OASJ,MAAM,YAAEM,GAAgBtwB,EACxB,GAAIswB,EAAa,CACb,MAAM8B,EAAkB3D,GAAa,IAC9B5iB,EACH+iB,UAAU,IAEdlrB,EAAMyvB,gBAAgBf,EAAgBT,OAAOrB,EAlKzC,IAkKoE5sB,MAAO0uB,EAAgBT,OAAOrB,GAAa5sB,MAlK/G,GAmKR,CACAmvB,GAAY,EAEhBnB,SAAUA,KACFQ,GAEJlyB,EAAUgxB,QAAQ,EAEtB9b,OAAQ2d,EAGhB,CIrMA,MAAMO,GAAoB,CACtB7sB,KAAM,SACN+kB,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTwH,GAAsB,CACxB9sB,KAAM,YACN2iB,SAAU,IAMR5I,GAAO,CACT/Z,KAAM,YACN+Z,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB4I,SAAU,IAERoK,GAAuBA,CAACC,EAAQryB,KAAoB,IAAlB,UAAE+nB,GAAW/nB,EACjD,OAAI+nB,EAAU1kB,OAAS,EACZ8uB,GAEF/tB,EAAeT,IAAI0uB,GACjBA,EAAS9tB,WAAW,SAxBG,CAClCc,KAAM,SACN+kB,UAAW,IACXC,QAAoB,IAsBatC,EAAU,GAtBnB,EAAIriB,KAAKoe,KAAK,KAAO,GAC7C6G,UAAW,IAsBDuH,GAEH9S,EAAI,ECzBTkT,GAAeA,CAAC9yB,EAAKgD,IAEX,WAARhD,MAKiB,kBAAVgD,IAAsBpF,MAAMC,QAAQmF,OAE1B,kBAAVA,IACNkjB,GAAQzhB,KAAKzB,IAAoB,MAAVA,GACvBA,EAAM+B,WAAW,UChBpBguB,GAAc,IAAIluB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASmuB,GAAmBr1B,GACxB,MAAOW,EAAM0E,GAASrF,EAAEs1B,MAAM,GAAI,GAAG/rB,MAAM,KAC3C,GAAa,gBAAT5I,EACA,OAAOX,EACX,MAAOwI,GAAUnD,EAAM8f,MAAMnc,IAAe,GAC5C,IAAKR,EACD,OAAOxI,EACX,MAAMqJ,EAAOhE,EAAM/F,QAAQkJ,EAAQ,IACnC,IAAI+sB,EAAeH,GAAY5uB,IAAI7F,GAAQ,EAAI,EAG/C,OAFI6H,IAAWnD,IACXkwB,GAAgB,KACb50B,EAAO,IAAM40B,EAAelsB,EAAO,GAC9C,CACA,MAAMmsB,GAAgB,oBAChBC,GAAS,IACRlN,GACHG,kBAAoB1oB,IAChB,MAAM01B,EAAY11B,EAAEmlB,MAAMqQ,IAC1B,OAAOE,EAAYA,EAAUhT,IAAI2S,IAAoB5zB,KAAK,KAAOzB,CAAC,GClBpE21B,GAAoB,IACnB5rB,GAEHoc,MAAK,GACLyP,gBAAiBzP,GACjB0P,aAAc1P,GACd+N,KAAM/N,GACN2P,OAAQ3P,GAER4P,YAAa5P,GACb6P,eAAgB7P,GAChB8P,iBAAkB9P,GAClB+P,kBAAmB/P,GACnBgQ,gBAAiBhQ,GACjBsP,OAAM,GACNW,aAAcX,IAKZY,GAAuBh0B,GAAQszB,GAAkBtzB,GCvBvD,SAASqmB,GAAkBrmB,EAAKgD,GAC5B,IAAIixB,EAAmBD,GAAoBh0B,GAI3C,OAHIi0B,IAAqBb,KACrBa,EAAmB/N,IAEhB+N,EAAiB5N,kBAClB4N,EAAiB5N,kBAAkBrjB,QACnCnE,CACV,CCTA,MAAMq1B,GAAqBv2B,GAAM,aAAa8G,KAAK9G,GCDnD,SAASw2B,GAAOnxB,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiBkxB,GAAkBlxB,QAD7D,CAGT,CCDA,SAASoxB,GAAmBhhB,EAAYpT,GACpC,OAAOoT,EAAWpT,IAAQoT,EAAoB,SAAKA,CACvD,CCVA,MAAMihB,IACc,ECWdC,GAAqB,SAAC/C,EAAWvuB,EAAOsJ,GAA4B,IAApB8G,EAAUxP,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAQ+qB,IACJ,MAAM4F,EAAkBH,GAAmBhhB,EAAYme,IAAc,CAAC,EAMhEpD,EAAQoG,EAAgBpG,OAAS/a,EAAW+a,OAAS,EAK3D,IAAI,QAAE6B,EAAU,GAAM5c,EACtB4c,GAAoBlR,GAAsBqP,GAC1C,MAAM5F,ECvBd,SAAsBvlB,EAAOuuB,EAAWjlB,EAAQ8G,GAC5C,MAAMohB,EAAqB1B,GAAavB,EAAWjlB,GACnD,IAAIic,EAEAA,EADA3qB,MAAMC,QAAQyO,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAMmoB,OAAoC51B,IAApBuU,EAAW2Q,KAAqB3Q,EAAW2Q,KAAO/gB,EAAMiB,MAC9E,IAAIywB,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAI1oB,EAAI,EAAGA,EAAIsc,EAAU1kB,OAAQoI,IAIb,OAAjBsc,EAAUtc,KACVsc,EAAUtc,GAAW,IAANA,EAAUwoB,EAAgBlM,EAAUtc,EAAI,IAEvDkoB,GAAO5L,EAAUtc,KACjB0oB,EAAoB5gB,KAAK9H,GAGD,kBAAjBsc,EAAUtc,IACA,SAAjBsc,EAAUtc,IACO,MAAjBsc,EAAUtc,KACVyoB,EAA0BnM,EAAUtc,IAG5C,GAAIuoB,GACAG,EAAoB9wB,QACpB6wB,EACA,IAAK,IAAIzoB,EAAI,EAAGA,EAAI0oB,EAAoB9wB,OAAQoI,IAE5Csc,EADcoM,EAAoB1oB,IACfoa,GAAkBkL,EAAWmD,GAGxD,OAAOnM,CACX,CDf0BqM,CAAa5xB,EAAOuuB,EAAWjlB,EAAQioB,GAMnDM,EAAiBtM,EAAU,GAC3BuM,EAAiBvM,EAAUA,EAAU1kB,OAAS,GAC9CkxB,EAAqBjC,GAAavB,EAAWsD,GAC7CL,EAAqB1B,GAAavB,EAAWuD,GACnDlW,GAAQmW,IAAuBP,EAAoB,6BAA6BjD,WAAmBsD,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,iCACrQ,IAAI3pB,EAAU,CACVod,YACA5J,SAAU3b,EAAMiC,cAChB2a,KAAM,aACH2U,EACHpG,OAAQ6B,EACRpB,SAAWjxB,IACPqF,EAAMoB,IAAIzG,GACV42B,EAAgB3F,UAAY2F,EAAgB3F,SAASjxB,EAAE,EAE3DgxB,WAAYA,KACRA,IACA4F,EAAgB5F,YAAc4F,EAAgB5F,YAAY,GAwBlE,GFrER,SAA4BnuB,GAA2I,IAA1I,KAAEw0B,EAAM7G,MAAO8G,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE9G,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAExK,EAAI,QAAEiM,KAAY5c,GAAY5S,EACjK,QAASlD,OAAO6R,KAAKiE,GAAYvP,MACrC,CEkDawxB,CAAoBd,KACrBppB,EAAU,IACHA,KACAynB,GAAqBrB,EAAWpmB,KAQvCA,EAAQqd,WACRrd,EAAQqd,SAAW1J,GAAsB3T,EAAQqd,WAEjDrd,EAAQojB,cACRpjB,EAAQojB,YAAczP,GAAsB3T,EAAQojB,eAEnDwG,IACAP,GACDtV,KACyB,IAAzBqV,EAAgB1uB,MAChBwuB,GAKA,OEhFZ,SAA+B7zB,GAA8C,IAA7C,UAAE+nB,EAAS,MAAE4F,EAAK,SAAES,EAAQ,WAAED,GAAanuB,EACvE,MAAM80B,EAAWA,KACb1G,GAAYA,EAASrG,EAAUA,EAAU1kB,OAAS,IAClD8qB,GAAcA,IAQP,CACHiC,KAAM,EACN/B,MAAO,EACPrG,SAAU,EACVgI,KAAOld,GACPyd,MAAQzd,GACRia,KAAOja,GACPod,KAAOzB,IACHA,IACOD,QAAQC,WAEnBza,OAASlB,GACT0d,SAAW1d,KAGnB,OAAO6a,EACDJ,GAAa,CACXxF,UAAW,CAAC,EAAG,GACfC,SAAU,EACV2F,QACAQ,WAAY2G,IAEdA,GACV,CF8CmBC,CAAuBrW,GACxB,IAAK/T,EAASgjB,MAAO,GACrBhjB,GAKV,IAMCiI,EAAWoiB,WACRxyB,EAAMivB,OACNjvB,EAAMivB,MAAMjwB,mBAAmByzB,cAK9BzyB,EAAMivB,MAAMxY,WAAWmV,SAAU,CAClC,MAAM8G,EAAuBpE,GAA2BtuB,EAAOuuB,EAAWpmB,GAC1E,GAAIuqB,EACA,OAAOA,CACf,CAIA,OAAO3H,GAAa5iB,EAAQ,CAEpC,EG/GA,SAASwqB,GAAwB3yB,GAC7B,OAAOxE,QAAQwG,EAAchC,IAAUA,EAAM6Q,IACjD,CCDA,MAAM+hB,GAAqBj4B,GAAM,iBAAiB8G,KAAK9G,GCHvD,SAASk4B,GAAc1N,EAAK2N,IACG,IAAvB3N,EAAI3jB,QAAQsxB,IACZ3N,EAAIpU,KAAK+hB,EACjB,CACA,SAASC,GAAW5N,EAAK2N,GACrB,MAAM7hB,EAAQkU,EAAI3jB,QAAQsxB,GACtB7hB,GAAS,GACTkU,EAAIjU,OAAOD,EAAO,EAC1B,CCNA,MAAM+hB,GACFviB,WAAAA,GACIC,KAAKuiB,cAAgB,EACzB,CACApiB,GAAAA,CAAIqD,GAEA,OADA2e,GAAcniB,KAAKuiB,cAAe/e,GAC3B,IAAM6e,GAAWriB,KAAKuiB,cAAe/e,EAChD,CACAgf,MAAAA,CAAOje,EAAGC,EAAGuH,GACT,MAAM0W,EAAmBziB,KAAKuiB,cAAcpyB,OAC5C,GAAKsyB,EAEL,GAAyB,IAArBA,EAIAziB,KAAKuiB,cAAc,GAAGhe,EAAGC,EAAGuH,QAG5B,IAAK,IAAIxT,EAAI,EAAGA,EAAIkqB,EAAkBlqB,IAAK,CAKvC,MAAMiL,EAAUxD,KAAKuiB,cAAchqB,GACnCiL,GAAWA,EAAQe,EAAGC,EAAGuH,EAC7B,CAER,CACA2W,OAAAA,GACI,OAAO1iB,KAAKuiB,cAAcpyB,MAC9B,CACAuQ,KAAAA,GACIV,KAAKuiB,cAAcpyB,OAAS,CAChC,EC/BJ,MAGMwyB,GAAsB,CACxBr0B,aAASnD,GAOb,MAAMy3B,GASF7iB,WAAAA,CAAYhB,GAAoB,IAAA8jB,EAAA,SAAdprB,EAAOvH,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EApBhBZ,MAyBT0Q,KAAK8iB,QAAU,UAMf9iB,KAAK+iB,UAAY,EAMjB/iB,KAAKgjB,YAAc,EAQnBhjB,KAAKijB,kBAAmB,EAIxBjjB,KAAKkjB,OAAS,CAAC,EACfljB,KAAKmjB,gBAAkB,SAACl5B,GAAqB,IAAlB4E,IAAMqB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,KAAAA,UAAA,GAC7B2yB,EAAKhY,KAAOgY,EAAKv0B,QACjBu0B,EAAKv0B,QAAUrE,EAEf,MAAM,MAAEqX,EAAK,UAAEC,GAAcP,GACzB6hB,EAAKG,cAAgBzhB,IACrBshB,EAAKE,UAAYzhB,EACjBuhB,EAAKG,YAAczhB,EACnBV,GAAMuiB,WAAWP,EAAKQ,wBAGtBR,EAAKhY,OAASgY,EAAKv0B,SAAWu0B,EAAKK,OAAOI,QAC1CT,EAAKK,OAAOI,OAAOd,OAAOK,EAAKv0B,SAG/Bu0B,EAAKK,OAAOK,gBACZV,EAAKK,OAAOK,eAAef,OAAOK,EAAKtxB,eAGvC1C,GAAUg0B,EAAKK,OAAOM,eACtBX,EAAKK,OAAOM,cAAchB,OAAOK,EAAKv0B,QAE9C,EASA0R,KAAKqjB,sBAAwB,IAAMxiB,GAAMuiB,WAAWpjB,KAAKyjB,eAUzDzjB,KAAKyjB,cAAgB32B,IAAmB,IAAlB,UAAEyU,GAAWzU,EAC3ByU,IAAcvB,KAAKgjB,cACnBhjB,KAAK6K,KAAO7K,KAAK1R,QACb0R,KAAKkjB,OAAOK,gBACZvjB,KAAKkjB,OAAOK,eAAef,OAAOxiB,KAAKzO,eAE/C,EAEJyO,KAAK0jB,aAAc,EACnB1jB,KAAK6K,KAAO7K,KAAK1R,QAAUyQ,EAC3BiB,KAAKijB,kBArGI3zB,EAqGuB0Q,KAAK1R,SApGjCokB,MAAM/f,WAAWrD,KAqGrB0Q,KAAKue,MAAQ9mB,EAAQ8mB,KACzB,CAyCAoF,QAAAA,CAASC,GAIL,OAAO5jB,KAAK6jB,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGtgB,EAAWrB,GACLlC,KAAKkjB,OAAO3f,KACbvD,KAAKkjB,OAAO3f,GAAa,IAAI+e,IAEjC,MAAMwB,EAAc9jB,KAAKkjB,OAAO3f,GAAWpD,IAAI+B,GAC/C,MAAkB,WAAdqB,EACO,KACHugB,IAKAjjB,GAAMmC,MAAK,KACFhD,KAAKkjB,OAAOI,OAAOZ,WACpB1iB,KAAK6Z,MACT,GACF,EAGHiK,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiBhkB,KAAKkjB,OAC7BljB,KAAKkjB,OAAOc,GAAetjB,OAEnC,CAMAujB,MAAAA,CAAOC,EAAeC,GAClBnkB,KAAKkkB,cAAgBA,EACrBlkB,KAAKmkB,kBAAoBA,CAC7B,CAgBAzzB,GAAAA,CAAIzG,GAAkB,IAAf4E,IAAMqB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,KAAAA,UAAA,GACJrB,GAAWmR,KAAKkkB,cAIjBlkB,KAAKkkB,cAAcj6B,EAAG+V,KAAKmjB,iBAH3BnjB,KAAKmjB,gBAAgBl5B,EAAG4E,EAKhC,CACAkwB,eAAAA,CAAgBlU,EAAMvc,EAASgT,GAC3BtB,KAAKtP,IAAIpC,GACT0R,KAAK6K,KAAOA,EACZ7K,KAAK+iB,UAAYzhB,CACrB,CAKA8iB,IAAAA,CAAKn6B,GACD+V,KAAKmjB,gBAAgBl5B,GACrB+V,KAAK6K,KAAO5gB,EACZ+V,KAAK6Z,OACD7Z,KAAKmkB,mBACLnkB,KAAKmkB,mBACb,CAQA5zB,GAAAA,GAII,OAHIoyB,GAAoBr0B,SACpBq0B,GAAoBr0B,QAAQ+R,KAAKL,MAE9BA,KAAK1R,OAChB,CAIA+1B,WAAAA,GACI,OAAOrkB,KAAK6K,IAChB,CAQAtZ,WAAAA,GAEI,OAAOyO,KAAKijB,iBAEJzN,GAAkB7iB,WAAWqN,KAAK1R,SAC9BqE,WAAWqN,KAAK6K,MAAO7K,KAAK+iB,WAClC,CACV,CAaA14B,KAAAA,CAAMi6B,GAEF,OADAtkB,KAAK6Z,OACE,IAAIyB,SAASC,IAChBvb,KAAK0jB,aAAc,EACnB1jB,KAAKpU,UAAY04B,EAAe/I,GAC5Bvb,KAAKkjB,OAAOqB,gBACZvkB,KAAKkjB,OAAOqB,eAAe/B,QAC/B,IACDxF,MAAK,KACAhd,KAAKkjB,OAAOsB,mBACZxkB,KAAKkjB,OAAOsB,kBAAkBhC,SAElCxiB,KAAKykB,gBAAgB,GAE7B,CAMA5K,IAAAA,GACQ7Z,KAAKpU,YACLoU,KAAKpU,UAAUiuB,OACX7Z,KAAKkjB,OAAOwB,iBACZ1kB,KAAKkjB,OAAOwB,gBAAgBlC,UAGpCxiB,KAAKykB,gBACT,CAMAE,WAAAA,GACI,QAAS3kB,KAAKpU,SAClB,CACA64B,cAAAA,UACWzkB,KAAKpU,SAChB,CAUAg5B,OAAAA,GACI5kB,KAAK+jB,iBACL/jB,KAAK6Z,OACD7Z,KAAKmkB,mBACLnkB,KAAKmkB,mBAEb,EAEJ,SAASU,GAAY9lB,EAAMtH,GACvB,OAAO,IAAImrB,GAAY7jB,EAAMtH,EACjC,CC3UA,MAAMqtB,GAAiB76B,GAAOkI,GAASA,EAAKpB,KAAK9G,GCK3C86B,GAAsB,CAACtyB,EAAQkB,GAAID,EAASD,EAASI,GAAID,GCLlD,CACT7C,KAAO9G,GAAY,SAANA,EACbyI,MAAQzI,GAAMA,IDOZ+6B,GAA0B/6B,GAAM86B,GAAoBhU,KAAK+T,GAAc76B,IEJvEg7B,GAAa,IAAIF,GAAqB3U,GAAOoC,ICKnD,SAAS0S,GAAep3B,EAAexB,EAAKgD,GACpCxB,EAAcq3B,SAAS74B,GACvBwB,EAAcs3B,SAAS94B,GAAKoE,IAAIpB,GAGhCxB,EAAcu3B,SAAS/4B,EAAKu4B,GAAYv1B,GAEhD,CACA,SAASg2B,GAAUx3B,EAAegQ,GAC9B,MAAM0B,EAAWuL,GAAejd,EAAegQ,GAC/C,IAAI,cAAE2B,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,KAAM9G,GAAW4G,EAAW1R,EAAcy3B,qBAAqB/lB,GAAU,GAAS,CAAC,EAC3H5G,EAAS,IAAKA,KAAW6G,GACzB,IAAK,MAAMnT,KAAOsM,EAAQ,CAEtBssB,GAAep3B,EAAexB,EADhB+R,GAA6BzF,EAAOtM,IAEtD,CACJ,CAuEA,SAASk5B,GAAwBl5B,EAAKoT,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWpT,IAAQoT,EAAoB,SAAKA,GAC7C2Q,IAC3B,CC3FA,SAASoV,GAAoB34B,EAAoCR,GAAK,IAAxC,cAAEo5B,EAAa,eAAEC,GAAgB74B,EAC3D,MAAM84B,EAAcF,EAAc57B,eAAewC,KAAgC,IAAxBq5B,EAAer5B,GAExE,OADAq5B,EAAer5B,IAAO,EACfs5B,CACX,CACA,SAASC,GAAoBv2B,EAAOsJ,GAChC,MAAMtK,EAAUgB,EAAMiB,MACtB,IAAIrG,MAAMC,QAAQyO,GAOd,OAAOtK,IAAYsK,EANnB,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAOzI,OAAQoI,IAC/B,GAAIK,EAAOL,KAAOjK,EACd,OAAO,CAMvB,CACA,SAASw3B,GAAch4B,EAAegQ,GAA0D,IAA9C,MAAE2c,EAAQ,EAAC,mBAAEsL,EAAkB,KAAE5zB,GAAMjC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,GACrF,WAAEwP,EAAa5R,EAAcoxB,uBAAsB,cAAEzf,KAAkB7G,GAAW9K,EAAcy3B,qBAAqBznB,GACzH,MAAMkoB,EAAal4B,EAAcs3B,SAAS,cACtCW,IACArmB,EAAaqmB,GACjB,MAAME,EAAa,GACbC,EAAqB/zB,GACvBrE,EAAcgB,gBACdhB,EAAcgB,eAAeq3B,WAAWh0B,GAC5C,IAAK,MAAM7F,KAAOsM,EAAQ,CACtB,MAAMtJ,EAAQxB,EAAcs3B,SAAS94B,GAC/BqT,EAAc/G,EAAOtM,GAC3B,IAAKgD,QACenE,IAAhBwU,GACCumB,GACGT,GAAqBS,EAAoB55B,GAC7C,SAEJ,MAAMu0B,EAAkB,CACpBpG,QACA6B,QAAS,KACNoE,GAAmBhhB,GAAc,CAAC,EAAGpT,IAM5C,GAAIqC,OAAOy3B,wBAAyB,CAChC,MAAMC,EAAWv4B,EAAciY,WAAWtc,GAC1C,GAAI48B,EAAU,CACV,MAAM/J,EAAU3tB,OAAOy3B,wBAAwBC,EAAU/5B,EAAKgD,EAAOuR,IACrD,OAAZyb,IACAuE,EAAgBvE,QAAUA,EAC1BuE,EAAgBiB,WAAY,EAEpC,CACJ,CACA,IAAIwE,GAAWzF,EAAgBiB,YAC1B+D,GAAoBv2B,EAAOqQ,GAahC,GAZ6B,WAAzBkhB,EAAgB1uB,OACf7C,EAAMiC,eAAiBsvB,EAAgB5V,YACxCqb,GAAU,GAOVh3B,EAAM1D,YACN06B,GAAU,GAEVA,EACA,SACJh3B,EAAMjF,MAAMu2B,GAAmBt0B,EAAKgD,EAAOqQ,EAAa7R,EAAcy4B,oBAAsBr1B,EAAeT,IAAInE,GACzG,CAAE6F,MAAM,GACR0uB,IACN,MAAMj1B,EAAY0D,EAAM1D,UACpBq2B,GAAwB+D,KACxBA,EAAW7lB,IAAI7T,GACfV,EAAUoxB,MAAK,IAAMgJ,EAAW1lB,OAAOhU,MAE3C25B,EAAW5lB,KAAKzU,EACpB,CAMA,OALI6T,GACA6b,QAAQ3T,IAAIse,GAAYjJ,MAAK,KACzBvd,GAAiB6lB,GAAUx3B,EAAe2R,EAAc,IAGzDwmB,CACX,CCjGA,SAASO,GAAe14B,EAAe24B,GAAuB,IAAdhvB,EAAOvH,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMsP,EAAWuL,GAAejd,EAAe24B,EAAShvB,EAAQxH,QAChE,IAAI,WAAEyP,EAAa5R,EAAcoxB,wBAA0B,CAAC,GAAM1f,GAAY,CAAC,EAC3E/H,EAAQsuB,qBACRrmB,EAAajI,EAAQsuB,oBAMzB,MAAMW,EAAelnB,EACf,IAAM8b,QAAQ3T,IAAIme,GAAch4B,EAAe0R,EAAU/H,IACzD,IAAM6jB,QAAQC,UAKdoL,EAAqB74B,EAAc84B,iBAAmB94B,EAAc84B,gBAAgB5xB,KACpF,WAAsB,IAArB6xB,EAAY32B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEsxB,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBhiB,EAClE,OAkBZ,SAAyB5R,EAAe24B,GAAgF,IAAvEjF,EAAatxB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGuxB,EAAevxB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGwxB,EAAgBxxB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGuH,EAAOvH,UAAAC,OAAA,EAAAD,UAAA,QAAA/E,EAClH,MAAM86B,EAAa,GACba,GAAsBh5B,EAAc84B,gBAAgB5xB,KAAO,GAAKysB,EAChEsF,EAA+C,IAArBrF,EAC1B,WAAM,OAAJxxB,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAAUuxB,CAAe,EAC9B,WAAM,OAAKqF,GAAT52B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAA+BuxB,CAAe,EAUzD,OATAv3B,MAAMmmB,KAAKviB,EAAc84B,iBACpBI,KAAKC,IACL1nB,SAAQ,CAAC4G,EAAO5N,KACjB4N,EAAMqc,OAAO,iBAAkBiE,GAC/BR,EAAW5lB,KAAKmmB,GAAergB,EAAOsgB,EAAS,IACxChvB,EACHgjB,MAAO+G,EAAgBuF,EAAwBxuB,KAChDykB,MAAK,IAAM7W,EAAMqc,OAAO,oBAAqBiE,KAAU,IAEvDnL,QAAQ3T,IAAIse,EACvB,CAlCmBiB,CAAgBp5B,EAAe24B,EAASjF,EAAgBqF,EAAcpF,EAAiBC,EAAkBjqB,EACpH,EACE,IAAM6jB,QAAQC,WAKd,KAAE+F,GAAS5hB,EACjB,GAAI4hB,EAAM,CACN,MAAO6F,EAAOC,GAAiB,mBAAT9F,EAChB,CAACoF,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQnK,MAAK,IAAMoK,KAC9B,CAEI,OAAO9L,QAAQ3T,IAAI,CAAC+e,IAAgBC,EAAmBlvB,EAAQgjB,QAEvE,CAkBA,SAASwM,GAAgB1iB,EAAGC,GACxB,OAAOD,EAAE8iB,iBAAiB7iB,EAC9B,CCpDA,MAAM8iB,GAAuB,IAAIh9B,GAAsB+pB,UACjDkT,GAAoBj9B,EAAqB6F,OAC/C,SAASq3B,GAAY15B,GACjB,OAAQm4B,GAAe3K,QAAQ3T,IAAIse,EAAWtZ,KAAI7f,IAAA,IAAC,UAAElB,EAAS,QAAE6L,GAAS3K,EAAA,OCP7E,SAA8BgB,EAAegQ,GAA0B,IAE/DlS,EAFiD6L,EAAOvH,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFApC,EAAc00B,OAAO,iBAAkB1kB,GAEnC5T,MAAMC,QAAQ2T,GAAa,CAC3B,MAAMmoB,EAAanoB,EAAW6O,KAAK8Z,GAAYD,GAAe14B,EAAe24B,EAAShvB,KACtF7L,EAAY0vB,QAAQ3T,IAAIse,EAC5B,MACK,GAA0B,kBAAfnoB,EACZlS,EAAY46B,GAAe14B,EAAegQ,EAAYrG,OAErD,CACD,MAAMgwB,EAA2C,oBAAf3pB,EAC5BiN,GAAejd,EAAegQ,EAAYrG,EAAQxH,QAClD6N,EACNlS,EAAY0vB,QAAQ3T,IAAIme,GAAch4B,EAAe25B,EAAoBhwB,GAC7E,CACA,OAAO7L,EAAUoxB,MAAK,IAAMlvB,EAAc00B,OAAO,oBAAqB1kB,IAC1E,CDVkF4pB,CAAqB55B,EAAelC,EAAW6L,EAAQ,IACzI,CACA,SAASkwB,GAAqB75B,GAC1B,IAAIpD,EAAU88B,GAAY15B,GAC1B,MAAMyJ,EA6RC,CACH7M,QAASk9B,IAAgB,GACzBC,YAAaD,KACb5hB,WAAY4hB,KACZ/tB,SAAU+tB,KACVE,UAAWF,KACXG,WAAYH,KACZ/7B,KAAM+7B,MAnSV,IAAII,GAAkB,EAKtB,MAAMC,EAA0BA,CAACvmB,EAAK5D,KAClC,MAAM0B,EAAWuL,GAAejd,EAAegQ,GAC/C,GAAI0B,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,KAAkB7G,GAAW4G,EACjDkC,EAAM,IAAKA,KAAQ9I,KAAW6G,EAClC,CACA,OAAOiC,CAAG,EAmBd,SAAS3S,EAAe0I,EAASywB,GAC7B,MAAMz9B,EAAQqD,EAAciY,WACtB7a,EAAU4C,EAAcq6B,mBAAkB,IAAS,CAAC,EAKpDlC,EAAa,GAKbmC,EAAc,IAAIj3B,IAMxB,IAAIk3B,EAAkB,CAAC,EAKnBC,EAAsBrO,IAO1B,IAAK,IAAI1hB,EAAI,EAAGA,EAAIgvB,GAAmBhvB,IAAK,CACxC,MAAMpG,EAAOm1B,GAAqB/uB,GAC5BgwB,EAAYhxB,EAAMpF,GAClB1G,OAAuBN,IAAhBV,EAAM0H,GAAsB1H,EAAM0H,GAAQjH,EAAQiH,GACzDq2B,EAAgBx+B,EAAeyB,GAK/Bg9B,EAAct2B,IAAS+1B,EAAoBK,EAAU5iB,SAAW,MAClD,IAAhB8iB,IACAH,EAAsB/vB,GAO1B,IAAImwB,EAAcj9B,IAASP,EAAQiH,IAAS1G,IAAShB,EAAM0H,IAASq2B,EAepE,GAXIE,GACAV,GACAl6B,EAAc66B,yBACdD,GAAc,GAMlBH,EAAU7C,cAAgB,IAAK2C,IAI7BE,EAAU5iB,UAA4B,OAAhB8iB,IAElBh9B,IAAS88B,EAAUK,UAErBx+B,EAAoBqB,IACJ,mBAATA,EACP,SAQJ,IAAIo9B,EADqBC,GAAuBP,EAAUK,SAAUn9B,IAG/D0G,IAAS+1B,GACNK,EAAU5iB,WACT+iB,GACDF,GAEHjwB,EAAI+vB,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiB9+B,MAAMC,QAAQsB,GAAQA,EAAO,CAACA,GAKrD,IAAIw9B,EAAiBD,EAAevnB,OAAOwmB,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiB98B,IACnBu8B,GAAoB,EAChBT,EAAY33B,IAAInE,KAChBy8B,GAAuB,EACvBX,EAAY3nB,OAAOnU,IAEvBi8B,EAAU5C,eAAer5B,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAO68B,EAAS,CACvB,MAAMve,EAAOqe,EAAe38B,GACtBue,EAAOqe,EAAmB58B,GAEhC,GAAI+7B,EAAgBv+B,eAAewC,GAC/B,SAIJ,IAAI+8B,GAAkB,EAElBA,EADAprB,GAAkB2M,IAAS3M,GAAkB4M,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,EAE3Bwe,OACal+B,IAATyf,EAEAwe,EAAc98B,GAId87B,EAAYjoB,IAAI7T,QAGNnB,IAATyf,GAAsBwd,EAAY33B,IAAInE,GAK3C88B,EAAc98B,GAOdi8B,EAAU7C,cAAcp5B,IAAO,CAEvC,CAKAi8B,EAAUK,SAAWn9B,EACrB88B,EAAUW,mBAAqBD,EAI3BV,EAAU5iB,WACV0iB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmBl6B,EAAcS,wBACjCs6B,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtC9C,EAAW5lB,QAAQ2oB,EAAerc,KAAK/gB,IAAS,CAC5CA,UAAWA,EACX6L,QAAS,CAAEtF,UAASsF,OAGhC,CAMA,GAAI2wB,EAAYpzB,KAAM,CAClB,MAAMs0B,EAAoB,CAAC,EAC3BlB,EAAY7oB,SAASjT,IACjB,MAAMi9B,EAAiBz7B,EAAc07B,cAAcl9B,QAC5BnB,IAAnBo+B,IACAD,EAAkBh9B,GAAOi9B,EAC7B,IAEJtD,EAAW5lB,KAAK,CAAEzU,UAAW09B,GACjC,CACA,IAAIG,EAAgB3+B,QAAQm7B,EAAW91B,QAOvC,OANI63B,IACmB,IAAlBv9B,EAAMQ,SAAqBR,EAAMQ,UAAYR,EAAMC,SACnDoD,EAAc66B,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgB/+B,EAAQu7B,GAAc3K,QAAQC,SACzD,CAkBA,MAAO,CACHxsB,iBACAkX,UAhBJ,SAAmB9T,EAAMwT,EAAUlO,GAC/B,IAAI0C,EAEJ,GAAI5C,EAAMpF,GAAMwT,WAAaA,EACzB,OAAO2V,QAAQC,UAEsB,QAAxCphB,EAAKrM,EAAc84B,uBAAoC,IAAPzsB,GAAyBA,EAAGoF,SAAS4G,IAAY,IAAIhM,EAAI,OAAuC,QAA/BA,EAAKgM,EAAMrX,sBAAmC,IAAPqL,OAAgB,EAASA,EAAG8L,UAAU9T,EAAMwT,EAAS,IAC9MpO,EAAMpF,GAAMwT,SAAWA,EACvB,MAAMsgB,EAAal3B,EAAe0I,EAAStF,GAC3C,IAAK,MAAM7F,KAAOiL,EACdA,EAAMjL,GAAKo5B,cAAgB,CAAC,EAEhC,OAAOO,CACX,EAIIyD,mBArPJ,SAA4BC,GACxBj/B,EAAUi/B,EAAa77B,EAC3B,EAoPIq4B,SAAUA,IAAM5uB,EAExB,CACA,SAASuxB,GAAuBje,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEX3gB,MAAMC,QAAQygB,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAAS+c,KACL,MAAO,CACHjiB,SAFyBzV,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GAGzBw1B,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBuD,mBAAoB,CAAC,EAE7B,CExSA,IAAIp5B,GAAK,ECCT,MAAMm2B,GAAa,CACfr6B,UAAW,CACP2Z,QCDR,cAA+BA,GAM3BxF,WAAAA,CAAYyF,GACRqC,MAAMrC,GACNA,EAAK1W,iBAAmB0W,EAAK1W,eAAiB64B,GAAqBniB,GACvE,CACAokB,mCAAAA,GACI,MAAM,QAAEl/B,GAAYsV,KAAKwF,KAAKO,WAC9B/F,KAAKtQ,UACDtF,EAAoBM,KACpBsV,KAAKtQ,QAAUhF,EAAQm/B,UAAU7pB,KAAKwF,MAE9C,CAIA/V,KAAAA,GACIuQ,KAAK4pB,qCACT,CACAn7B,MAAAA,GACI,MAAM,QAAE/D,GAAYsV,KAAKwF,KAAKO,YACtBrb,QAASo/B,GAAgB9pB,KAAKwF,KAAKjI,WAAa,CAAC,EACrD7S,IAAYo/B,GACZ9pB,KAAK4pB,qCAEb,CACAl6B,OAAAA,GAAY,ID3BZ7D,KAAM,CACF0Z,QDLR,cAAmCA,GAC/BxF,WAAAA,GACI8H,SAAS3X,WACT8P,KAAKlQ,GAAKA,IACd,CACArB,MAAAA,GACI,IAAKuR,KAAKwF,KAAKvX,gBACX,OACJ,MAAM,UAAE87B,EAAS,eAAEC,EAAc,OAAE/5B,GAAW+P,KAAKwF,KAAKvX,iBAChD87B,UAAWE,GAAkBjqB,KAAKwF,KAAK0kB,qBAAuB,CAAC,EACvE,IAAKlqB,KAAKwF,KAAK1W,gBAAkBi7B,IAAcE,EAC3C,OAEJ,MAAME,EAAgBnqB,KAAKwF,KAAK1W,eAAemX,UAAU,QAAS8jB,EAAW,CAAE95B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS+P,KAAKwF,KAAKO,WAAW9V,SACxJ+5B,IAAmBD,GACnBI,EAAcnN,MAAK,IAAMgN,EAAehqB,KAAKlQ,KAErD,CACAL,KAAAA,GACI,MAAM,SAAE26B,GAAapqB,KAAKwF,KAAKvX,iBAAmB,CAAC,EAC/Cm8B,IACApqB,KAAKtQ,QAAU06B,EAASpqB,KAAKlQ,IAErC,CACAJ,OAAAA,GAAY,KG3BV+G,GAAWA,CAAC8N,EAAGC,IAAMhS,KAAKqb,IAAItJ,EAAIC,GCWxC,MAAM6lB,GACFtqB,WAAAA,CAAY8D,EAAOymB,GAAgF,IAAtE,mBAAE9hC,EAAkB,cAAE+hC,EAAa,iBAAEC,GAAmB,GAAOt6B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE5F,GA5DA8P,KAAKgJ,WAAa,KAIlBhJ,KAAKyqB,cAAgB,KAIrBzqB,KAAK0qB,kBAAoB,KAIzB1qB,KAAKsqB,SAAW,CAAC,EAIjBtqB,KAAKuqB,cAAgB57B,OACrBqR,KAAK2qB,YAAc,KACf,IAAM3qB,KAAKyqB,gBAAiBzqB,KAAK0qB,kBAC7B,OACJ,MAAM5kB,EAAO8kB,GAAW5qB,KAAK0qB,kBAAmB1qB,KAAK6qB,SAC/CC,EAAmC,OAApB9qB,KAAKgJ,WAIpB+hB,EDxClB,SAAoBxmB,EAAGC,GAEnB,MAAMwmB,EAASv0B,GAAS8N,EAAE9S,EAAG+S,EAAE/S,GACzBw5B,EAASx0B,GAAS8N,EAAE7S,EAAG8S,EAAE9S,GAC/B,OAAOc,KAAKoe,KAAKoa,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWplB,EAAKxL,OAAQ,CAAE7I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKo5B,IAAiBC,EAClB,OACJ,MAAM,MAAE5mB,GAAU2B,GACZ,UAAEvE,GAAcP,GACtBhB,KAAK6qB,QAAQxqB,KAAK,IAAK8D,EAAO5C,cAC9B,MAAM,QAAE4pB,EAAO,OAAEC,GAAWprB,KAAKsqB,SAC5BQ,IACDK,GAAWA,EAAQnrB,KAAKyqB,cAAe3kB,GACvC9F,KAAKgJ,WAAahJ,KAAKyqB,eAE3BW,GAAUA,EAAOprB,KAAKyqB,cAAe3kB,EAAK,EAE9C9F,KAAKqrB,kBAAoB,CAACxnB,EAAOiC,KAC7B9F,KAAKyqB,cAAgB5mB,EACrB7D,KAAK0qB,kBAAoBY,GAAexlB,EAAM9F,KAAKxX,oBAEnDqY,GAAMpS,OAAOuR,KAAK2qB,aAAa,EAAK,EAExC3qB,KAAKurB,gBAAkB,CAAC1nB,EAAOiC,KAC3B9F,KAAKwrB,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoB3rB,KAAKsqB,SAGtD,GAFItqB,KAAKwqB,kBACLmB,GAAmBA,KACjB3rB,KAAKyqB,gBAAiBzqB,KAAK0qB,kBAC7B,OACJ,MAAMkB,EAAUhB,GAA0B,kBAAf/mB,EAAM1R,KAC3B6N,KAAK0qB,kBACLY,GAAexlB,EAAM9F,KAAKxX,oBAAqBwX,KAAK6qB,SACtD7qB,KAAKgJ,YAAcyiB,GACnBA,EAAM5nB,EAAO+nB,GAEjBF,GAAgBA,EAAa7nB,EAAO+nB,EAAQ,GAG3ChoB,GAAiBC,GAClB,OACJ7D,KAAKwqB,iBAAmBA,EACxBxqB,KAAKsqB,SAAWA,EAChBtqB,KAAKxX,mBAAqBA,EAC1BwX,KAAKuqB,cAAgBA,GAAiB57B,OACtC,MACMk9B,EAAcP,GADPrnB,GAAiBJ,GACW7D,KAAKxX,qBACxC,MAAE2b,GAAU0nB,GACZ,UAAEtqB,GAAcP,GACtBhB,KAAK6qB,QAAU,CAAC,IAAK1mB,EAAO5C,cAC5B,MAAM,eAAEuqB,GAAmBxB,EAC3BwB,GACIA,EAAejoB,EAAO+mB,GAAWiB,EAAa7rB,KAAK6qB,UACvD7qB,KAAK+rB,gBAAkBtnB,GAAKJ,GAAgBrE,KAAKuqB,cAAe,cAAevqB,KAAKqrB,mBAAoBhnB,GAAgBrE,KAAKuqB,cAAe,YAAavqB,KAAKurB,iBAAkBlnB,GAAgBrE,KAAKuqB,cAAe,gBAAiBvqB,KAAKurB,iBAC9O,CACAS,cAAAA,CAAe1B,GACXtqB,KAAKsqB,SAAWA,CACpB,CACAkB,GAAAA,GACIxrB,KAAK+rB,iBAAmB/rB,KAAK+rB,kBAC7BhrB,GAAYf,KAAK2qB,YACrB,EAEJ,SAASW,GAAexlB,EAAMtd,GAC1B,OAAOA,EAAqB,CAAE2b,MAAO3b,EAAmBsd,EAAK3B,QAAW2B,CAC5E,CACA,SAASmmB,GAAc1nB,EAAGC,GACtB,MAAO,CAAE/S,EAAG8S,EAAE9S,EAAI+S,EAAE/S,EAAGC,EAAG6S,EAAE7S,EAAI8S,EAAE9S,EACtC,CACA,SAASk5B,GAAU99B,EAAY+9B,GAAS,IAApB,MAAE1mB,GAAOrX,EACzB,MAAO,CACHqX,QACA7C,MAAO2qB,GAAc9nB,EAAO+nB,GAAgBrB,IAC5CvwB,OAAQ2xB,GAAc9nB,EAAOgoB,GAAiBtB,IAC9C5f,SAAU1Z,GAAYs5B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQ16B,OAAS,EACpC,CACA,SAASoB,GAAYs5B,EAAS9H,GAC1B,GAAI8H,EAAQ16B,OAAS,EACjB,MAAO,CAAEsB,EAAG,EAAGC,EAAG,GAEtB,IAAI6G,EAAIsyB,EAAQ16B,OAAS,EACrBi8B,EAAmB,KACvB,MAAMC,EAAYH,GAAgBrB,GAClC,KAAOtyB,GAAK,IACR6zB,EAAmBvB,EAAQtyB,KACvB8zB,EAAU9qB,UAAY6qB,EAAiB7qB,UACvC6J,GAAsB2X,MAG1BxqB,IAEJ,IAAK6zB,EACD,MAAO,CAAE36B,EAAG,EAAGC,EAAG,GAEtB,MAAMwrB,EAAO5R,GAAsB+gB,EAAU9qB,UAAY6qB,EAAiB7qB,WAC1E,GAAa,IAAT2b,EACA,MAAO,CAAEzrB,EAAG,EAAGC,EAAG,GAEtB,MAAMsM,EAAkB,CACpBvM,GAAI46B,EAAU56B,EAAI26B,EAAiB36B,GAAKyrB,EACxCxrB,GAAI26B,EAAU36B,EAAI06B,EAAiB16B,GAAKwrB,GAQ5C,OANIlf,EAAgBvM,IAAMwoB,MACtBjc,EAAgBvM,EAAI,GAEpBuM,EAAgBtM,IAAMuoB,MACtBjc,EAAgBtM,EAAI,GAEjBsM,CACX,CCvJA,SAASsuB,GAAWC,GAChB,OAAOA,EAAKh6B,IAAMg6B,EAAKj6B,GAC3B,CACA,SAASk6B,GAAOl9B,GAAuC,IAAhCsJ,EAAM1I,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGu8B,EAAWv8B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAOsC,KAAKqb,IAAIve,EAAQsJ,IAAW6zB,CACvC,CACA,SAASC,GAAcprB,EAAOzI,EAAQD,GAAsB,IAAdyB,EAAMnK,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GACnDoR,EAAMjH,OAASA,EACfiH,EAAMqrB,YAAcxuB,GAAItF,EAAOvG,IAAKuG,EAAOtG,IAAK+O,EAAMjH,QACtDiH,EAAMzO,MAAQy5B,GAAW1zB,GAAU0zB,GAAWzzB,IAC1C2zB,GAAOlrB,EAAMzO,MAAO,EAAG,OAAW6f,MAAMpR,EAAMzO,UAC9CyO,EAAMzO,MAAQ,GAClByO,EAAMsrB,UACFzuB,GAAIvF,EAAOtG,IAAKsG,EAAOrG,IAAK+O,EAAMjH,QAAUiH,EAAMqrB,aAClDH,GAAOlrB,EAAMsrB,YAAcla,MAAMpR,EAAMsrB,cACvCtrB,EAAMsrB,UAAY,EAC1B,CACA,SAASC,GAAavrB,EAAOzI,EAAQD,EAAQyB,GACzCqyB,GAAcprB,EAAM7P,EAAGoH,EAAOpH,EAAGmH,EAAOnH,EAAG4I,EAASA,EAAOtD,aAAU5L,GACrEuhC,GAAcprB,EAAM5P,EAAGmH,EAAOnH,EAAGkH,EAAOlH,EAAG2I,EAASA,EAAOrD,aAAU7L,EACzE,CACA,SAAS2hC,GAAiBl0B,EAAQm0B,EAAUh/B,GACxC6K,EAAOtG,IAAMvE,EAAOuE,IAAMy6B,EAASz6B,IACnCsG,EAAOrG,IAAMqG,EAAOtG,IAAMg6B,GAAWS,EACzC,CAKA,SAASC,GAAyBp0B,EAAQxM,EAAQ2B,GAC9C6K,EAAOtG,IAAMlG,EAAOkG,IAAMvE,EAAOuE,IACjCsG,EAAOrG,IAAMqG,EAAOtG,IAAMg6B,GAAWlgC,EACzC,CACA,SAAS6gC,GAAqBr0B,EAAQxM,EAAQ2B,GAC1Ci/B,GAAyBp0B,EAAOnH,EAAGrF,EAAOqF,EAAG1D,EAAO0D,GACpDu7B,GAAyBp0B,EAAOlH,EAAGtF,EAAOsF,EAAG3D,EAAO2D,EACxD,CCZA,SAASw7B,GAA4BX,EAAMj6B,EAAKC,GAC5C,MAAO,CACHD,SAAanH,IAARmH,EAAoBi6B,EAAKj6B,IAAMA,OAAMnH,EAC1CoH,SAAapH,IAARoH,EACCg6B,EAAKh6B,IAAMA,GAAOg6B,EAAKh6B,IAAMg6B,EAAKj6B,UAClCnH,EAEd,CAcA,SAASgiC,GAA4BC,EAAYC,GAC7C,IAAI/6B,EAAM+6B,EAAgB/6B,IAAM86B,EAAW96B,IACvCC,EAAM86B,EAAgB96B,IAAM66B,EAAW76B,IAO3C,OAJI86B,EAAgB96B,IAAM86B,EAAgB/6B,IACtC86B,EAAW76B,IAAM66B,EAAW96B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAM+6B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHp7B,IAAKq7B,GAAoBH,EAAaC,GACtCl7B,IAAKo7B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,MAMMC,GAAcA,KAAA,CAChBp8B,EAPoB,CACpBm7B,UAAW,EACX/5B,MAAO,EACPwH,OAAQ,EACRsyB,YAAa,GAIbj7B,EARoB,CACpBk7B,UAAW,EACX/5B,MAAO,EACPwH,OAAQ,EACRsyB,YAAa,KAOXmB,GAAYA,KAAA,CACdr8B,EAFe,CAASa,IAAK,EAAGC,IAAK,GAGrCb,EAHe,CAASY,IAAK,EAAGC,IAAK,KCVzC,SAASw7B,GAAS7rB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS8rB,GAAuBlhC,GAAgC,IAA/B,IAAEmI,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,GAASrI,EAC1D,MAAO,CACH2E,EAAG,CAAEa,IAAK8C,EAAM7C,IAAK2C,GACrBxD,EAAG,CAAEY,IAAK2C,EAAK1C,IAAK4C,GAE5B,CCVA,SAAS84B,GAAgBp7B,GACrB,YAAiB1H,IAAV0H,GAAiC,IAAVA,CAClC,CACA,SAASq7B,GAAQphC,GAA4B,IAA3B,MAAE+F,EAAK,OAAEsD,EAAM,OAAEC,GAAQtJ,EACvC,OAASmhC,GAAgBp7B,KACpBo7B,GAAgB93B,KAChB83B,GAAgB73B,EACzB,CACA,SAAS0B,GAAauE,GAClB,OAAQ6xB,GAAS7xB,IACb8xB,GAAe9xB,IACfA,EAAO1K,GACP0K,EAAOtG,QACPsG,EAAOrG,SACPqG,EAAOpG,OACf,CACA,SAASk4B,GAAe9xB,GACpB,OAAO+xB,GAAc/xB,EAAO5K,IAAM28B,GAAc/xB,EAAO3K,EAC3D,CACA,SAAS08B,GAAc9+B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS++B,GAAWlqB,EAAOtR,EAAO85B,GAG9B,OAAOA,EADQ95B,GADYsR,EAAQwoB,EAGvC,CAIA,SAAS2B,GAAgBnqB,EAAOyoB,EAAW/5B,EAAO85B,EAAa4B,GAI3D,YAHiBpjC,IAAbojC,IACApqB,EAAQkqB,GAAWlqB,EAAOoqB,EAAU5B,IAEjC0B,GAAWlqB,EAAOtR,EAAO85B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAAS18B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAG2C,EAAK3C,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGy8B,EAAWz8B,UAAAC,OAAA,EAAAD,UAAA,QAAA/E,EAAEojC,EAAQr+B,UAAAC,OAAA,EAAAD,UAAA,QAAA/E,EACzEohC,EAAKj6B,IAAMg8B,GAAgB/B,EAAKj6B,IAAKs6B,EAAW/5B,EAAO85B,EAAa4B,GACpEhC,EAAKh6B,IAAM+7B,GAAgB/B,EAAKh6B,IAAKq6B,EAAW/5B,EAAO85B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAG5hC,GAAY,IAAV,EAAE2E,EAAC,EAAEC,GAAG5E,EAChC0hC,GAAeE,EAAIj9B,EAAGA,EAAEm7B,UAAWn7B,EAAEoB,MAAOpB,EAAEk7B,aAC9C6B,GAAeE,EAAIh9B,EAAGA,EAAEk7B,UAAWl7B,EAAEmB,MAAOnB,EAAEi7B,YAClD,CAuDA,SAASgC,GAAc97B,GACnB,OAAI+7B,OAAOC,UAAUh8B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASi8B,GAAcvC,EAAM91B,GACzB81B,EAAKj6B,IAAMi6B,EAAKj6B,IAAMmE,EACtB81B,EAAKh6B,IAAMg6B,EAAKh6B,IAAMkE,CAC1B,CAMA,SAASs4B,GAAcxC,EAAMyC,EAAUp/B,GAA8B,IAA3BtD,EAAK2iC,EAAUC,GAAUt/B,EAC/D,MAAMu/B,OAAuChkC,IAA1B6jC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAcxuB,GAAIouB,EAAKj6B,IAAKi6B,EAAKh6B,IAAK48B,GAE5CX,GAAejC,EAAMyC,EAAW1iC,GAAM0iC,EAAWC,GAAWtC,EAAaqC,EAAWn8B,MACxF,CAIA,MAAMu8B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKt8B,GACvB28B,GAAcL,EAAIj9B,EAAGW,EAAWg9B,IAChCL,GAAcL,EAAIh9B,EAAGU,EAAWi9B,GACpC,CCpHA,SAASE,GAAmB//B,EAAU87B,GAClC,OAAO0C,GHeX,SAA4B7pB,EAAOmnB,GAC/B,IAAKA,EACD,OAAOnnB,EACX,MAAMqrB,EAAUlE,EAAe,CAAE75B,EAAG0S,EAAM/O,KAAM1D,EAAGyS,EAAMlP,MACnDw6B,EAAcnE,EAAe,CAAE75B,EAAG0S,EAAMjP,MAAOxD,EAAGyS,EAAMhP,SAC9D,MAAO,CACHF,IAAKu6B,EAAQ99B,EACb0D,KAAMo6B,EAAQ/9B,EACd0D,OAAQs6B,EAAY/9B,EACpBwD,MAAOu6B,EAAYh+B,EAE3B,CG1BmCi+B,CAAmBlgC,EAAS0T,wBAAyBooB,GACxF,CCJA,MAAMqE,GAAmB7iC,IAAiB,IAAhB,QAAEwB,GAASxB,EACjC,OAAOwB,EAAUA,EAAQshC,cAAcC,YAAc,IAAI,ECiBvDC,GAAsB,IAAIrpB,QAKhC,MAAMspB,GACFhwB,WAAAA,CAAYjS,GAIRkS,KAAKgwB,eAAiB,KACtBhwB,KAAKiwB,YAAa,EAClBjwB,KAAKkwB,iBAAmB,KACxBlwB,KAAK2sB,YAAc,CAAEl7B,EAAG,EAAGC,EAAG,GAI9BsO,KAAKmwB,aAAc,EACnBnwB,KAAKowB,uBAAwB,EAI7BpwB,KAAKqwB,QAAUvC,KACf9tB,KAAKlS,cAAgBA,CACzB,CACAzD,KAAAA,CAAMimC,GAA4C,IAA/B,aAAEC,GAAe,GAAOrgC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAEjC,GAAoB+R,KAAKlS,cACjC,GAAIG,IAAiD,IAA9BA,EAAgB87B,UACnC,OACJ,MA4FM,iBAAES,GAAqBxqB,KAAK+F,WAClC/F,KAAKwwB,WAAa,IAAInG,GAAWiG,EAAa,CAC1CxE,eA9FoBjoB,IACpB,MAAM,iBAAE2mB,GAAqBxqB,KAAK+F,WAGlCykB,EAAmBxqB,KAAKywB,iBAAmBzwB,KAAK0wB,gBAC5CH,GACAvwB,KAAKuwB,aAAatsB,GAAiBJ,EAAO,QAAQM,MACtD,EAwFAgnB,QAtFYA,CAACtnB,EAAOiC,KAEpB,MAAM,KAAEha,EAAI,gBAAE6kC,EAAe,YAAEC,GAAgB5wB,KAAK+F,WACpD,GAAIja,IAAS6kC,IACL3wB,KAAKgwB,gBACLhwB,KAAKgwB,iBACThwB,KAAKgwB,eAAiB9qB,GAAcpZ,IAE/BkU,KAAKgwB,gBACN,OAERhwB,KAAKiwB,YAAa,EAClBjwB,KAAKkwB,iBAAmB,KACxBlwB,KAAK6wB,qBACD7wB,KAAKlS,cAAcgP,aACnBkD,KAAKlS,cAAcgP,WAAWg0B,oBAAqB,EACnD9wB,KAAKlS,cAAcgP,WAAWlE,YAASzN,GAK3C4iC,IAAUxB,IACN,IAAIj+B,EAAU0R,KAAK+wB,mBAAmBxE,GAAMh8B,OAAS,EAIrD,GAAImD,EAAQ3C,KAAKzC,GAAU,CACvB,MAAM,WAAEwO,GAAekD,KAAKlS,cAC5B,GAAIgP,GAAcA,EAAW1Q,OAAQ,CACjC,MAAM4kC,EAAel0B,EAAW1Q,OAAO6kC,UAAU1E,GACjD,GAAIyE,EAAc,CAEd1iC,EADeg+B,GAAW0E,IACNr+B,WAAWrE,GAAW,IAC9C,CACJ,CACJ,CACA0R,KAAK2sB,YAAYJ,GAAQj+B,CAAO,IAGhCsiC,GACA/vB,GAAMpS,QAAO,IAAMmiC,EAAY/sB,EAAOiC,KAAO,GAAO,GAExD,MAAM,eAAEhX,GAAmBkR,KAAKlS,cAChCgB,GAAkBA,EAAemX,UAAU,aAAa,EAAK,EA4C7DmlB,OA1CWA,CAACvnB,EAAOiC,KAEnB,MAAM,gBAAE6qB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYpxB,KAAK+F,WAE9E,IAAK4qB,IAAoB3wB,KAAKgwB,eAC1B,OACJ,MAAM,OAAE11B,GAAWwL,EAEnB,GAAIorB,GAA+C,OAA1BlxB,KAAKkwB,iBAM1B,OALAlwB,KAAKkwB,iBAmWrB,SAA6B51B,GAA4B,IAApB+2B,EAAanhC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAC7CmuB,EAAY,KACZ7rB,KAAKqb,IAAIvT,EAAO5I,GAAK2/B,EACrBhT,EAAY,IAEP7rB,KAAKqb,IAAIvT,EAAO7I,GAAK4/B,IAC1BhT,EAAY,KAEhB,OAAOA,CACX,CA5WwCiT,CAAoBh3B,QAEd,OAA1B0F,KAAKkwB,kBACLiB,GAAmBA,EAAgBnxB,KAAKkwB,mBAKhDlwB,KAAKuxB,WAAW,IAAKzrB,EAAK3B,MAAO7J,GACjC0F,KAAKuxB,WAAW,IAAKzrB,EAAK3B,MAAO7J,GAOjC0F,KAAKlS,cAAce,SAKnBuiC,GAAUA,EAAOvtB,EAAOiC,EAAK,EAa7B4lB,aAXiBA,CAAC7nB,EAAOiC,IAAS9F,KAAK6Z,KAAKhW,EAAOiC,GAYnD6lB,gBAXoBA,IAAMoC,IAAUxB,IACpC,IAAIpyB,EACJ,MAAwC,WAAjC6F,KAAKwxB,kBAAkBjF,KAC0B,QAAlDpyB,EAAK6F,KAAK+wB,mBAAmBxE,GAAM3gC,iBAA8B,IAAPuO,OAAgB,EAASA,EAAG2iB,OAAO,KASpG,CACCt0B,mBAAoBwX,KAAKlS,cAAc2jC,wBACvCjH,mBACAD,cAAeoF,GAAiB3vB,KAAKlS,gBAE7C,CACA+rB,IAAAA,CAAKhW,EAAOiC,GACR,MAAMmqB,EAAajwB,KAAKiwB,WAExB,GADAjwB,KAAKc,UACAmvB,EACD,OACJ,MAAM,SAAEhlB,GAAanF,EACrB9F,KAAKskB,eAAerZ,GACpB,MAAM,UAAEymB,GAAc1xB,KAAK+F,WACvB2rB,GACA7wB,GAAMpS,QAAO,IAAMijC,EAAU7tB,EAAOiC,IAE5C,CACAhF,MAAAA,GACId,KAAKiwB,YAAa,EAClB,MAAM,WAAEnzB,EAAU,eAAEhO,GAAmBkR,KAAKlS,cACxCgP,IACAA,EAAWg0B,oBAAqB,GAEpC9wB,KAAKwwB,YAAcxwB,KAAKwwB,WAAWhF,MACnCxrB,KAAKwwB,gBAAarlC,EAClB,MAAM,gBAAEwlC,GAAoB3wB,KAAK+F,YAC5B4qB,GAAmB3wB,KAAKgwB,iBACzBhwB,KAAKgwB,iBACLhwB,KAAKgwB,eAAiB,MAE1BlhC,GAAkBA,EAAemX,UAAU,aAAa,EAC5D,CACAsrB,UAAAA,CAAWhF,EAAMoF,EAAQr3B,GACrB,MAAM,KAAExO,GAASkU,KAAK+F,WAEtB,IAAKzL,IAAWs3B,GAAWrF,EAAMzgC,EAAMkU,KAAKkwB,kBACxC,OACJ,MAAM2B,EAAY7xB,KAAK+wB,mBAAmBxE,GAC1C,IAAI3hB,EAAO5K,KAAK2sB,YAAYJ,GAAQjyB,EAAOiyB,GAEvCvsB,KAAKmwB,aAAenwB,KAAKmwB,YAAY5D,KACrC3hB,ERtLZ,SAA0BzG,EAAKrX,EAAgBujC,GAAS,IAAvB,IAAE/9B,EAAG,IAAEC,GAAKzF,EASzC,YARY3B,IAARmH,GAAqB6R,EAAQ7R,EAE7B6R,EAAQksB,EAAUlyB,GAAI7L,EAAK6R,EAAOksB,EAAQ/9B,KAAOE,KAAKD,IAAI4R,EAAO7R,QAEpDnH,IAARoH,GAAqB4R,EAAQ5R,IAElC4R,EAAQksB,EAAUlyB,GAAI5L,EAAK4R,EAAOksB,EAAQ99B,KAAOC,KAAKF,IAAI6R,EAAO5R,IAE9D4R,CACX,CQ4KmB2tB,CAAiBlnB,EAAM5K,KAAKmwB,YAAY5D,GAAOvsB,KAAKqwB,QAAQ9D,KAEvEsF,EAAUnhC,IAAIka,EAClB,CACAimB,kBAAAA,GACI,IAAI12B,EACJ,MAAM,gBAAE43B,EAAe,YAAEvE,GAAgBxtB,KAAK+F,WACxC3Z,EAAS4T,KAAKlS,cAAcgP,aAC7BkD,KAAKlS,cAAcgP,WAAW1Q,OAC7B4T,KAAKlS,cAAcgP,WAAWk1B,SAAQ,GACG,QAAxC73B,EAAK6F,KAAKlS,cAAcgP,kBAA+B,IAAP3C,OAAgB,EAASA,EAAG/N,OAC7E6lC,EAAkBjyB,KAAKmwB,YACzB4B,GAAmBroC,EAAYqoC,GAC1B/xB,KAAKmwB,cACNnwB,KAAKmwB,YAAcnwB,KAAKkyB,yBAKxBlyB,KAAKmwB,eADL4B,IAAmB3lC,IR5KnC,SAAiC6kC,EAASrhC,GAAgC,IAA9B,IAAEqF,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,GAAOtF,EACpE,MAAO,CACH6B,EAAGy7B,GAA4B+D,EAAUx/B,EAAG2D,EAAMF,GAClDxD,EAAGw7B,GAA4B+D,EAAUv/B,EAAGuD,EAAKE,GAEzD,CQwKmCg9B,CAAwB/lC,EAAO6kC,UAAWc,GAMrE/xB,KAAKqwB,QRrHb,WAA0D,IAA9B7C,EAAWt9B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAGo9B,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH77B,EAAG87B,GAAmBC,EAAa,OAAQ,SAC3C97B,EAAG67B,GAAmBC,EAAa,MAAO,UAElD,CQ0GuB4E,CAAmB5E,GAK9ByE,IAAoBjyB,KAAKmwB,aACzB/jC,GACA4T,KAAKmwB,cACJnwB,KAAKowB,uBACNrC,IAAUxB,IACFvsB,KAAK+wB,mBAAmBxE,KACxBvsB,KAAKmwB,YAAY5D,GR9IrC,SAA+BngC,EAAQ+jC,GACnC,MAAMkC,EAAsB,CAAC,EAO7B,YANwBlnC,IAApBglC,EAAY79B,MACZ+/B,EAAoB//B,IAAM69B,EAAY79B,IAAMlG,EAAOkG,UAE/BnH,IAApBglC,EAAY59B,MACZ8/B,EAAoB9/B,IAAM49B,EAAY59B,IAAMnG,EAAOkG,KAEhD+/B,CACX,CQqI6CC,CAAsBlmC,EAAO6kC,UAAU1E,GAAOvsB,KAAKmwB,YAAY5D,IAC5F,GAGZ,CACA2F,qBAAAA,GACI,MAAQH,gBAAiB5B,EAAW,yBAAEoC,GAA6BvyB,KAAK+F,WACxE,IAAKoqB,IAAgBzmC,EAAYymC,GAC7B,OAAO,EACX,MAAMqC,EAAqBrC,EAAY7hC,QACvC6c,GAAiC,OAAvBqnB,EAA6B,0GACvC,MAAM,WAAE11B,GAAekD,KAAKlS,cAE5B,IAAKgP,IAAeA,EAAW1Q,OAC3B,OAAO,EACX,MAAMqmC,EF7Od,SAAwB71B,EAAS81B,EAAoBlqC,GACjD,MAAMmqC,EAAcpD,GAAmB3yB,EAASpU,IAC1C,OAAEoqC,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAYlhC,EAAGmhC,EAAOt4B,OAAO7I,GAC3Cq9B,GAAc6D,EAAYjhC,EAAGkhC,EAAOt4B,OAAO5I,IAExCihC,CACX,CEqO+BE,CAAeL,EAAoB11B,EAAWmK,KAAMjH,KAAKlS,cAAc2jC,yBAC9F,IAAIqB,ERvLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHhhC,EAAG07B,GAA4B8D,EAAUx/B,EAAGghC,EAAehhC,GAC3DC,EAAGy7B,GAA4B8D,EAAUv/B,EAAG+gC,EAAe/gC,GAEnE,CQkLkCqhC,CAAwBj2B,EAAW1Q,OAAO6kC,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,SAAgC3iC,GAAW,IAAV,EAAE6B,EAAC,EAAEC,GAAG9B,EACrC,MAAO,CAAEqF,IAAKvD,EAAEY,IAAK4C,MAAOzD,EAAEc,IAAK4C,OAAQzD,EAAEa,IAAK6C,KAAM3D,EAAEa,IAC9D,CK6O6D2gC,CAAwBH,IACzE9yB,KAAKowB,wBAA0B4C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACAxO,cAAAA,CAAerZ,GACX,MAAM,KAAEnf,EAAI,aAAEonC,EAAY,YAAE1F,EAAW,eAAE2F,EAAc,iBAAE3I,EAAgB,oBAAE4I,GAAyBpzB,KAAK+F,WACnGoqB,EAAcnwB,KAAKmwB,aAAe,CAAC,EACnCkD,EAAqBtF,IAAUxB,IACjC,IAAKqF,GAAWrF,EAAMzgC,EAAMkU,KAAKkwB,kBAC7B,OAEJ,IAAIxwB,EAAcywB,GAAeA,EAAY5D,IAAU,CAAC,EACpD/B,IACA9qB,EAAa,CAAEpN,IAAK,EAAGC,IAAK,IAOhC,MAAMwmB,EAAkByU,EAAc,IAAM,IACtC1U,EAAgB0U,EAAc,GAAK,IACnC7U,EAAU,CACZxmB,KAAM,UACN8Y,SAAUioB,EAAejoB,EAASshB,GAAQ,EAC1CxT,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACR0b,KACAzzB,GAKP,OAAOM,KAAKszB,wBAAwB/G,EAAM5T,EAAQ,IAGtD,OAAO2C,QAAQ3T,IAAI0rB,GAAoBrW,KAAKoW,EAChD,CACAE,uBAAAA,CAAwB/G,EAAM7sB,GAC1B,MAAMmyB,EAAY7xB,KAAK+wB,mBAAmBxE,GAC1C,OAAOsF,EAAUxnC,MAAMu2B,GAAmB2L,EAAMsF,EAAW,EAAGnyB,GAClE,CACAgxB,aAAAA,GACI3C,IAAUxB,GAASvsB,KAAK+wB,mBAAmBxE,GAAM1S,QACrD,CACA4W,cAAAA,GACI1C,IAAUxB,IAAW,IAAIpyB,EAAI,OAA0D,QAAlDA,EAAK6F,KAAK+wB,mBAAmBxE,GAAM3gC,iBAA8B,IAAPuO,OAAgB,EAASA,EAAGkjB,OAAO,GACtI,CACAmU,iBAAAA,CAAkBjF,GACd,IAAIpyB,EACJ,OAA0D,QAAlDA,EAAK6F,KAAK+wB,mBAAmBxE,GAAM3gC,iBAA8B,IAAPuO,OAAgB,EAASA,EAAG5C,KAClG,CAOAw5B,kBAAAA,CAAmBxE,GACf,MAAMgH,EAAU,QAAUhH,EAAK5uB,cACzBlT,EAAQuV,KAAKlS,cAAciY,WAC3BytB,EAAsB/oC,EAAM8oC,GAClC,OAAOC,GAEDxzB,KAAKlS,cAAcs3B,SAASmH,GAAO9hC,EAAMQ,QAAUR,EAAMQ,QAAQshC,QAAQphC,IAAc,EACjG,CACAolC,YAAAA,CAAapsB,GACT4pB,IAAUxB,IACN,MAAM,KAAEzgC,GAASkU,KAAK+F,WAEtB,IAAK6rB,GAAWrF,EAAMzgC,EAAMkU,KAAKkwB,kBAC7B,OACJ,MAAM,WAAEpzB,GAAekD,KAAKlS,cACtB+jC,EAAY7xB,KAAK+wB,mBAAmBxE,GAC1C,GAAIzvB,GAAcA,EAAW1Q,OAAQ,CACjC,MAAM,IAAEkG,EAAG,IAAEC,GAAQuK,EAAW1Q,OAAO6kC,UAAU1E,GACjDsF,EAAUnhC,IAAIyT,EAAMooB,GAAQpuB,GAAI7L,EAAKC,EAAK,IAC9C,IAER,CAMAkhC,8BAAAA,GACI,IAAKzzB,KAAKlS,cAAcQ,QACpB,OACJ,MAAM,KAAExC,EAAI,gBAAEimC,GAAoB/xB,KAAK+F,YACjC,WAAEjJ,GAAekD,KAAKlS,cAC5B,IAAKpE,EAAYqoC,KAAqBj1B,IAAekD,KAAKmwB,YACtD,OAKJnwB,KAAK0wB,gBAKL,MAAMgD,EAAc,CAAEjiC,EAAG,EAAGC,EAAG,GAC/Bq8B,IAAUxB,IACN,MAAMsF,EAAY7xB,KAAK+wB,mBAAmBxE,GAC1C,GAAIsF,EAAW,CACX,MAAM32B,EAAS22B,EAAUthC,MACzBmjC,EAAYnH,GRpS5B,SAAoB1zB,EAAQD,GACxB,IAAIyB,EAAS,GACb,MAAMs5B,EAAerH,GAAWzzB,GAC1B+6B,EAAetH,GAAW1zB,GAOhC,OANIg7B,EAAeD,EACft5B,EAASkW,GAAS3X,EAAOtG,IAAKsG,EAAOrG,IAAMohC,EAAc96B,EAAOvG,KAE3DqhC,EAAeC,IACpBv5B,EAASkW,GAAS1X,EAAOvG,IAAKuG,EAAOtG,IAAMqhC,EAAch7B,EAAOtG,MAE7DD,EAAM,EAAG,EAAGgI,EACvB,CQyRoCD,CAAW,CAAE9H,IAAK4I,EAAQ3I,IAAK2I,GAAU8E,KAAKmwB,YAAY5D,GAClF,KAKJ,MAAM,kBAAE70B,GAAsBsI,KAAKlS,cAAciY,WACjD/F,KAAKlS,cAAcQ,QAAQqJ,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNoF,EAAWmK,MAAQnK,EAAWmK,KAAK4sB,eACnC/2B,EAAWg3B,eACX9zB,KAAK6wB,qBAKL9C,IAAUxB,IACN,IAAKqF,GAAWrF,EAAMzgC,EAAM,MACxB,OAIJ,MAAM+lC,EAAY7xB,KAAK+wB,mBAAmBxE,IACpC,IAAEj6B,EAAG,IAAEC,GAAQyN,KAAKmwB,YAAY5D,GACtCsF,EAAUnhC,IAAIyN,GAAI7L,EAAKC,EAAKmhC,EAAYnH,IAAO,GAEvD,CACAwH,YAAAA,GACI,IAAK/zB,KAAKlS,cAAcQ,QACpB,OACJwhC,GAAoBp/B,IAAIsP,KAAKlS,cAAekS,MAC5C,MAIMg0B,EAAsB3vB,GAJZrE,KAAKlS,cAAcQ,QAIkB,eAAgBuV,IACjE,MAAM,KAAE/X,EAAI,aAAEsN,GAAe,GAAS4G,KAAK+F,WAC3Cja,GAAQsN,GAAgB4G,KAAK3V,MAAMwZ,EAAM,IAEvCowB,EAAyBA,KAC3B,MAAM,gBAAElC,GAAoB/xB,KAAK+F,WAC7Brc,EAAYqoC,KACZ/xB,KAAKmwB,YAAcnwB,KAAKkyB,wBAC5B,GAEE,WAAEp1B,GAAekD,KAAKlS,cACtBomC,EAA4Bp3B,EAAW4G,iBAAiB,UAAWuwB,GACrEn3B,IAAeA,EAAW1Q,SAC1B0Q,EAAWmK,MAAQnK,EAAWmK,KAAK4sB,eACnC/2B,EAAWg3B,gBAEfG,IAKA,MAAME,EAAqB7wB,GAAY3U,OAAQ,UAAU,IAAMqR,KAAKyzB,mCAK9DW,EAA2Bt3B,EAAW4G,iBAAiB,aAAc5W,IAAiC,IAAhC,MAAEwU,EAAK,iBAAE+yB,GAAkBvnC,EAC/FkT,KAAKiwB,YAAcoE,IACnBtG,IAAUxB,IACN,MAAM1H,EAAc7kB,KAAK+wB,mBAAmBxE,GACvC1H,IAEL7kB,KAAK2sB,YAAYJ,IAASjrB,EAAMirB,GAAMK,UACtC/H,EAAYn0B,IAAIm0B,EAAYt0B,MAAQ+Q,EAAMirB,GAAMK,WAAU,IAE9D5sB,KAAKlS,cAAce,SACvB,IAEJ,MAAO,KACHslC,IACAH,IACAE,IACAE,GAA4BA,GAA0B,CAE9D,CACAruB,QAAAA,GACI,MAAMtb,EAAQuV,KAAKlS,cAAciY,YAC3B,KAAEja,GAAO,EAAK,kBAAEolC,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEoB,GAAkB,EAAK,YAAEvE,EAAcF,GAAc,aAAE4F,GAAe,GAAUzoC,EAC1J,MAAO,IACAA,EACHqB,OACAolC,oBACAP,kBACAoB,kBACAvE,cACA0F,eAER,EAEJ,SAAStB,GAAWvT,EAAWvyB,EAAMokC,GACjC,QAAkB,IAATpkC,GAAiBA,IAASuyB,KACT,OAArB6R,GAA6BA,IAAqB7R,EAC3D,CCtcA,MAAMiW,GAAgB9wB,GAAY,CAACK,EAAOiC,KAClCtC,GACA3C,GAAMpS,QAAO,IAAM+U,EAAQK,EAAOiC,IACtC,ECLJ,MAAMyuB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQpI,GAC7B,OAAIA,EAAKh6B,MAAQg6B,EAAKj6B,IACX,EACHqiC,GAAUpI,EAAKh6B,IAAMg6B,EAAKj6B,KAAQ,GAC9C,CAQA,MAAMsiC,GAAsB,CACxBC,QAASA,CAAC35B,EAAQsK,KACd,IAAKA,EAAK5M,OACN,OAAOsC,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIvH,GAAG5C,KAAKmK,GAIR,OAAOA,EAHPA,EAASvI,WAAWuI,EAK5B,CAOA,MAAO,GAFGw5B,GAAgBx5B,EAAQsK,EAAK5M,OAAOnH,OACpCijC,GAAgBx5B,EAAQsK,EAAK5M,OAAOlH,KAC1B,GCjCtBojC,GAAmB,CACrBD,QAASA,CAAC35B,EAAMpO,KAAqC,IAAnC,UAAEioC,EAAS,gBAAEC,GAAiBloC,EAC5C,MAAMmoC,EAAW/5B,EACXg6B,EAAS1iB,GAAQ9f,MAAMwI,GAE7B,GAAIg6B,EAAO/kC,OAAS,EAChB,OAAO8kC,EACX,MAAM5hB,EAAWb,GAAQJ,kBAAkBlX,GACrCZ,EAA8B,kBAAd46B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBvjC,EAAEoB,MAAQkiC,EAAUtjC,EAC7C2jC,EAASJ,EAAgBtjC,EAAEmB,MAAQkiC,EAAUrjC,EACnDwjC,EAAO,EAAI56B,IAAW66B,EACtBD,EAAO,EAAI56B,IAAW86B,EAOtB,MAAMC,EAAel3B,GAAIg3B,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAI56B,KAClB46B,EAAO,EAAI56B,IAAW+6B,GAEQ,kBAAvBH,EAAO,EAAI56B,KAClB46B,EAAO,EAAI56B,IAAW+6B,GACnBhiB,EAAS6hB,EAAO,GCpB/B,MAAMI,WAAiCC,EAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAE1nC,EAAa,YAAE2nC,EAAW,kBAAEC,EAAiB,SAAE/nC,GAAaqS,KAAKvV,OACnE,WAAEqS,GAAehP,EjJjB/B,IAA2B6nC,IiJkBDC,GjJjBtBhsC,OAAOmP,OAAO/H,EAAiB2kC,GiJkBvB74B,IACI24B,EAAYI,OACZJ,EAAYI,MAAM11B,IAAIrD,GACtB44B,GAAqBA,EAAkBtL,UAAYz8B,GACnD+nC,EAAkBtL,SAASttB,GAE/BA,EAAWmK,KAAK6uB,YAChBh5B,EAAW4G,iBAAiB,qBAAqB,KAC7C1D,KAAK+1B,cAAc,IAEvBj5B,EAAWk5B,WAAW,IACfl5B,EAAWrF,QACduyB,eAAgBA,IAAMhqB,KAAK+1B,kBAGnCxB,GAAsBE,gBAAiB,CAC3C,CACAwB,uBAAAA,CAAwB14B,GACpB,MAAM,iBAAE24B,EAAgB,cAAEpoC,EAAa,KAAEhC,EAAI,UAAEi+B,GAAc/pB,KAAKvV,MAC5DqS,EAAahP,EAAcgP,WACjC,OAAKA,GASLA,EAAWitB,UAAYA,EACnBj+B,GACAyR,EAAU24B,mBAAqBA,QACV/qC,IAArB+qC,EACAp5B,EAAWq5B,aAGXn2B,KAAK+1B,eAELx4B,EAAUwsB,YAAcA,IACpBA,EACAjtB,EAAWs5B,UAELt5B,EAAWu5B,YAMjBx1B,GAAMuiB,YAAW,KACb,MAAMkT,EAAQx5B,EAAWy5B,WACpBD,GAAUA,EAAME,QAAQrmC,QACzB6P,KAAK+1B,cACT,KAIL,MAnCI,IAoCf,CACAU,kBAAAA,GACI,MAAM,WAAE35B,GAAekD,KAAKvV,MAAMqD,cAC9BgP,IACAA,EAAWmK,KAAK6uB,YAChBY,gBAAe,MACN55B,EAAW65B,kBAAoB75B,EAAW85B,UAC3C52B,KAAK+1B,cACT,IAGZ,CACAc,oBAAAA,GACI,MAAM,cAAE/oC,EAAa,YAAE2nC,EAAaC,kBAAmBoB,GAAoB92B,KAAKvV,OAC1E,WAAEqS,GAAehP,EACnBgP,IACAA,EAAWi6B,4BACPtB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMv1B,OAAOxD,GACzBg6B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWl6B,GAEtC,CACAi5B,YAAAA,GACI,MAAM,aAAEA,GAAiB/1B,KAAKvV,MAC9BsrC,GAAgBA,GACpB,CACAlnC,MAAAA,GACI,OAAO,IACX,EAEJ,SAASpB,GAAchD,GACnB,MAAOs/B,EAAWgM,GCnFtB,WACI,MAAM7qC,GAAUI,EAAAA,EAAAA,YAAWzC,GAC3B,GAAgB,OAAZqC,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE6+B,EAAS,eAAEC,EAAc,SAAEI,GAAal/B,EAG1C4E,GAAKmnC,EAAAA,EAAAA,SAGX,OAFA/tC,EAAAA,EAAAA,YAAU,IAAMkhC,EAASt6B,IAAK,KAEtBi6B,GAAaC,EAAiB,EAAC,EADlB+L,IAAM/L,GAAkBA,EAAel6B,IACE,EAAC,EACnE,CDwEsConC,GAC5BzB,GAAcnqC,EAAAA,EAAAA,YAAWkB,GAC/B,OAAQ+oC,EAAAA,cAA6BD,GAA0B,IAAK7qC,EAAOgrC,YAAaA,EAAaC,mBAAmBpqC,EAAAA,EAAAA,YAAWmB,GAA2Bs9B,UAAWA,EAAWgM,aAAcA,GACtM,CACA,MAAMH,GAAyB,CAC3BthC,aAAc,IACPsgC,GACHuC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR3iC,oBAAqBogC,GACrBngC,qBAAsBmgC,GACtBjgC,uBAAwBigC,GACxBlgC,wBAAyBkgC,GACzBwC,UAAWtC,IEzHTuC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQlnC,OACrBonC,GAAYjoC,GAA2B,kBAAVA,EAAqBqD,WAAWrD,GAASA,EACtEkoC,GAAQloC,GAA2B,kBAAVA,GAAsBqE,GAAG5C,KAAKzB,GA0C7D,SAASmoC,GAAUp7B,EAAQq7B,GACvB,YAA8BvsC,IAAvBkR,EAAOq7B,GACRr7B,EAAOq7B,GACPr7B,EAAO/H,YACjB,CAwBA,MAAMqjC,GAAkBC,GAAS,EAAG,GAAKrrB,IACnCsrB,GAAmBD,GAAS,GAAK,IAAMh4B,IAC7C,SAASg4B,GAAStlC,EAAKC,EAAKmZ,GACxB,OAAQjjB,GAEAA,EAAI6J,EACG,EACP7J,EAAI8J,EACG,EACJmZ,EAAO6E,GAASje,EAAKC,EAAK9J,GAEzC,CCrFA,SAASqvC,GAAavL,EAAMwL,GACxBxL,EAAKj6B,IAAMylC,EAAWzlC,IACtBi6B,EAAKh6B,IAAMwlC,EAAWxlC,GAC1B,CAMA,SAASylC,GAAYtJ,EAAKuJ,GACtBH,GAAapJ,EAAIj9B,EAAGwmC,EAAUxmC,GAC9BqmC,GAAapJ,EAAIh9B,EAAGumC,EAAUvmC,EAClC,CCVA,SAASwmC,GAAiB/zB,EAAOyoB,EAAW/5B,EAAO85B,EAAa4B,GAM5D,OAJApqB,EAAQkqB,GADRlqB,GAASyoB,EACiB,EAAI/5B,EAAO85B,QACpBxhC,IAAbojC,IACApqB,EAAQkqB,GAAWlqB,EAAO,EAAIoqB,EAAU5B,IAErCxoB,CACX,CAsBA,SAASg0B,GAAqB5L,EAAMyC,EAAUliC,EAA8BuN,EAAQ+9B,GAAY,IAA/C9rC,EAAK2iC,EAAUC,GAAUpiC,GAlB1E,SAAyBy/B,GAA8F,IAAxFK,EAAS18B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAG2C,EAAK3C,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAAGmK,EAAMnK,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,GAAKq+B,EAAQr+B,UAAAC,OAAA,EAAAD,UAAA,QAAA/E,EAAE4sC,EAAU7nC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAGq8B,EAAM6L,EAAUloC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAGq8B,EACzG74B,EAAQ3C,KAAK67B,KACbA,EAAYj6B,WAAWi6B,GAEvBA,EADyBzuB,GAAIi6B,EAAW9lC,IAAK8lC,EAAW7lC,IAAKq6B,EAAY,KAC1CwL,EAAW9lC,KAE9C,GAAyB,kBAAds6B,EACP,OACJ,IAAID,EAAcxuB,GAAI45B,EAAWzlC,IAAKylC,EAAWxlC,IAAK8H,GAClDkyB,IAASwL,IACTpL,GAAeC,GACnBL,EAAKj6B,IAAM4lC,GAAiB3L,EAAKj6B,IAAKs6B,EAAW/5B,EAAO85B,EAAa4B,GACrEhC,EAAKh6B,IAAM2lC,GAAiB3L,EAAKh6B,IAAKq6B,EAAW/5B,EAAO85B,EAAa4B,EACzE,CAMI8J,CAAgB9L,EAAMyC,EAAW1iC,GAAM0iC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWn8B,MAAOwH,EAAQ+9B,EAClH,CAIA,MAAMhJ,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASiJ,GAAoB5J,EAAKM,EAAYiJ,EAAWM,GACrDJ,GAAqBzJ,EAAIj9B,EAAGu9B,EAAYI,GAAO6I,EAAYA,EAAUxmC,OAAItG,EAAWotC,EAAYA,EAAU9mC,OAAItG,GAC9GgtC,GAAqBzJ,EAAIh9B,EAAGs9B,EAAYK,GAAO4I,EAAYA,EAAUvmC,OAAIvG,EAAWotC,EAAYA,EAAU7mC,OAAIvG,EAClH,CCjDA,SAASqtC,GAAgBl3B,GACrB,OAA2B,IAApBA,EAAMsrB,WAAmC,IAAhBtrB,EAAMzO,KAC1C,CACA,SAAS4lC,GAAYn3B,GACjB,OAAOk3B,GAAgBl3B,EAAM7P,IAAM+mC,GAAgBl3B,EAAM5P,EAC7D,CAOA,SAASgnC,GAAiBn0B,EAAGC,GACzB,OAAQhS,KAAKQ,MAAMuR,EAAE9S,EAAEa,OAASE,KAAKQ,MAAMwR,EAAE/S,EAAEa,MAC3CE,KAAKQ,MAAMuR,EAAE9S,EAAEc,OAASC,KAAKQ,MAAMwR,EAAE/S,EAAEc,MACvCC,KAAKQ,MAAMuR,EAAE7S,EAAEY,OAASE,KAAKQ,MAAMwR,EAAE9S,EAAEY,MACvCE,KAAKQ,MAAMuR,EAAE7S,EAAEa,OAASC,KAAKQ,MAAMwR,EAAE9S,EAAEa,IAC/C,CACA,SAASomC,GAAYjK,GACjB,OAAOpC,GAAWoC,EAAIj9B,GAAK66B,GAAWoC,EAAIh9B,EAC9C,CCpBA,MAAMknC,GACF74B,WAAAA,GACIC,KAAKw2B,QAAU,EACnB,CACAr2B,GAAAA,CAAIqF,GACA2c,GAAcniB,KAAKw2B,QAAShxB,GAC5BA,EAAKqzB,gBACT,CACAv4B,MAAAA,CAAOkF,GAKH,GAJA6c,GAAWriB,KAAKw2B,QAAShxB,GACrBA,IAASxF,KAAK84B,WACd94B,KAAK84B,cAAW3tC,GAEhBqa,IAASxF,KAAK+4B,KAAM,CACpB,MAAMD,EAAW94B,KAAKw2B,QAAQx2B,KAAKw2B,QAAQrmC,OAAS,GAChD2oC,GACA94B,KAAKo2B,QAAQ0C,EAErB,CACJ,CACAzC,QAAAA,CAAS7wB,GACL,MAAMwzB,EAAch5B,KAAKw2B,QAAQyC,WAAWC,GAAW1zB,IAAS0zB,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIvgC,EAAIygC,EAAazgC,GAAK,EAAGA,IAAK,CACnC,MAAM2gC,EAASl5B,KAAKw2B,QAAQj+B,GAC5B,IAAyB,IAArB2gC,EAAOnP,UAAqB,CAC5B+O,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA94B,KAAKo2B,QAAQ0C,IACN,EAKf,CACA1C,OAAAA,CAAQ5wB,EAAM2zB,GACV,MAAML,EAAW94B,KAAK+4B,KACtB,GAAIvzB,IAASszB,IAEb94B,KAAK84B,SAAWA,EAChB94B,KAAK+4B,KAAOvzB,EACZA,EAAK4zB,OACDN,GAAU,CACVA,EAAStpC,UAAYspC,EAASD,iBAC9BrzB,EAAKqzB,iBACLrzB,EAAK6zB,WAAaP,EACdK,IACA3zB,EAAK6zB,WAAWC,iBAAkB,GAElCR,EAASS,WACT/zB,EAAK+zB,SAAWT,EAASS,SACzB/zB,EAAK+zB,SAAS/hC,aACVshC,EAASU,iBAAmBV,EAASthC,cAEzCgO,EAAKyB,MAAQzB,EAAKyB,KAAKwyB,aACvBj0B,EAAKk0B,eAAgB,GAEzB,MAAM,UAAEC,GAAcn0B,EAAK/N,SACT,IAAdkiC,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACI75B,KAAKw2B,QAAQj3B,SAASiG,IAClB,MAAM,QAAE/N,EAAO,aAAEqiC,GAAiBt0B,EAClC/N,EAAQuyB,gBAAkBvyB,EAAQuyB,iBAC9B8P,GACAA,EAAariC,QAAQuyB,gBACjB8P,EAAariC,QAAQuyB,gBAC7B,GAER,CACA6O,cAAAA,GACI74B,KAAKw2B,QAAQj3B,SAASiG,IAClBA,EAAKhW,UAAYgW,EAAKqzB,gBAAe,EAAM,GAEnD,CAKAkB,kBAAAA,GACQ/5B,KAAK+4B,MAAQ/4B,KAAK+4B,KAAKQ,WACvBv5B,KAAK+4B,KAAKQ,cAAWpuC,EAE7B,EC5GJ,SAAS6uC,GAAyB14B,EAAOyzB,EAAWkF,GAChD,IAAI7nC,EAAY,GAOhB,MAAM8nC,EAAa54B,EAAM7P,EAAEm7B,UAAYmI,EAAUtjC,EAC3C0oC,EAAa74B,EAAM5P,EAAEk7B,UAAYmI,EAAUrjC,EAWjD,IAVIwoC,GAAcC,KACd/nC,EAAY,eAAe8nC,QAAiBC,YAM5B,IAAhBpF,EAAUtjC,GAA2B,IAAhBsjC,EAAUrjC,IAC/BU,GAAa,SAAS,EAAI2iC,EAAUtjC,MAAM,EAAIsjC,EAAUrjC,OAExDuoC,EAAiB,CACjB,MAAM,OAAElkC,EAAM,QAAEC,EAAO,QAAEC,GAAYgkC,EACjClkC,IACA3D,GAAa,UAAU2D,UACvBC,IACA5D,GAAa,WAAW4D,UACxBC,IACA7D,GAAa,WAAW6D,SAChC,CAKA,MAAMmkC,EAAgB94B,EAAM7P,EAAEoB,MAAQkiC,EAAUtjC,EAC1C4oC,EAAgB/4B,EAAM5P,EAAEmB,MAAQkiC,EAAUrjC,EAIhD,OAHsB,IAAlB0oC,GAAyC,IAAlBC,IACvBjoC,GAAa,SAASgoC,MAAkBC,MAErCjoC,GAAa,MACxB,CCvCA,MAAMkoC,GAAiBA,CAAC/1B,EAAGC,IAAMD,EAAEg2B,MAAQ/1B,EAAE+1B,MCG7C,MAAMC,GACFz6B,WAAAA,GACIC,KAAKxD,SAAW,GAChBwD,KAAKy6B,SAAU,CACnB,CACAt6B,GAAAA,CAAIgG,GACAgc,GAAcniB,KAAKxD,SAAU2J,GAC7BnG,KAAKy6B,SAAU,CACnB,CACAn6B,MAAAA,CAAO6F,GACHkc,GAAWriB,KAAKxD,SAAU2J,GAC1BnG,KAAKy6B,SAAU,CACnB,CACAl7B,OAAAA,CAAQ2C,GACJlC,KAAKy6B,SAAWz6B,KAAKxD,SAASwqB,KAAKsT,IACnCt6B,KAAKy6B,SAAU,EACfz6B,KAAKxD,SAAS+C,QAAQ2C,EAC1B,ECMJ,MAAMw4B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI9qC,GAAK,EAKT,MAAM+qC,GAAsB,CACxB1oC,KAAM,kBACN2oC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoBnuC,GAA6F,IAA5F,qBAAEouC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBxuC,EACpH,OAAO,MACHiT,WAAAA,GAAuH,IAA3GvI,EAAYtH,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGnC,EAAMmC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAqB,OAAlBirC,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGn7B,KAAKlQ,GAAKA,KAIVkQ,KAAKu7B,YAAc,EAOnBv7B,KAAKxD,SAAW,IAAIrL,IAKpB6O,KAAKvI,QAAU,CAAC,EAMhBuI,KAAKw7B,iBAAkB,EACvBx7B,KAAK8wB,oBAAqB,EAO1B9wB,KAAK05B,eAAgB,EAKrB15B,KAAKy7B,mBAAoB,EAKzBz7B,KAAK07B,yBAA0B,EAK/B17B,KAAK27B,kBAAmB,EAIxB37B,KAAK47B,uBAAwB,EAC7B57B,KAAK67B,uBAAwB,EAK7B77B,KAAKy5B,YAAa,EAIlBz5B,KAAK87B,OAAQ,EAKb97B,KAAK+7B,YAAa,EAIlB/7B,KAAKg8B,sBAAuB,EAS5Bh8B,KAAK+0B,UAAY,CAAEtjC,EAAG,EAAGC,EAAG,GAI5BsO,KAAKi8B,cAAgB,IAAI3rC,IACzB0P,KAAKk8B,iBAAkB,EAEvBl8B,KAAKm8B,iBAAkB,EACvBn8B,KAAKo8B,2BAA4B,EACjCp8B,KAAKq8B,kBAAoB,KACjBr8B,KAAKy5B,aACLz5B,KAAKy5B,YAAa,EAClBz5B,KAAKs8B,oBACT,EAOJt8B,KAAKu8B,iBAAmB,KCnJpC,IAAgBC,EDoJAx8B,KAAKo8B,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZh7B,KAAKy8B,MAAMl9B,QAAQm9B,IACnB18B,KAAKy8B,MAAMl9B,QAAQo9B,IACnB38B,KAAKy8B,MAAMl9B,QAAQq9B,IACnB58B,KAAKy8B,MAAMl9B,QAAQs9B,IChKnBL,EDiKO3B,GChKflsC,OAAOmuC,aACPnuC,OAAOmuC,YAAYC,OAAOP,ED+JS,EAE/Bx8B,KAAKg9B,cAAe,EACpBh9B,KAAKi9B,WAAY,EACjBj9B,KAAKk9B,kBAAoB,EAKzBl9B,KAAKm9B,YAAc,IAAI7sC,IACvB0P,KAAKxI,aAAeA,EACpBwI,KAAKiH,KAAOlZ,EAASA,EAAOkZ,MAAQlZ,EAASiS,KAC7CA,KAAKo9B,KAAOrvC,EAAS,IAAIA,EAAOqvC,KAAMrvC,GAAU,GAChDiS,KAAKjS,OAASA,EACdiS,KAAKu6B,MAAQxsC,EAASA,EAAOwsC,MAAQ,EAAI,EACzC,IAAK,IAAIhiC,EAAI,EAAGA,EAAIyH,KAAKo9B,KAAKjtC,OAAQoI,IAClCyH,KAAKo9B,KAAK7kC,GAAGyjC,sBAAuB,EAEpCh8B,KAAKiH,OAASjH,OACdA,KAAKy8B,MAAQ,IAAIjC,GACzB,CACA92B,gBAAAA,CAAiB9Y,EAAM4Y,GAInB,OAHKxD,KAAKi8B,cAAcxrC,IAAI7F,IACxBoV,KAAKi8B,cAAcvrC,IAAI9F,EAAM,IAAI03B,IAE9BtiB,KAAKi8B,cAAc1rC,IAAI3F,GAAMuV,IAAIqD,EAC5C,CACA65B,eAAAA,CAAgBzyC,GACZ,MAAM0yC,EAAsBt9B,KAAKi8B,cAAc1rC,IAAI3F,GAAM,QAAA8Z,EAAAxU,UAAAC,OADpCotC,EAAI,IAAArzC,MAAAwa,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ24B,EAAI34B,EAAA,GAAA1U,UAAA0U,GAEzB04B,GAAuBA,EAAoB9a,UAAU+a,EACzD,CACAC,YAAAA,CAAa5yC,GACT,OAAOoV,KAAKi8B,cAAcxrC,IAAI7F,EAClC,CAIA6E,KAAAA,CAAMD,GAAqD,IAA3CkqC,EAAaxpC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG8P,KAAKiH,KAAKi1B,gBACtC,GAAIl8B,KAAKxQ,SACL,OExMhB,IAAsBoN,EFyMVoD,KAAK87B,OEzMKl/B,EFyMgBpN,aExMRiuC,YAAkC,QAApB7gC,EAAQwG,QFyMxCpD,KAAKxQ,SAAWA,EAChB,MAAM,SAAE7B,EAAQ,OAAEvB,EAAM,cAAE0B,GAAkBkS,KAAKvI,QASjD,GARI3J,IAAkBA,EAAcQ,SAChCR,EAAc2B,MAAMD,GAExBwQ,KAAKiH,KAAKw1B,MAAMt8B,IAAIH,MACpBA,KAAKjS,QAAUiS,KAAKjS,OAAOyO,SAAS2D,IAAIH,MACpC05B,IAAkBttC,GAAUuB,KAC5BqS,KAAK05B,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsBA,IAAO39B,KAAKiH,KAAK40B,uBAAwB,EACrEX,EAAqB1rC,GAAU,KAC3BwQ,KAAKiH,KAAK40B,uBAAwB,EAClC6B,GAAeA,IACfA,EGrNpB,SAAex7B,EAAU07B,GACrB,MAAMvzC,EAAQoY,YAAYC,MACpBm7B,EAAe/wC,IAAmB,IAAlB,UAAEyU,GAAWzU,EAC/B,MAAMwvB,EAAU/a,EAAYlX,EACxBiyB,GAAWshB,IACX78B,GAAY88B,GACZ37B,EAASoa,EAAUshB,GACvB,EAGJ,OADA/8B,GAAMmC,KAAK66B,GAAc,GAClB,IAAM98B,GAAY88B,EAC7B,CH0MkCpjB,CAAMkjB,EAAqB,KACrCpJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/Cx0B,KAAKy8B,MAAMl9B,QAAQu+B,IACvB,GAER,CACInwC,GACAqS,KAAKiH,KAAK82B,mBAAmBpwC,EAAUqS,OAGd,IAAzBA,KAAKvI,QAAQ/M,SACboD,IACCH,GAAYvB,IACb4T,KAAK0D,iBAAiB,aAAa9T,IAA+E,IAA9E,MAAE0R,EAAK,iBAAE+yB,EAAgB,yBAAE2J,EAA0B5xC,OAAQ6xC,GAAYruC,EACzG,GAAIoQ,KAAKk+B,yBAGL,OAFAl+B,KAAKpH,YAASzN,OACd6U,KAAKm+B,oBAAiBhzC,GAI1B,MAAMizC,EAAmBp+B,KAAKvI,QAAQiI,YAClC5R,EAAcoxB,wBACdmf,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BzwC,EAAciY,WAKvEy4B,GAAiBx+B,KAAKy+B,eACvB/F,GAAiB14B,KAAKy+B,aAAcR,IACrCD,EAMEU,GAAgCrK,GAAoB2J,EAC1D,GAAIh+B,KAAKvI,QAAQknC,YACZ3+B,KAAKq5B,YAAcr5B,KAAKq5B,WAAW7pC,UACpCkvC,GACCrK,IACImK,IAAkBx+B,KAAK22B,kBAAoB,CAC5C32B,KAAKq5B,aACLr5B,KAAK85B,aAAe95B,KAAKq5B,WACzBr5B,KAAK85B,aAAaA,kBAAe3uC,GAErC6U,KAAK4+B,mBAAmBt9B,EAAOo9B,GAC/B,MAAMG,EAAmB,IAClBne,GAAmB0d,EAAkB,UACxCrjB,OAAQujB,EACRrjB,WAAYsjB,IAEZzwC,EAAcy4B,oBACdvmB,KAAKvI,QAAQknC,cACbE,EAAiBpkB,MAAQ,EACzBokB,EAAiB1sC,MAAO,GAE5B6N,KAAKskB,eAAeua,EACxB,MAOSxK,GACDyJ,GAAgB99B,MAEhBA,KAAK42B,UAAY52B,KAAKvI,QAAQuyB,gBAC9BhqB,KAAKvI,QAAQuyB,iBAGrBhqB,KAAKy+B,aAAeR,CAAS,GAGzC,CACAvuC,OAAAA,GACIsQ,KAAKvI,QAAQ9J,UAAYqS,KAAKm2B,aAC9Bn2B,KAAKiH,KAAKw1B,MAAMn8B,OAAON,MACvB,MAAMs2B,EAAQt2B,KAAKu2B,WACnBD,GAASA,EAAMh2B,OAAON,MACtBA,KAAKjS,QAAUiS,KAAKjS,OAAOyO,SAASiE,OAAOT,MAC3CA,KAAKxQ,cAAWrE,EAChB4V,GAAYf,KAAKu8B,iBACrB,CAEAuC,WAAAA,GACI9+B,KAAK47B,uBAAwB,CACjC,CACAmD,aAAAA,GACI/+B,KAAK47B,uBAAwB,CACjC,CACAoD,eAAAA,GACI,OAAOh/B,KAAK47B,uBAAyB57B,KAAK67B,qBAC9C,CACAqC,sBAAAA,GACI,OAAQl+B,KAAK8wB,oBACR9wB,KAAKjS,QAAUiS,KAAKjS,OAAOmwC,2BAC5B,CACR,CAEAe,WAAAA,GACQj/B,KAAKg/B,oBAETh/B,KAAKy5B,YAAa,EAClBz5B,KAAKy8B,OAASz8B,KAAKy8B,MAAMl9B,QAAQ2/B,IACjCl/B,KAAKu7B,cACT,CACA4D,oBAAAA,GACI,MAAM,cAAErxC,GAAkBkS,KAAKvI,QAC/B,OAAO3J,GAAiBA,EAAciY,WAAWrO,iBACrD,CACAy+B,UAAAA,GAAyC,IAA9BiJ,IAAqBlvC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,KAAAA,UAAA,GAE5B,GADA8P,KAAKiH,KAAKi1B,iBAAkB,EACxBl8B,KAAKiH,KAAK+3B,kBAEV,YADAh/B,KAAKvI,QAAQuyB,gBAAkBhqB,KAAKvI,QAAQuyB,kBAIhD,IADChqB,KAAKiH,KAAKwyB,YAAcz5B,KAAKiH,KAAKg4B,cAC/Bj/B,KAAK05B,cACL,OACJ15B,KAAK05B,eAAgB,EACrB,IAAK,IAAInhC,EAAI,EAAGA,EAAIyH,KAAKo9B,KAAKjtC,OAAQoI,IAAK,CACvC,MAAMiN,EAAOxF,KAAKo9B,KAAK7kC,GACvBiN,EAAKw2B,sBAAuB,EAC5Bx2B,EAAKquB,aAAa,YACdruB,EAAK/N,QAAQknC,YACbn5B,EAAK2wB,YAAW,EAExB,CACA,MAAM,SAAExoC,EAAQ,OAAEvB,GAAW4T,KAAKvI,QAClC,QAAiBtM,IAAbwC,IAA2BvB,EAC3B,OACJ,MAAMsL,EAAoBsI,KAAKm/B,uBAC/Bn/B,KAAKq/B,2BAA6B3nC,EAC5BA,EAAkBsI,KAAKxI,aAAc,SACrCrM,EACN6U,KAAKs/B,iBACLF,GAAyBp/B,KAAKq9B,gBAAgB,aAClD,CACA5uC,MAAAA,GACIuR,KAAKm8B,iBAAkB,EAKvB,GAJyBn8B,KAAKg/B,kBAQ1B,OAHAh/B,KAAK++B,gBACL/+B,KAAKs8B,yBACLt8B,KAAKy8B,MAAMl9B,QAAQggC,IAGlBv/B,KAAKy5B,YACNz5B,KAAKy8B,MAAMl9B,QAAQigC,IAEvBx/B,KAAKy5B,YAAa,EAIlBz5B,KAAKy8B,MAAMl9B,QAAQkgC,IAKnBz/B,KAAKy8B,MAAMl9B,QAAQu0B,IAKnB9zB,KAAKy8B,MAAMl9B,QAAQmgC,IACnB1/B,KAAKs8B,oBAML,MAAM55B,EAAMD,YAAYC,MACxB1B,GAAUM,MAAQjP,EAAM,EAAG,IAAO,GAAIqQ,EAAM1B,GAAUO,WACtDP,GAAUO,UAAYmB,EACtB1B,GAAUQ,cAAe,EACzBP,GAAMxS,OAAO2R,QAAQY,IACrBC,GAAM0+B,UAAUv/B,QAAQY,IACxBC,GAAMpS,OAAOuR,QAAQY,IACrBA,GAAUQ,cAAe,CAC7B,CACAs0B,SAAAA,GACS91B,KAAKm8B,kBACNn8B,KAAKm8B,iBAAkB,EACvBzF,gBAAe,IAAM12B,KAAKvR,WAElC,CACA6tC,iBAAAA,GACIt8B,KAAKy8B,MAAMl9B,QAAQqgC,IACnB5/B,KAAKm9B,YAAY59B,QAAQsgC,GAC7B,CACAC,wBAAAA,GACS9/B,KAAKo8B,4BACNp8B,KAAKo8B,2BAA4B,EACjCv7B,GAAM8+B,UAAU3/B,KAAKu8B,kBAAkB,GAAO,GAEtD,CACAxF,yBAAAA,GAMIl2B,GAAMuiB,YAAW,KACTpjB,KAAK05B,cACL15B,KAAKiH,KAAK6uB,YAGV91B,KAAKiH,KAAKo1B,mBACd,GAER,CAIAiD,cAAAA,IACQt/B,KAAKu5B,UAAav5B,KAAKxQ,WAE3BwQ,KAAKu5B,SAAWv5B,KAAKgyB,UACzB,CACA8B,YAAAA,GACI,IAAK9zB,KAAKxQ,SACN,OAGJ,GADAwQ,KAAK6zB,iBACC7zB,KAAKvI,QAAQsoC,sBAAuB//B,KAAK42B,YAC1C52B,KAAK05B,cACN,OASJ,GAAI15B,KAAKq5B,aAAer5B,KAAKq5B,WAAW7pC,SACpC,IAAK,IAAI+I,EAAI,EAAGA,EAAIyH,KAAKo9B,KAAKjtC,OAAQoI,IAAK,CAC1ByH,KAAKo9B,KAAK7kC,GAClBs7B,cACT,CAEJ,MAAMmM,EAAahgC,KAAK5T,OACxB4T,KAAK5T,OAAS4T,KAAKgyB,SAAQ,GAC3BhyB,KAAKigC,gBAAkBnS,KACvB9tB,KAAK05B,eAAgB,EACrB15B,KAAKg1B,qBAAkB7pC,EACvB6U,KAAKq9B,gBAAgB,UAAWr9B,KAAK5T,OAAO6kC,WAC5C,MAAM,cAAEnjC,GAAkBkS,KAAKvI,QAC/B3J,GACIA,EAAc00B,OAAO,gBAAiBxiB,KAAK5T,OAAO6kC,UAAW+O,EAAaA,EAAW/O,eAAY9lC,EACzG,CACA0oC,YAAAA,GAAgC,IAAnBqM,EAAKhwC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,UACbiwC,EAAmBr1C,QAAQkV,KAAKvI,QAAQ2oC,cAAgBpgC,KAAKxQ,UAC7DwQ,KAAK4yB,QACL5yB,KAAK4yB,OAAO2I,cAAgBv7B,KAAKiH,KAAKs0B,aACtCv7B,KAAK4yB,OAAOsN,QAAUA,IACtBC,GAAmB,GAEnBA,IACAngC,KAAK4yB,OAAS,CACV2I,YAAav7B,KAAKiH,KAAKs0B,YACvB2E,QACAG,OAAQhF,EAAkBr7B,KAAKxQ,UAC/B8K,OAAQ8gC,EAAcp7B,KAAKxQ,WAGvC,CACA8rC,cAAAA,GACI,IAAKA,EACD,OACJ,MAAMgF,EAAmBtgC,KAAK05B,eAAiB15B,KAAKg8B,qBAC9CuE,EAAgBvgC,KAAKg1B,kBAAoByD,GAAYz4B,KAAKg1B,iBAC1Dt9B,EAAoBsI,KAAKm/B,uBACzBqB,EAAyB9oC,EACzBA,EAAkBsI,KAAKxI,aAAc,SACrCrM,EACAs1C,EAA8BD,IAA2BxgC,KAAKq/B,2BAChEiB,IACCC,GACGzoC,GAAakI,KAAKxI,eAClBipC,KACJnF,EAAet7B,KAAKxQ,SAAUgxC,GAC9BxgC,KAAKg8B,sBAAuB,EAC5Bh8B,KAAK64B,iBAEb,CACA7G,OAAAA,GAAgC,IAAxB0O,IAAexwC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,KAAAA,UAAA,GACnB,MAAMywC,EAAU3gC,KAAK6yB,iBACrB,IAAI5B,EAAYjxB,KAAK4gC,oBAAoBD,GA+8BrD,IAAkBjS,EAr8BN,OAJIgS,IACAzP,EAAYjxB,KAAK0gC,gBAAgBzP,IAy8B7C4P,IADcnS,EAt8BGuC,GAu8BHx/B,GACdovC,GAAUnS,EAAIh9B,GAv8BC,CACH6pC,YAAav7B,KAAKiH,KAAKs0B,YACvBuF,YAAaH,EACb1P,YACAz5B,aAAc,CAAC,EACfqB,OAAQmH,KAAKlQ,GAErB,CACA+iC,cAAAA,GACI,MAAM,cAAE/kC,GAAkBkS,KAAKvI,QAC/B,IAAK3J,EACD,OAAOggC,KACX,MAAMY,EAAM5gC,EAAcyhC,sBAEpB,OAAEqD,GAAW5yB,KAAKiH,KAKxB,OAJI2rB,IACA9D,GAAcJ,EAAIj9B,EAAGmhC,EAAOt4B,OAAO7I,GACnCq9B,GAAcJ,EAAIh9B,EAAGkhC,EAAOt4B,OAAO5I,IAEhCg9B,CACX,CACAkS,mBAAAA,CAAoBlS,GAChB,MAAMqS,EAAmBjT,KACzBkK,GAAY+I,EAAkBrS,GAK9B,IAAK,IAAIn2B,EAAI,EAAGA,EAAIyH,KAAKo9B,KAAKjtC,OAAQoI,IAAK,CACvC,MAAMiN,EAAOxF,KAAKo9B,KAAK7kC,IACjB,OAAEq6B,EAAM,QAAEn7B,GAAY+N,EAC5B,GAAIA,IAASxF,KAAKiH,MAAQ2rB,GAAUn7B,EAAQ2oC,aAAc,CAKtD,GAAIxN,EAAOyN,OAAQ,CACfrI,GAAY+I,EAAkBrS,GAC9B,MAAQkE,OAAQoO,GAAehhC,KAAKiH,KAKhC+5B,IACAlS,GAAciS,EAAiBtvC,GAAIuvC,EAAW1mC,OAAO7I,GACrDq9B,GAAciS,EAAiBrvC,GAAIsvC,EAAW1mC,OAAO5I,GAE7D,CACAo9B,GAAciS,EAAiBtvC,EAAGmhC,EAAOt4B,OAAO7I,GAChDq9B,GAAciS,EAAiBrvC,EAAGkhC,EAAOt4B,OAAO5I,EACpD,CACJ,CACA,OAAOqvC,CACX,CACAE,cAAAA,CAAevS,GAA4B,IAAvBwS,EAAahxC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GAC7B,MAAMixC,EAAiBrT,KACvBkK,GAAYmJ,EAAgBzS,GAC5B,IAAK,IAAIn2B,EAAI,EAAGA,EAAIyH,KAAKo9B,KAAKjtC,OAAQoI,IAAK,CACvC,MAAMiN,EAAOxF,KAAKo9B,KAAK7kC,IAClB2oC,GACD17B,EAAK/N,QAAQ2oC,cACb56B,EAAKotB,QACLptB,IAASA,EAAKyB,MACdqoB,GAAa6R,EAAgB,CACzB1vC,GAAI+T,EAAKotB,OAAOt4B,OAAO7I,EACvBC,GAAI8T,EAAKotB,OAAOt4B,OAAO5I,IAG1BoG,GAAa0N,EAAKhO,eAEvB83B,GAAa6R,EAAgB37B,EAAKhO,aACtC,CAIA,OAHIM,GAAakI,KAAKxI,eAClB83B,GAAa6R,EAAgBnhC,KAAKxI,cAE/B2pC,CACX,CACAT,eAAAA,CAAgBhS,GACZ,MAAM0S,EAAsBtT,KAC5BkK,GAAYoJ,EAAqB1S,GACjC,IAAK,IAAIn2B,EAAI,EAAGA,EAAIyH,KAAKo9B,KAAKjtC,OAAQoI,IAAK,CACvC,MAAMiN,EAAOxF,KAAKo9B,KAAK7kC,GACvB,IAAKiN,EAAKhW,SACN,SACJ,IAAKsI,GAAa0N,EAAKhO,cACnB,SACJ02B,GAAS1oB,EAAKhO,eAAiBgO,EAAK85B,iBACpC,MAAM/G,EAAYzK,KAElBkK,GAAYO,EADI/yB,EAAKqtB,kBAErByF,GAAoB8I,EAAqB57B,EAAKhO,aAAcgO,EAAK+zB,SAAW/zB,EAAK+zB,SAAStI,eAAY9lC,EAAWotC,EACrH,CAIA,OAHIzgC,GAAakI,KAAKxI,eAClB8gC,GAAoB8I,EAAqBphC,KAAKxI,cAE3C4pC,CACX,CACAC,cAAAA,CAAe//B,GACXtB,KAAKshC,YAAchgC,EACnBtB,KAAKiH,KAAK64B,2BACV9/B,KAAKy7B,mBAAoB,CAC7B,CACAzF,UAAAA,CAAWv+B,GACPuI,KAAKvI,QAAU,IACRuI,KAAKvI,WACLA,EACHkiC,eAAiCxuC,IAAtBsM,EAAQkiC,WAA0BliC,EAAQkiC,UAE7D,CACA4F,iBAAAA,GACIv/B,KAAK4yB,YAASznC,EACd6U,KAAK5T,YAASjB,EACd6U,KAAKu5B,cAAWpuC,EAChB6U,KAAKq/B,gCAA6Bl0C,EAClC6U,KAAKshC,iBAAcn2C,EACnB6U,KAAKpH,YAASzN,EACd6U,KAAK05B,eAAgB,CACzB,CACA6H,kCAAAA,GACSvhC,KAAKwhC,gBAQNxhC,KAAKwhC,eAAeC,2BACpBzgC,GAAUO,WACVvB,KAAKwhC,eAAe7E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5B+E,EAAkBxxC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GACjC,IAAIiK,EAMJ,MAAM4+B,EAAO/4B,KAAK2hC,UAClB3hC,KAAKy7B,oBAAsBz7B,KAAKy7B,kBAAoB1C,EAAK0C,mBACzDz7B,KAAK27B,mBAAqB37B,KAAK27B,iBAAmB5C,EAAK4C,kBACvD37B,KAAK07B,0BAA4B17B,KAAK07B,wBAA0B3C,EAAK2C,yBACrE,MAAMkG,EAAW92C,QAAQkV,KAAK85B,eAAiB95B,OAAS+4B,EAUxD,KALkB2I,GACbE,GAAY5hC,KAAK07B,yBAClB17B,KAAKy7B,oBACmB,QAAtBthC,EAAK6F,KAAKjS,cAA2B,IAAPoM,OAAgB,EAASA,EAAGshC,oBAC5Dz7B,KAAK6hC,gCAEL,OACJ,MAAM,OAAEz1C,EAAM,SAAEuB,GAAaqS,KAAKvI,QAIlC,GAAKuI,KAAK5T,SAAYA,GAAUuB,GAAhC,CASA,GAPAqS,KAAKyhC,yBAA2BzgC,GAAUO,WAOrCvB,KAAKshC,cAAgBthC,KAAKm+B,eAAgB,CAE3C,MAAMqD,EAAiBxhC,KAAK8hC,6BACxBN,GACAA,EAAep1C,QACY,IAA3B4T,KAAKk9B,mBACLl9B,KAAKwhC,eAAiBA,EACtBxhC,KAAKuhC,qCACLvhC,KAAKm+B,eAAiBrQ,KACtB9tB,KAAK+hC,qBAAuBjU,KAC5Bb,GAAqBjtB,KAAK+hC,qBAAsB/hC,KAAK5T,OAAO6kC,UAAWuQ,EAAep1C,OAAO6kC,WAC7F+G,GAAYh4B,KAAKm+B,eAAgBn+B,KAAK+hC,uBAGtC/hC,KAAKwhC,eAAiBxhC,KAAKm+B,oBAAiBhzC,CAEpD,CAKA,GAAK6U,KAAKm+B,gBAAmBn+B,KAAKshC,YAAlC,CxB5qBZ,IAAyB1oC,EAAQm0B,EAAUh/B,EwBqtB/B,GApCKiS,KAAKpH,SACNoH,KAAKpH,OAASk1B,KACd9tB,KAAKgiC,qBAAuBlU,MAK5B9tB,KAAKm+B,gBACLn+B,KAAK+hC,sBACL/hC,KAAKwhC,gBACLxhC,KAAKwhC,eAAe5oC,QACpBoH,KAAKuhC,qCxB5rBI3oC,EwB6rBOoH,KAAKpH,OxB7rBJm0B,EwB6rBY/sB,KAAKm+B,exB7rBPpwC,EwB6rBuBiS,KAAKwhC,eAAe5oC,OxB5rBlFk0B,GAAiBl0B,EAAOnH,EAAGs7B,EAASt7B,EAAG1D,EAAO0D,GAC9Cq7B,GAAiBl0B,EAAOlH,EAAGq7B,EAASr7B,EAAG3D,EAAO2D,IwBgsB7BsO,KAAKshC,aACNx2C,QAAQkV,KAAK85B,cAEb95B,KAAKpH,OAASoH,KAAKihC,eAAejhC,KAAK5T,OAAO6kC,WAG9C+G,GAAYh4B,KAAKpH,OAAQoH,KAAK5T,OAAO6kC,WAEzCxC,GAAczuB,KAAKpH,OAAQoH,KAAKshC,cAMhCtJ,GAAYh4B,KAAKpH,OAAQoH,KAAK5T,OAAO6kC,WAKrCjxB,KAAK6hC,+BAAgC,CACrC7hC,KAAK6hC,gCAAiC,EACtC,MAAML,EAAiBxhC,KAAK8hC,6BACxBN,GACA12C,QAAQ02C,EAAe1H,gBACnBhvC,QAAQkV,KAAK85B,gBAChB0H,EAAe/pC,QAAQ2oC,cACxBoB,EAAe5oC,QACY,IAA3BoH,KAAKk9B,mBACLl9B,KAAKwhC,eAAiBA,EACtBxhC,KAAKuhC,qCACLvhC,KAAKm+B,eAAiBrQ,KACtB9tB,KAAK+hC,qBAAuBjU,KAC5Bb,GAAqBjtB,KAAK+hC,qBAAsB/hC,KAAKpH,OAAQ4oC,EAAe5oC,QAC5Eo/B,GAAYh4B,KAAKm+B,eAAgBn+B,KAAK+hC,uBAGtC/hC,KAAKwhC,eAAiBxhC,KAAKm+B,oBAAiBhzC,CAEpD,CAIA0vC,GAAoBE,sBA/DV,CA9BA,CA8Fd,CACA+G,0BAAAA,GACI,GAAK9hC,KAAKjS,SACNmgC,GAASluB,KAAKjS,OAAOyJ,gBACrB22B,GAAenuB,KAAKjS,OAAOyJ,cAG/B,OAAIwI,KAAKjS,OAAOk0C,eACLjiC,KAAKjS,OAGLiS,KAAKjS,OAAO+zC,4BAE3B,CACAG,YAAAA,GACI,OAAOn3C,SAASkV,KAAKm+B,gBACjBn+B,KAAKshC,aACLthC,KAAKvI,QAAQknC,aACb3+B,KAAK5T,OACb,CACAwwC,cAAAA,GACI,IAAIziC,EACJ,MAAM4+B,EAAO/4B,KAAK2hC,UACZC,EAAW92C,QAAQkV,KAAK85B,eAAiB95B,OAAS+4B,EACxD,IAAIzS,GAAU,EAuBd,IAlBItmB,KAAKy7B,oBAA6C,QAAtBthC,EAAK6F,KAAKjS,cAA2B,IAAPoM,OAAgB,EAASA,EAAGshC,sBACtFnV,GAAU,GAMVsb,IACC5hC,KAAK07B,yBAA2B17B,KAAK27B,oBACtCrV,GAAU,GAMVtmB,KAAKyhC,2BAA6BzgC,GAAUO,YAC5C+kB,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEl6B,EAAM,SAAEuB,GAAaqS,KAAKvI,QAWlC,GANAuI,KAAKw7B,gBAAkB1wC,QAASkV,KAAKjS,QAAUiS,KAAKjS,OAAOytC,iBACvDx7B,KAAK22B,kBACL32B,KAAKkiC,kBACJliC,KAAKw7B,kBACNx7B,KAAKshC,YAActhC,KAAKm+B,oBAAiBhzC,IAExC6U,KAAK5T,SAAYA,IAAUuB,EAC5B,OAKJqqC,GAAYh4B,KAAKigC,gBAAiBjgC,KAAK5T,OAAO6kC,WAI9C,MAAMkR,EAAiBniC,KAAK+0B,UAAUtjC,EAChC2wC,EAAiBpiC,KAAK+0B,UAAUrjC,GlBvyBlD,SAAyBg9B,EAAKqG,EAAWsN,GAAsC,IAA5BC,EAAkBpyC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GACjE,MAAMqyC,EAAaF,EAASlyC,OAC5B,IAAKoyC,EACD,OAGJ,IAAI/8B,EACAlE,EAFJyzB,EAAUtjC,EAAIsjC,EAAUrjC,EAAI,EAG5B,IAAK,IAAI6G,EAAI,EAAGA,EAAIgqC,EAAYhqC,IAAK,CACjCiN,EAAO68B,EAAS9pC,GAChB+I,EAAQkE,EAAKwvB,gBAKb,MAAMxlC,EAAWgW,EAAKhW,SAClBA,GACAA,EAASmI,OACkB,aAA3BnI,EAASmI,MAAM6qC,UAGfF,GACA98B,EAAK/N,QAAQ2oC,cACb56B,EAAKotB,QACLptB,IAASA,EAAKyB,MACdqoB,GAAaZ,EAAK,CACdj9B,GAAI+T,EAAKotB,OAAOt4B,OAAO7I,EACvBC,GAAI8T,EAAKotB,OAAOt4B,OAAO5I,IAG3B4P,IAEAyzB,EAAUtjC,GAAK6P,EAAM7P,EAAEoB,MACvBkiC,EAAUrjC,GAAK4P,EAAM5P,EAAEmB,MAEvB47B,GAAcC,EAAKptB,IAEnBghC,GAAsBxqC,GAAa0N,EAAKhO,eACxC83B,GAAaZ,EAAKlpB,EAAKhO,cAE/B,CAKAu9B,EAAUtjC,EAAIk9B,GAAcoG,EAAUtjC,GACtCsjC,EAAUrjC,EAAIi9B,GAAcoG,EAAUrjC,EAC1C,CkB6vBY+wC,CAAgBziC,KAAKigC,gBAAiBjgC,KAAK+0B,UAAW/0B,KAAKo9B,KAAMwE,IAK7D7I,EAAK3sC,QACJ2sC,EAAKngC,QACgB,IAArBoH,KAAK+0B,UAAUtjC,GAAgC,IAArBuO,KAAK+0B,UAAUrjC,IAC1CqnC,EAAKngC,OAASmgC,EAAK3sC,OAAO6kC,WAE9B,MAAM,OAAEr4B,GAAWmgC,EACnB,IAAKngC,EAWD,YALIoH,KAAK0iC,sBACL1iC,KAAKg1B,gBAAkBnH,KACvB7tB,KAAK0iC,oBAAsB,OAC3B1iC,KAAK64B,mBAIR74B,KAAKg1B,kBACNh1B,KAAKg1B,gBAAkBnH,KACvB7tB,KAAK2iC,6BAA+B9U,MAExC,MAAM+U,EAA0B5iC,KAAK0iC,oBAUrC7V,GAAa7sB,KAAKg1B,gBAAiBh1B,KAAKigC,gBAAiBrnC,EAAQoH,KAAKxI,cACtEwI,KAAK0iC,oBAAsB1I,GAAyBh6B,KAAKg1B,gBAAiBh1B,KAAK+0B,WAC3E/0B,KAAK0iC,sBAAwBE,GAC7B5iC,KAAK+0B,UAAUtjC,IAAM0wC,GACrBniC,KAAK+0B,UAAUrjC,IAAM0wC,IACrBpiC,KAAKg9B,cAAe,EACpBh9B,KAAK64B,iBACL74B,KAAKq9B,gBAAgB,mBAAoBzkC,IAK7CiiC,GAAoBG,wBACxB,CACApB,IAAAA,GACI55B,KAAKi9B,WAAY,CAErB,CACA7D,IAAAA,GACIp5B,KAAKi9B,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlBgK,IAAS3yC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,KAAAA,UAAA,GAEpB,GADA8P,KAAKvI,QAAQohC,gBAAkB74B,KAAKvI,QAAQohC,iBACxCgK,EAAW,CACX,MAAMvM,EAAQt2B,KAAKu2B,WACnBD,GAASA,EAAMuC,gBACnB,CACI74B,KAAK85B,eAAiB95B,KAAK85B,aAAatqC,WACxCwQ,KAAK85B,kBAAe3uC,EAE5B,CACAyzC,kBAAAA,CAAmBt9B,GAA6C,IAAtCo9B,EAA4BxuC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GAClD,MAAMqpC,EAAWv5B,KAAKu5B,SAChBuJ,EAAuBvJ,EACvBA,EAAS/hC,aACT,CAAC,EACDurC,EAAc,IAAK/iC,KAAKxI,cACxB8pC,EAAczT,KACf7tB,KAAKwhC,gBACLxhC,KAAKwhC,eAAe/pC,QAAQknC,aAC7B3+B,KAAKm+B,eAAiBn+B,KAAK+hC,0BAAuB52C,GAEtD6U,KAAK6hC,gCAAkCnD,EACvC,MAAMsE,EAAiBlV,KAGjBmV,GAFiB1J,EAAWA,EAAS1gC,YAAS1N,MAC/B6U,KAAK5T,OAAS4T,KAAK5T,OAAOyM,YAAS1N,GAElDmrC,EAAQt2B,KAAKu2B,WACb2M,GAAgB5M,GAASA,EAAME,QAAQrmC,QAAU,EACjDgzC,EAAyBr4C,QAAQm4C,IAClCC,IAC0B,IAA3BljC,KAAKvI,QAAQkiC,YACZ35B,KAAKo9B,KAAKzyC,KAAKy4C,KAEpB,IAAIC,EADJrjC,KAAKk9B,kBAAoB,EAEzBl9B,KAAKsjC,eAAkBpoC,IACnB,MAAMqV,EAAWrV,EAAS,IL36B1C,IAAmBqJ,EAAGC,EK66CN8N,EAAQjC,EAAMC,EAAI7nB,EAjgBlB86C,GAAajC,EAAY7vC,EAAG6P,EAAM7P,EAAG8e,GACrCgzB,GAAajC,EAAY5vC,EAAG4P,EAAM5P,EAAG6e,GACrCvQ,KAAKqhC,eAAeC,GAChBthC,KAAKm+B,gBACLn+B,KAAK+hC,sBACL/hC,KAAK5T,QACL4T,KAAKwhC,gBACLxhC,KAAKwhC,eAAep1C,SACpB6gC,GAAqB+V,EAAgBhjC,KAAK5T,OAAO6kC,UAAWjxB,KAAKwhC,eAAep1C,OAAO6kC,WAyf3F3e,EAxfWtS,KAAKm+B,eAwfR9tB,EAxfwBrQ,KAAK+hC,qBAwfvBzxB,EAxf6C0yB,EAwfzCv6C,EAxfyD8nB,EAyfvFizB,GAAQlxB,EAAO7gB,EAAG4e,EAAK5e,EAAG6e,EAAG7e,EAAGhJ,GAChC+6C,GAAQlxB,EAAO5gB,EAAG2e,EAAK3e,EAAG4e,EAAG5e,EAAGjJ,GArfZ46C,IL17BL9+B,EK27BevE,KAAKm+B,eL37BjB35B,EK27BiC6+B,EL17B3C9+B,EAAE9S,EAAEa,MAAQkS,EAAE/S,EAAEa,KACpBiS,EAAE9S,EAAEc,MAAQiS,EAAE/S,EAAEc,KAChBgS,EAAE7S,EAAEY,MAAQkS,EAAE9S,EAAEY,KAChBiS,EAAE7S,EAAEa,MAAQiS,EAAE9S,EAAEa,OKw7BAyN,KAAKy7B,mBAAoB,GAExB4H,IACDA,EAAqBvV,MACzBkK,GAAYqL,EAAoBrjC,KAAKm+B,iBAErC8E,IACAjjC,KAAKw5B,gBAAkBuJ,ERj8B3C,SAAmBnqC,EAAQ6qC,EAAQ1K,EAAMxoB,EAAU4yB,EAAwBD,GACnEC,GACAvqC,EAAO9B,QAAUqH,GAAI,OAEJhT,IAAjB4tC,EAAKjiC,QAAwBiiC,EAAKjiC,QAAU,EAAG6gC,GAAgBpnB,IAC/D3X,EAAO8qC,YAAcvlC,QAAuBhT,IAAnBs4C,EAAO3sC,QAAwB2sC,EAAO3sC,QAAU,EAAG,EAAG+gC,GAAiBtnB,KAE3F2yB,IACLtqC,EAAO9B,QAAUqH,QAAuBhT,IAAnBs4C,EAAO3sC,QAAwB2sC,EAAO3sC,QAAU,OAAoB3L,IAAjB4tC,EAAKjiC,QAAwBiiC,EAAKjiC,QAAU,EAAGyZ,IAK3H,IAAK,IAAIhY,EAAI,EAAGA,EAAI++B,GAAY/+B,IAAK,CACjC,MAAMorC,EAAc,SAAStM,GAAQ9+B,WACrC,IAAIqrC,EAAenM,GAAUgM,EAAQE,GACjCE,EAAapM,GAAUsB,EAAM4K,QACZx4C,IAAjBy4C,QAA6Cz4C,IAAf04C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACArM,GAAKoM,KAAkBpM,GAAKqM,IAE5BjrC,EAAO+qC,GAAenxC,KAAKD,IAAI4L,GAAIo5B,GAASqM,GAAerM,GAASsM,GAAatzB,GAAW,IACxF7c,EAAQ3C,KAAK8yC,IAAenwC,EAAQ3C,KAAK6yC,MACzChrC,EAAO+qC,IAAgB,MAI3B/qC,EAAO+qC,GAAeE,EAE9B,EAIIJ,EAAO1tC,QAAUgjC,EAAKhjC,UACtB6C,EAAO7C,OAASoI,GAAIslC,EAAO1tC,QAAU,EAAGgjC,EAAKhjC,QAAU,EAAGwa,GAElE,CQ05BoBuzB,CAAUf,EAAaD,EAAsB9iC,KAAKxI,aAAc+Y,EAAU4yB,EAAwBD,IAEtGljC,KAAKiH,KAAK64B,2BACV9/B,KAAK64B,iBACL74B,KAAKk9B,kBAAoB3sB,CAAQ,EAErCvQ,KAAKsjC,eAAetjC,KAAKvI,QAAQknC,WAAa,IAAO,EACzD,CACAra,cAAAA,CAAe7sB,GACXuI,KAAKq9B,gBAAgB,kBACrBr9B,KAAK22B,kBAAoB32B,KAAK22B,iBAAiB9c,OAC3C7Z,KAAK85B,cAAgB95B,KAAK85B,aAAanD,kBACvC32B,KAAK85B,aAAanD,iBAAiB9c,OAEnC7Z,KAAKkiC,mBACLnhC,GAAYf,KAAKkiC,kBACjBliC,KAAKkiC,sBAAmB/2C,GAO5B6U,KAAKkiC,iBAAmBrhC,GAAMpS,QAAO,KACjC8lC,GAAsBC,wBAAyB,EAC/Cx0B,KAAK22B,iBIj+BrB,SAA4BrnC,EAAOulB,EAAWpd,GAC1C,MAAMssC,EAAgBzyC,EAAchC,GAASA,EAAQu1B,GAAYv1B,GAEjE,OADAy0C,EAAc15C,MAAMu2B,GAAmB,GAAImjB,EAAelvB,EAAWpd,IAC9DssC,EAAcn4C,SACzB,CJ69BwCo4C,CAAmB,EAr8BnC,IAq8BuD,IACxDvsC,EACHyjB,SAAWhgB,IACP8E,KAAKsjC,eAAepoC,GACpBzD,EAAQyjB,UAAYzjB,EAAQyjB,SAAShgB,EAAO,EAEhD+f,WAAYA,KACRxjB,EAAQwjB,YAAcxjB,EAAQwjB,aAC9Bjb,KAAKikC,mBAAmB,IAG5BjkC,KAAK85B,eACL95B,KAAK85B,aAAanD,iBAAmB32B,KAAK22B,kBAE9C32B,KAAKkiC,sBAAmB/2C,CAAS,GAEzC,CACA84C,iBAAAA,GACQjkC,KAAK85B,eACL95B,KAAK85B,aAAanD,sBAAmBxrC,EACrC6U,KAAK85B,aAAaR,qBAAkBnuC,GAExC,MAAMmrC,EAAQt2B,KAAKu2B,WACnBD,GAASA,EAAMuD,wBACf75B,KAAK85B,aACD95B,KAAK22B,iBACD32B,KAAKw5B,qBACDruC,EACZ6U,KAAKq9B,gBAAgB,oBACzB,CACAS,eAAAA,GACQ99B,KAAK22B,mBACL32B,KAAKsjC,gBAAkBtjC,KAAKsjC,eAr+BpB,KAs+BRtjC,KAAK22B,iBAAiB9c,QAE1B7Z,KAAKikC,mBACT,CACAC,uBAAAA,GACI,MAAMnL,EAAO/4B,KAAK2hC,UAClB,IAAI,qBAAEK,EAAoB,OAAEppC,EAAM,OAAExM,EAAM,aAAEoL,GAAiBuhC,EAC7D,GAAKiJ,GAAyBppC,GAAWxM,EAAzC,CAOA,GAAI4T,OAAS+4B,GACT/4B,KAAK5T,QACLA,GACA+3C,GAA0BnkC,KAAKvI,QAAQ2sC,cAAepkC,KAAK5T,OAAO6kC,UAAW7kC,EAAO6kC,WAAY,CAChGr4B,EAASoH,KAAKpH,QAAUk1B,KACxB,MAAMuW,EAAU/X,GAAWtsB,KAAK5T,OAAO6kC,UAAUx/B,GACjDmH,EAAOnH,EAAEa,IAAMymC,EAAKngC,OAAOnH,EAAEa,IAC7BsG,EAAOnH,EAAEc,IAAMqG,EAAOnH,EAAEa,IAAM+xC,EAC9B,MAAMC,EAAUhY,GAAWtsB,KAAK5T,OAAO6kC,UAAUv/B,GACjDkH,EAAOlH,EAAEY,IAAMymC,EAAKngC,OAAOlH,EAAEY,IAC7BsG,EAAOlH,EAAEa,IAAMqG,EAAOlH,EAAEY,IAAMgyC,CAClC,CACAtM,GAAYgK,EAAsBppC,GAMlC02B,GAAa0S,EAAsBxqC,GAOnCq1B,GAAa7sB,KAAK2iC,6BAA8B3iC,KAAKigC,gBAAiB+B,EAAsBxqC,EA/BlF,CAgCd,CACAumC,kBAAAA,CAAmBpwC,EAAU6X,GACpBxF,KAAKm9B,YAAY1sC,IAAI9C,IACtBqS,KAAKm9B,YAAYzsC,IAAI/C,EAAU,IAAIirC,IAEzB54B,KAAKm9B,YAAY5sC,IAAI5C,GAC7BwS,IAAIqF,GACV,MAAM/G,EAAS+G,EAAK/N,QAAQ8sC,uBAC5B/+B,EAAK4wB,QAAQ,CACT12B,WAAYjB,EAASA,EAAOiB,gBAAavU,EACzCguC,sBAAuB16B,GAAUA,EAAO+lC,4BAClC/lC,EAAO+lC,4BAA4Bh/B,QACnCra,GAEd,CACAyrC,MAAAA,GACI,MAAMN,EAAQt2B,KAAKu2B,WACnB,OAAOD,GAAQA,EAAMyC,OAAS/4B,IAClC,CACA2hC,OAAAA,GACI,IAAIxnC,EACJ,MAAM,SAAExM,GAAaqS,KAAKvI,QAC1B,OAAO9J,IAAuC,QAA1BwM,EAAK6F,KAAKu2B,kBAA+B,IAAPp8B,OAAgB,EAASA,EAAG4+B,OAAgB/4B,IACtG,CACAykC,WAAAA,GACI,IAAItqC,EACJ,MAAM,SAAExM,GAAaqS,KAAKvI,QAC1B,OAAO9J,EAAsC,QAA1BwM,EAAK6F,KAAKu2B,kBAA+B,IAAPp8B,OAAgB,EAASA,EAAG2+B,cAAW3tC,CAChG,CACAorC,QAAAA,GACI,MAAM,SAAE5oC,GAAaqS,KAAKvI,QAC1B,GAAI9J,EACA,OAAOqS,KAAKiH,KAAKk2B,YAAY5sC,IAAI5C,EACzC,CACAyoC,OAAAA,GAAiE,IAAzD,WAAE2F,EAAU,WAAEr8B,EAAU,sBAAEy5B,GAAwBjpC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAMomC,EAAQt2B,KAAKu2B,WACfD,GACAA,EAAMF,QAAQp2B,KAAMm5B,GACpB4C,IACA/7B,KAAKg1B,qBAAkB7pC,EACvB6U,KAAK+7B,YAAa,GAElBr8B,GACAM,KAAKg2B,WAAW,CAAEt2B,cAC1B,CACA22B,QAAAA,GACI,MAAMC,EAAQt2B,KAAKu2B,WACnB,QAAID,GACOA,EAAMD,SAASr2B,KAK9B,CACAk/B,aAAAA,GACI,MAAM,cAAEpxC,GAAkBkS,KAAKvI,QAC/B,IAAK3J,EACD,OAEJ,IAAI42C,GAAY,EAKhB,MAAM,aAAEltC,GAAiB1J,EAQzB,IAPI0J,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACbwuC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAIpsC,EAAI,EAAGA,EAAImiC,GAAcvqC,OAAQoI,IAAK,CAC3C,MAAMjM,EAAM,SAAWouC,GAAcniC,GAEjCf,EAAalL,KACbq4C,EAAYr4C,GAAOkL,EAAalL,GAChCwB,EAAc82C,eAAet4C,EAAK,GAE1C,CAGAwB,EAAce,SAEd,IAAK,MAAMvC,KAAOq4C,EACd72C,EAAc82C,eAAet4C,EAAKq4C,EAAYr4C,IAIlDwB,EAAc+qC,gBAClB,CACA97B,mBAAAA,CAAoBF,GAChB,IAAI1C,EAAIsY,EACR,IAAKzS,KAAKxQ,UAAYwQ,KAAK87B,MACvB,OACJ,IAAK97B,KAAKi9B,UACN,OAAOtC,GAEX,MAAMkK,EAAS,CACXjK,WAAY,IAEVljC,EAAoBsI,KAAKm/B,uBAC/B,GAAIn/B,KAAK+7B,WAQL,OAPA/7B,KAAK+7B,YAAa,EAClB8I,EAAO/tC,QAAU,GACjB+tC,EAAOC,cACHxmC,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUioC,gBAAkB,GACzGD,EAAOzyC,UAAYsF,EACbA,EAAkBsI,KAAKxI,aAAc,IACrC,OACCqtC,EAEX,MAAM9L,EAAO/4B,KAAK2hC,UAClB,IAAK3hC,KAAKg1B,kBAAoBh1B,KAAK5T,SAAW2sC,EAAKngC,OAAQ,CACvD,MAAMmsC,EAAc,CAAC,EAerB,OAdI/kC,KAAKvI,QAAQ9J,WACbo3C,EAAYjuC,aACsB3L,IAA9B6U,KAAKxI,aAAaV,QACZkJ,KAAKxI,aAAaV,QAClB,EACViuC,EAAYD,cACRxmC,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUioC,gBAAkB,IAEzG9kC,KAAKg9B,eAAiBllC,GAAakI,KAAKxI,gBACxCutC,EAAY3yC,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNsI,KAAKg9B,cAAe,GAEjB+H,CACX,CACA,MAAMC,EAAiBjM,EAAKS,iBAAmBT,EAAKvhC,aACpDwI,KAAKkkC,0BACLW,EAAOzyC,UAAY4nC,GAAyBh6B,KAAK2iC,6BAA8B3iC,KAAK+0B,UAAWiQ,GAC3FttC,IACAmtC,EAAOzyC,UAAYsF,EAAkBstC,EAAgBH,EAAOzyC,YAEhE,MAAM,EAAEX,EAAC,EAAEC,GAAMsO,KAAKg1B,gBACtB6P,EAAOhtC,gBAAkB,GAAc,IAAXpG,EAAE4I,WAA4B,IAAX3I,EAAE2I,YAC7C0+B,EAAKS,gBAKLqL,EAAO/tC,QACHiiC,IAAS/4B,KACiG,QAAnGyS,EAAuC,QAAjCtY,EAAK6qC,EAAeluC,eAA4B,IAAPqD,EAAgBA,EAAK6F,KAAKxI,aAAaV,eAA4B,IAAP2b,EAAgBA,EAAK,EACjIzS,KAAKs5B,gBACDt5B,KAAKxI,aAAaV,QAClBkuC,EAAetB,YAO7BmB,EAAO/tC,QACHiiC,IAAS/4B,UACwB7U,IAA3B65C,EAAeluC,QACXkuC,EAAeluC,QACf,QAC2B3L,IAA/B65C,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAK,MAAMp3C,KAAO0E,EAAiB,CAC/B,QAA4B7F,IAAxB65C,EAAe14C,GACf,SACJ,MAAM,QAAEuoC,EAAO,QAAEsC,GAAYnmC,EAAgB1E,GAOvC24C,EAAiC,SAArBJ,EAAOzyC,UACnB4yC,EAAe14C,GACfuoC,EAAQmQ,EAAe14C,GAAMysC,GACnC,GAAI5B,EAAS,CACT,MAAM+N,EAAM/N,EAAQhnC,OACpB,IAAK,IAAIoI,EAAI,EAAGA,EAAI2sC,EAAK3sC,IACrBssC,EAAO1N,EAAQ5+B,IAAM0sC,CAE7B,MAEIJ,EAAOv4C,GAAO24C,CAEtB,CAYA,OANIjlC,KAAKvI,QAAQ9J,WACbk3C,EAAOC,cACH/L,IAAS/4B,KACH1B,GAAiC,OAAdzB,QAAoC,IAAdA,OAAuB,EAASA,EAAUioC,gBAAkB,GACrG,QAEPD,CACX,CACAjF,aAAAA,GACI5/B,KAAKq5B,WAAar5B,KAAKu5B,cAAWpuC,CACtC,CAEAg6C,SAAAA,GACInlC,KAAKiH,KAAKw1B,MAAMl9B,SAASiG,IAAW,IAAIrL,EAAI,OAAwC,QAAhCA,EAAKqL,EAAKmxB,wBAAqC,IAAPx8B,OAAgB,EAASA,EAAG0f,MAAM,IAC9H7Z,KAAKiH,KAAKw1B,MAAMl9B,QAAQggC,IACxBv/B,KAAKiH,KAAKk2B,YAAYz8B,OAC1B,EAER,CACA,SAASozB,GAAatuB,GAClBA,EAAKsuB,cACT,CACA,SAAS4L,GAAmBl6B,GACxB,IAAIrL,EACJ,MAAMo/B,GAAuC,QAA1Bp/B,EAAKqL,EAAK6zB,kBAA+B,IAAPl/B,OAAgB,EAASA,EAAGo/B,WAAa/zB,EAAK+zB,SACnG,GAAI/zB,EAAKoxB,UACLpxB,EAAKpZ,QACLmtC,GACA/zB,EAAKg4B,aAAa,aAAc,CAChC,MAAQvM,UAAW7kC,EAAQ00C,YAAasE,GAAmB5/B,EAAKpZ,QAC1D,cAAEg4C,GAAkB5+B,EAAK/N,QACzBmqC,EAAWrI,EAAS1gC,SAAW2M,EAAKpZ,OAAOyM,OAG3B,SAAlBurC,EACArW,IAAUxB,IACN,MAAM8Y,EAAezD,EACfrI,EAASuH,YAAYvU,GACrBgN,EAAStI,UAAU1E,GACnBp8B,EAASm8B,GAAW+Y,GAC1BA,EAAa/yC,IAAMlG,EAAOmgC,GAAMj6B,IAChC+yC,EAAa9yC,IAAM8yC,EAAa/yC,IAAMnC,CAAM,IAG3Cg0C,GAA0BC,EAAe7K,EAAStI,UAAW7kC,IAClE2hC,IAAUxB,IACN,MAAM8Y,EAAezD,EACfrI,EAASuH,YAAYvU,GACrBgN,EAAStI,UAAU1E,GACnBp8B,EAASm8B,GAAWlgC,EAAOmgC,IACjC8Y,EAAa9yC,IAAM8yC,EAAa/yC,IAAMnC,EAIlCqV,EAAK24B,iBAAmB34B,EAAKmxB,mBAC7BnxB,EAAKi2B,mBAAoB,EACzBj2B,EAAK24B,eAAe5R,GAAMh6B,IACtBiT,EAAK24B,eAAe5R,GAAMj6B,IAAMnC,EACxC,IAGR,MAAMm1C,EAAczX,KACpBhB,GAAayY,EAAal5C,EAAQmtC,EAAStI,WAC3C,MAAMsU,EAAc1X,KAChB+T,EACA/U,GAAa0Y,EAAa//B,EAAKy7B,eAAemE,GAAgB,GAAO7L,EAASuH,aAG9EjU,GAAa0Y,EAAan5C,EAAQmtC,EAAStI,WAE/C,MAAMoD,GAAoBoE,GAAY6M,GACtC,IAAItH,GAA2B,EAC/B,IAAKx4B,EAAK6zB,WAAY,CAClB,MAAMmI,EAAiBh8B,EAAKs8B,6BAK5B,GAAIN,IAAmBA,EAAenI,WAAY,CAC9C,MAAQE,SAAUiM,EAAgBp5C,OAAQq5C,GAAiBjE,EAC3D,GAAIgE,GAAkBC,EAAc,CAChC,MAAMC,EAAmB5X,KACzBb,GAAqByY,EAAkBnM,EAAStI,UAAWuU,EAAevU,WAC1E,MAAM+R,EAAiBlV,KACvBb,GAAqB+V,EAAgB52C,EAAQq5C,EAAaxU,WACrDyH,GAAiBgN,EAAkB1C,KACpChF,GAA2B,GAE3BwD,EAAe/pC,QAAQknC,aACvBn5B,EAAK24B,eAAiB6E,EACtBx9B,EAAKu8B,qBAAuB2D,EAC5BlgC,EAAKg8B,eAAiBA,EAE9B,CACJ,CACJ,CACAh8B,EAAK63B,gBAAgB,YAAa,CAC9BjxC,SACAmtC,WACAj4B,MAAOikC,EACPD,cACAjR,mBACA2J,4BAER,MACK,GAAIx4B,EAAKoxB,SAAU,CACpB,MAAM,eAAE5M,GAAmBxkB,EAAK/N,QAChCuyB,GAAkBA,GACtB,CAMAxkB,EAAK/N,QAAQiI,gBAAavU,CAC9B,CACA,SAASuxC,GAAoBl3B,GAIzBq1B,GAAoBC,aACft1B,EAAKzX,SAQLyX,EAAKy8B,iBACNz8B,EAAKi2B,kBAAoBj2B,EAAKzX,OAAO0tC,mBAOzCj2B,EAAKk2B,0BAA4Bl2B,EAAKk2B,wBAA0B5wC,QAAQ0a,EAAKi2B,mBACzEj2B,EAAKzX,OAAO0tC,mBACZj2B,EAAKzX,OAAO2tC,0BAChBl2B,EAAKm2B,mBAAqBn2B,EAAKm2B,iBAAmBn2B,EAAKzX,OAAO4tC,kBAClE,CACA,SAASkB,GAAgBr3B,GACrBA,EAAKi2B,kBACDj2B,EAAKk2B,wBACDl2B,EAAKm2B,kBACD,CAChB,CACA,SAASiE,GAAcp6B,GACnBA,EAAKo6B,eACT,CACA,SAASL,GAAkB/5B,GACvBA,EAAK+5B,mBACT,CACA,SAASC,GAAmBh6B,GACxBA,EAAKk0B,eAAgB,CACzB,CACA,SAAS+F,GAAoBj6B,GACzB,MAAM,cAAE1X,GAAkB0X,EAAK/N,QAC3B3J,GAAiBA,EAAciY,WAAW4/B,uBAC1C73C,EAAc00B,OAAO,uBAEzBhd,EAAK81B,gBACT,CACA,SAASwC,GAAgBt4B,GACrBA,EAAKs4B,kBACLt4B,EAAK87B,YAAc97B,EAAK24B,eAAiB34B,EAAK5M,YAASzN,EACvDqa,EAAKi2B,mBAAoB,CAC7B,CACA,SAASkB,GAAmBn3B,GACxBA,EAAKm3B,oBACT,CACA,SAASC,GAAep3B,GACpBA,EAAKo3B,gBACT,CACA,SAASsC,GAAc15B,GACnBA,EAAK05B,eACT,CACA,SAASW,GAAoBvJ,GACzBA,EAAMyD,oBACV,CACA,SAASwJ,GAAajxB,EAAQhR,EAAO7Y,GACjC6pB,EAAOsa,UAAYzuB,GAAImD,EAAMsrB,UAAW,EAAGnkC,GAC3C6pB,EAAOzf,MAAQsL,GAAImD,EAAMzO,MAAO,EAAGpK,GACnC6pB,EAAOjY,OAASiH,EAAMjH,OACtBiY,EAAOqa,YAAcrrB,EAAMqrB,WAC/B,CACA,SAAS6W,GAAQlxB,EAAQjC,EAAMC,EAAI7nB,GAC/B6pB,EAAOhgB,IAAM6L,GAAIkS,EAAK/d,IAAKge,EAAGhe,IAAK7J,GACnC6pB,EAAO/f,IAAM4L,GAAIkS,EAAK9d,IAAK+d,EAAG/d,IAAK9J,EACvC,CAKA,SAAS26C,GAAoB59B,GACzB,OAAQA,EAAKg0B,sBAAwDruC,IAArCqa,EAAKg0B,gBAAgBkK,WACzD,CACA,MAAMrF,GAA0B,CAC5BvpB,SAAU,IACV5I,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB05B,GAAqBC,GAAgC,qBAAdC,WACzCA,UAAUC,UAAUv8C,cAAcqH,SAASg1C,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEpzC,KAAKQ,MACL4M,GACN,SAASihC,GAAUtU,GAEfA,EAAKj6B,IAAM0zC,GAAWzZ,EAAKj6B,KAC3Bi6B,EAAKh6B,IAAMyzC,GAAWzZ,EAAKh6B,IAC/B,CAKA,SAAS4xC,GAA0BC,EAAe7K,EAAUntC,GACxD,MAA0B,aAAlBg4C,GACe,oBAAlBA,IACI5X,GAAOmM,GAAYY,GAAWZ,GAAYvsC,GAAS,GAChE,CKp9CA,MAAM65C,GAAyBhL,GAAqB,CAChDC,qBAAsBA,CAACvxC,EAAK64B,IAAWlf,GAAY3Z,EAAK,SAAU64B,GAClE4Y,cAAeA,KAAA,CACX3pC,EAAG1I,SAASm9C,gBAAgBC,YAAcp9C,SAASq9C,KAAKD,WACxDz0C,EAAG3I,SAASm9C,gBAAgBG,WAAat9C,SAASq9C,KAAKC,YAE3DhL,kBAAmBA,KAAM,ICNvB3I,GAAqB,CACvBpkC,aAASnD,GAEPm7C,GAAqBrL,GAAqB,CAC5CG,cAAgB5rC,IAAQ,CACpBiC,EAAGjC,EAAS22C,WACZz0C,EAAGlC,EAAS62C,YAEhBlL,cAAeA,KACX,IAAKzI,GAAmBpkC,QAAS,CAC7B,MAAMi4C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAa92C,MAAMd,QACnB43C,EAAavQ,WAAW,CAAEoK,cAAc,IACxC1N,GAAmBpkC,QAAUi4C,CACjC,CACA,OAAO7T,GAAmBpkC,OAAO,EAErCgtC,eAAgBA,CAAC9rC,EAAUF,KACvBE,EAASmI,MAAMvF,eAAsBjH,IAAVmE,EAAsBA,EAAQ,MAAM,EAEnE+rC,kBAAoB7rC,GAAa1E,QAAuD,UAA/C6D,OAAO63C,iBAAiBh3C,GAAUi3C,YClBzE36C,GAAO,CACTI,IAAK,CACDqZ,QrBKR,cAAyBA,GACrBxF,WAAAA,GACI8H,SAAS3X,WACT8P,KAAK0mC,0BAA4B9mC,EACrC,CACA+mC,aAAAA,CAAcC,GACV5mC,KAAK6mC,QAAU,IAAIxc,GAAWuc,EAAkB5mC,KAAK8mC,oBAAqB,CACtEt+C,mBAAoBwX,KAAKwF,KAAKisB,wBAC9BlH,cAAeoF,GAAiB3vB,KAAKwF,OAE7C,CACAshC,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAalnC,KAAKwF,KAAKO,WACrE,MAAO,CACH+lB,eAAgBwI,GAAayS,GAC7B5b,QAASmJ,GAAa0S,GACtB5b,OAAQ6b,EACRxb,MAAOA,CAAC5nB,EAAOiC,YACJ9F,KAAK6mC,QACRK,GACArmC,GAAMpS,QAAO,IAAMy4C,EAASrjC,EAAOiC,IACvC,EAGZ,CACArW,KAAAA,GACIuQ,KAAK0mC,0BAA4BriC,GAAgBrE,KAAKwF,KAAKlX,QAAS,eAAgBuV,GAAU7D,KAAK2mC,cAAc9iC,IACrH,CACApV,MAAAA,GACIuR,KAAK6mC,SAAW7mC,KAAK6mC,QAAQ7a,eAAehsB,KAAK8mC,oBACrD,CACAp3C,OAAAA,GACIsQ,KAAK0mC,4BACL1mC,KAAK6mC,SAAW7mC,KAAK6mC,QAAQrb,KACjC,IqBrCA1/B,KAAM,CACFyZ,QCNR,cAA0BA,GACtBxF,WAAAA,CAAYyF,GACRqC,MAAMrC,GACNxF,KAAKmnC,oBAAsBvnC,GAC3BI,KAAK+rB,gBAAkBnsB,GACvBI,KAAK+c,SAAW,IAAIgT,GAA0BvqB,EAClD,CACA/V,KAAAA,GAGI,MAAM,aAAE23C,GAAiBpnC,KAAKwF,KAAKO,WAC/BqhC,IACApnC,KAAKmnC,oBAAsBC,EAAavd,UAAU7pB,KAAK+c,WAE3D/c,KAAK+rB,gBAAkB/rB,KAAK+c,SAASgX,gBAAkBn0B,EAC3D,CACAlQ,OAAAA,GACIsQ,KAAKmnC,sBACLnnC,KAAK+rB,iBACT,GDZIsb,eAAgBf,GAChB74C,cAAaA,KECf65C,GAAwB,uDAQ9B,MAAMC,GAAW,EACjB,SAASC,GAAiBl5C,EAASsO,GAAoB,IAAX29B,EAAKrqC,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,EAChDib,GAAUovB,GAASgN,GAAU,yDAAyDj5C,yDACtF,MAAOyD,EAAO01C,GAVlB,SAA0Bn5C,GACtB,MAAM8gB,EAAQk4B,GAAsBI,KAAKp5C,GACzC,IAAK8gB,EACD,MAAO,CAAC,GACZ,MAAO,CAAErd,EAAO01C,GAAYr4B,EAC5B,MAAO,CAACrd,EAAO01C,EACnB,CAI8BE,CAAiBr5C,GAE3C,IAAKyD,EACD,OAEJ,MAAMyN,EAAW7Q,OAAO63C,iBAAiB5pC,GAASgrC,iBAAiB71C,GACnE,GAAIyN,EAAU,CACV,MAAMqoC,EAAUroC,EAAShH,OACzB,OAAO0pB,GAAkB2lB,GAAWl1C,WAAWk1C,GAAWA,CAC9D,CACK,OAAI51C,EAAmBw1C,GAEjBD,GAAiBC,EAAU7qC,EAAS29B,EAAQ,GAG5CkN,CAEf,CCjCA,MAAMK,GAAiB,IAAI32C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEE42C,GAAmBz7C,GAAQw7C,GAAer3C,IAAInE,GAI9C07C,GAAiB/9C,GAAMA,IAAMwI,GAAUxI,IAAM0J,GAC7Cs0C,GAAmBA,CAACC,EAAQC,IAAQx1C,WAAWu1C,EAAO10C,MAAM,MAAM20C,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAKz7C,KAAoB,IAAlB,UAAEsF,GAAWtF,EAChE,GAAkB,SAAdsF,IAAyBA,EACzB,OAAO,EACX,MAAMo2C,EAAWp2C,EAAUgd,MAAM,sBACjC,GAAIo5B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS91C,EAAUgd,MAAM,oBAC/B,OAAI84B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIt3C,IAAI,CAAC,IAAK,IAAK,MACnCu3C,GAAgCz3C,EAAmByuB,QAAQpzB,IAASm8C,GAAch4C,IAAInE,KAe5F,MAAMq8C,GAAmB,CAErB/zC,MAAOA,CAAAhF,EAAAg5C,KAAA,IAAC,EAAEn3C,GAAG7B,GAAE,YAAE6F,EAAc,IAAG,aAAEF,EAAe,KAAKqzC,EAAA,OAAKn3C,EAAEc,IAAMd,EAAEa,IAAMK,WAAW8C,GAAe9C,WAAW4C,EAAa,EAC/HT,OAAQA,CAAA+zC,EAAAC,KAAA,IAAC,EAAEp3C,GAAGm3C,GAAE,WAAEvzC,EAAa,IAAG,cAAEE,EAAgB,KAAKszC,EAAA,OAAKp3C,EAAEa,IAAMb,EAAEY,IAAMK,WAAW2C,GAAc3C,WAAW6C,EAAc,EAChIP,IAAKA,CAACszC,EAAKQ,KAAA,IAAE,IAAE9zC,GAAK8zC,EAAA,OAAKp2C,WAAWsC,EAAI,EACxCG,KAAMA,CAACmzC,EAAKS,KAAA,IAAE,KAAE5zC,GAAM4zC,EAAA,OAAKr2C,WAAWyC,EAAK,EAC3CD,OAAQA,CAAA8zC,EAAAC,KAAA,IAAC,EAAEx3C,GAAGu3C,GAAE,IAAEh0C,GAAKi0C,EAAA,OAAKv2C,WAAWsC,IAAQvD,EAAEa,IAAMb,EAAEY,IAAI,EAC7D4C,MAAOA,CAAAi0C,EAAAC,KAAA,IAAC,EAAE33C,GAAG03C,GAAE,KAAE/zC,GAAMg0C,EAAA,OAAKz2C,WAAWyC,IAAS3D,EAAEc,IAAMd,EAAEa,IAAI,EAE9Db,EAAG22C,GAAuB,EAAG,IAC7B12C,EAAG02C,GAAuB,EAAG,KAGjCO,GAAiBjyC,WAAaiyC,GAAiBl3C,EAC/Ck3C,GAAiBhyC,WAAagyC,GAAiBj3C,EAC/C,MA6BM23C,GAAmC,SAACv7C,EAAe8K,GAA4C,IAApCyB,EAAMnK,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGuP,EAAavP,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3F0I,EAAS,IAAKA,GACd6G,EAAgB,IAAKA,GACrB,MAAM6pC,EAAuB1/C,OAAO6R,KAAK7C,GAAQ8mB,OAAOqoB,IAGxD,IAAIwB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqB/pC,SAASjT,IAC1B,MAAMgD,EAAQxB,EAAcs3B,SAAS94B,GACrC,IAAKwB,EAAcq3B,SAAS74B,GACxB,OACJ,IAAI+jB,EAAOhW,EAAO/N,GACdo9C,EAAW1kB,GAAuB3U,GACtC,MAAMC,EAAK1X,EAAOtM,GAClB,IAAIq9C,EAKJ,GAAI1rC,GAAkBqS,GAAK,CACvB,MAAMs5B,EAAet5B,EAAGngB,OAClB05C,EAAsB,OAAVv5B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGu5B,GACVH,EAAW1kB,GAAuB3U,GAClC,IAAK,IAAI9X,EAAIsxC,EAAWtxC,EAAIqxC,GAKV,OAAVt5B,EAAG/X,GAL+BA,IAOjCoxC,EAMDx+B,GAAU6Z,GAAuB1U,EAAG/X,MAAQoxC,EAAQ,2CALpDA,EAAS3kB,GAAuB1U,EAAG/X,IACnC4S,GAAUw+B,IAAWD,GAChB1B,GAAc0B,IAAa1B,GAAc2B,GAAU,gEAMpE,MAEIA,EAAS3kB,GAAuB1U,GAEpC,GAAIo5B,IAAaC,EAGb,GAAI3B,GAAc0B,IAAa1B,GAAc2B,GAAS,CAClD,MAAMr7C,EAAUgB,EAAMiB,MACC,kBAAZjC,GACPgB,EAAMoB,IAAIiC,WAAWrE,IAEP,kBAAPgiB,EACP1X,EAAOtM,GAAOqG,WAAW2d,GAEpBpmB,MAAMC,QAAQmmB,IAAOq5B,IAAWh2C,KACrCiF,EAAOtM,GAAOgkB,EAAG3D,IAAIha,YAE7B,MACuB,OAAb+2C,QAAkC,IAAbA,OAAsB,EAASA,EAASt3C,aACvD,OAAXu3C,QAA8B,IAAXA,OAAoB,EAASA,EAAOv3C,aAC9C,IAATie,GAAqB,IAAPC,GAGF,IAATD,EACA/gB,EAAMoB,IAAIi5C,EAAOv3C,UAAUie,IAG3BzX,EAAOtM,GAAOo9C,EAASt3C,UAAUke,IAMhCk5B,IACDD,EAvIpB,SAAyCz7C,GACrC,MAAMg8C,EAAoB,GAW1B,OAVApB,GAA8BnpC,SAASjT,IACnC,MAAMgD,EAAQxB,EAAcs3B,SAAS94B,QACvBnB,IAAVmE,IACAw6C,EAAkBzpC,KAAK,CAAC/T,EAAKgD,EAAMiB,QACnCjB,EAAMoB,IAAIpE,EAAI+E,WAAW,SAAW,EAAI,GAC5C,IAGAy4C,EAAkB35C,QAClBrC,EAAce,SACXi7C,CACX,CA2HwBC,CAAgCj8C,GACpC07C,GAAsC,GAE1CC,EAAqBppC,KAAK/T,GAC1BmT,EAAcnT,QACanB,IAAvBsU,EAAcnT,GACRmT,EAAcnT,GACdsM,EAAOtM,GACjBgD,EAAM80B,KAAK9T,GAEnB,IAEAm5B,EAAqBt5C,OAAQ,CAC7B,MAAM65C,EAAUP,EAAqB34C,QAAQ,WAAa,EACpDnC,OAAOs7C,YACP,KACAC,EA3HmBC,EAACvxC,EAAQ9K,EAAes8C,KACrD,MAAMC,EAAav8C,EAAcyhC,qBAC3B3yB,EAAU9O,EAAcQ,QACxBg8C,EAAuB9D,iBAAiB5pC,IACxC,QAAE4lC,GAAY8H,EACdjwC,EAAS,CAAC,EAGA,SAAZmoC,GACA10C,EAAc82C,eAAe,UAAWhsC,EAAO4pC,SAAW,SAK9D4H,EAAY7qC,SAASjT,IACjB+N,EAAO/N,GAAOq8C,GAAiBr8C,GAAK+9C,EAAYC,EAAqB,IAGzEx8C,EAAce,SACd,MAAM07C,EAAaz8C,EAAcyhC,qBAQjC,OAPA6a,EAAY7qC,SAASjT,IAGjB,MAAMgD,EAAQxB,EAAcs3B,SAAS94B,GACrCgD,GAASA,EAAM80B,KAAK/pB,EAAO/N,IAC3BsM,EAAOtM,GAAOq8C,GAAiBr8C,GAAKi+C,EAAYD,EAAqB,IAElE1xC,CAAM,EAgGeuxC,CAAyBvxC,EAAQ9K,EAAe27C,GAaxE,OAXIF,EAAuBp5C,QACvBo5C,EAAuBhqC,SAAQirC,IAAkB,IAAhBl+C,EAAKgD,GAAMk7C,EACxC18C,EAAcs3B,SAAS94B,GAAKoE,IAAIpB,EAAM,IAI9CxB,EAAce,SAEV/F,GAAyB,OAAZkhD,GACbr7C,OAAO87C,SAAS,CAAEx1C,IAAK+0C,IAEpB,CAAEpxC,OAAQsxC,EAAiBzqC,gBACtC,CAEI,MAAO,CAAE7G,SAAQ6G,gBAEzB,EAQA,SAASirC,GAAe58C,EAAe8K,EAAQyB,EAAQoF,GACnD,MA3MsB7G,IACfhP,OAAO6R,KAAK7C,GAAQjO,KAAKo9C,IA0MzB4C,CAAiB/xC,GAClBywC,GAAiCv7C,EAAe8K,EAAQyB,EAAQoF,GAChE,CAAE7G,SAAQ6G,gBACpB,CC5NA,MAAMmrC,GAAkBA,CAAC98C,EAAe8K,EAAQyB,EAAQoF,KACpD,MAAMD,EFuCV,SAA6B1R,EAAahB,EAAiB2S,GAAe,OAAzB7G,GAAQ9L,EACrD,MAAM8P,EAAU9O,EAAcQ,QAC9B,KAAMsO,aAAmB8gB,SACrB,MAAO,CAAE9kB,SAAQ6G,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzB3R,EAAcuO,OAAOkD,SAASjQ,IAC1B,MAAMhB,EAAUgB,EAAMiB,MACtB,IAAK0B,EAAmB3D,GACpB,OACJ,MAAMkR,EAAWgoC,GAAiBl5C,EAASsO,GACvC4C,GACAlQ,EAAMoB,IAAI8O,EAAS,IAI3B,IAAK,MAAMlT,KAAOsM,EAAQ,CACtB,MAAMtK,EAAUsK,EAAOtM,GACvB,IAAK2F,EAAmB3D,GACpB,SACJ,MAAMkR,EAAWgoC,GAAiBl5C,EAASsO,GACtC4C,IAGL5G,EAAOtM,GAAOkT,EACTC,IACDA,EAAgB,CAAC,QAIMtU,IAAvBsU,EAAcnT,KACdmT,EAAcnT,GAAOgC,GAE7B,CACA,MAAO,CAAEsK,SAAQ6G,gBACrB,CE9EqBorC,CAAoB/8C,EAAe8K,EAAQ6G,GAG5D,OAAOirC,GAAe58C,EAFtB8K,EAAS4G,EAAS5G,OAE2ByB,EAD7CoF,EAAgBD,EAASC,cAC0C,ECVjEqrC,GAAuB,CAAEx8C,QAAS,MAClCy8C,GAA2B,CAAEz8C,SAAS,GCF5C,MAAM08C,GAAqB,IAAIvkC,QCoBzBwkC,GAAerhD,OAAO6R,KAAKpP,GAC3B6+C,GAAcD,GAAa96C,OAC3Bg7C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB7gD,EAAa4F,OAKrC,MAAMk7C,GACFtrC,WAAAA,CAAWjT,GAAsF,IAArF,OAAEiB,EAAM,MAAEtD,EAAK,gBAAEwD,EAAe,oBAAEC,EAAmB,YAAEL,GAAcf,EAAE2K,EAAOvH,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,GAAAA,UAAA,GAAG,CAAC,EAK1F8P,KAAK1R,QAAU,KAIf0R,KAAKxD,SAAW,IAAIrL,IAIpB6O,KAAKnV,eAAgB,EACrBmV,KAAKxV,uBAAwB,EAQ7BwV,KAAKumB,mBAAqB,KAM1BvmB,KAAK3D,OAAS,IAAI/L,IAIlB0P,KAAK5S,SAAW,CAAC,EAKjB4S,KAAKsrC,mBAAqB,IAAIh7C,IAM9B0P,KAAKurC,iBAAmB,CAAC,EAIzBvrC,KAAKkjB,OAAS,CAAC,EAMfljB,KAAKwrC,uBAAyB,CAAC,EAC/BxrC,KAAKyrC,aAAe,IAAMzrC,KAAKwiB,OAAO,SAAUxiB,KAAKxI,cACrDwI,KAAKnR,OAAS,KACLmR,KAAK1R,UAEV0R,KAAK0rC,eACL1rC,KAAK2rC,eAAe3rC,KAAK1R,QAAS0R,KAAK7C,YAAa6C,KAAKvV,MAAMkN,MAAOqI,KAAKlD,YAAW,EAE1FkD,KAAK64B,eAAiB,IAAMh4B,GAAMhS,OAAOmR,KAAKnR,QAAQ,GAAO,GAC7D,MAAM,aAAE2I,EAAY,YAAE2F,GAAgBtP,EACtCmS,KAAKxI,aAAeA,EACpBwI,KAAK4rC,WAAa,IAAKp0C,GACvBwI,KAAK6rC,cAAgBphD,EAAMQ,QAAU,IAAKuM,GAAiB,CAAC,EAC5DwI,KAAK7C,YAAcA,EACnB6C,KAAKjS,OAASA,EACdiS,KAAKvV,MAAQA,EACbuV,KAAK/R,gBAAkBA,EACvB+R,KAAKu6B,MAAQxsC,EAASA,EAAOwsC,MAAQ,EAAI,EACzCv6B,KAAK9R,oBAAsBA,EAC3B8R,KAAKvI,QAAUA,EACfuI,KAAKxV,sBAAwBA,EAAsBC,GACnDuV,KAAKnV,cAAgBA,EAAcJ,GAC/BuV,KAAKnV,gBACLmV,KAAK4mB,gBAAkB,IAAIz1B,KAE/B6O,KAAK2oB,uBAAyB79B,QAAQiD,GAAUA,EAAOO,SAWvD,MAAM,WAAE03B,KAAe8lB,GAAwB9rC,KAAK1C,4BAA4B7S,EAAO,CAAC,GACxF,IAAK,MAAM6B,KAAOw/C,EAAqB,CACnC,MAAMx8C,EAAQw8C,EAAoBx/C,QACRnB,IAAtBqM,EAAalL,IAAsBgF,EAAchC,KACjDA,EAAMoB,IAAI8G,EAAalL,IAAM,GACzB21B,GAAwB+D,IACxBA,EAAW7lB,IAAI7T,GAG3B,CACJ,CAQAgR,2BAAAA,CAA4ByuC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACAv8C,KAAAA,CAAMD,GACFwQ,KAAK1R,QAAUkB,EACfw7C,GAAmBt6C,IAAIlB,EAAUwQ,MAC7BA,KAAKlD,aAAekD,KAAKlD,WAAWtN,UACpCwQ,KAAKlD,WAAWrN,MAAMD,GAEtBwQ,KAAKjS,QAAUiS,KAAKnV,gBAAkBmV,KAAKxV,wBAC3CwV,KAAKisC,sBAAwBjsC,KAAKjS,OAAOm+C,gBAAgBlsC,OAE7DA,KAAK3D,OAAOkD,SAAQ,CAACjQ,EAAOhD,IAAQ0T,KAAKmsC,kBAAkB7/C,EAAKgD,KAC3Dy7C,GAAyBz8C,SC1JtC,WAEI,GADAy8C,GAAyBz8C,SAAU,EAC9BxF,EAEL,GAAI6F,OAAOy9C,WAAY,CACnB,MAAMC,EAAmB19C,OAAOy9C,WAAW,4BACrCE,EAA8BA,IAAOxB,GAAqBx8C,QAAU+9C,EAAiB5hC,QAC3F4hC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBx8C,SAAU,CAEvC,CD8IYk+C,GAEJxsC,KAAKumB,mBAC4B,UAA7BvmB,KAAK9R,sBAE8B,WAA7B8R,KAAK9R,qBAED48C,GAAqBx8C,SAI/B0R,KAAKjS,QACLiS,KAAKjS,OAAOyO,SAAS2D,IAAIH,MAC7BA,KAAKvR,OAAOuR,KAAKvV,MAAOuV,KAAK/R,gBACjC,CACAyB,OAAAA,GACIs7C,GAAmBvqC,OAAOT,KAAK1R,SAC/B0R,KAAKlD,YAAckD,KAAKlD,WAAWpN,UACnCqR,GAAYf,KAAKyrC,cACjB1qC,GAAYf,KAAKnR,QACjBmR,KAAKsrC,mBAAmB/rC,SAASe,GAAWA,MAC5CN,KAAKisC,uBAAyBjsC,KAAKisC,wBACnCjsC,KAAKjS,QAAUiS,KAAKjS,OAAOyO,SAASiE,OAAOT,MAC3C,IAAK,MAAM1T,KAAO0T,KAAKkjB,OACnBljB,KAAKkjB,OAAO52B,GAAKoU,QAErB,IAAK,MAAMpU,KAAO0T,KAAK5S,SACnB4S,KAAK5S,SAASd,GAAKoD,UAEvBsQ,KAAK1R,QAAU,IACnB,CACA69C,iBAAAA,CAAkB7/C,EAAKgD,GACnB,MAAMm9C,EAAmBv7C,EAAeT,IAAInE,GACtCogD,EAAiBp9C,EAAMu0B,GAAG,UAAW8oB,IACvC3sC,KAAKxI,aAAalL,GAAOqgD,EACzB3sC,KAAKvV,MAAMywB,UACPra,GAAMpS,OAAOuR,KAAKyrC,cAAc,GAAO,GACvCgB,GAAoBzsC,KAAKlD,aACzBkD,KAAKlD,WAAW6+B,kBAAmB,EACvC,IAEEiR,EAAwBt9C,EAAMu0B,GAAG,gBAAiB7jB,KAAK64B,gBAC7D74B,KAAKsrC,mBAAmB56C,IAAIpE,GAAK,KAC7BogD,IACAE,GAAuB,GAE/B,CACAvlB,gBAAAA,CAAiBwlB,GAIb,OAAK7sC,KAAK1R,SACL0R,KAAK8sC,0BACN9sC,KAAK7N,OAAS06C,EAAM16C,KAGjB6N,KAAK8sC,yBAAyB9sC,KAAK1R,QAASu+C,EAAMv+C,SAF9C,CAGf,CACAjB,YAAAA,CAAYuC,EAAiCT,EAAUpC,EAAmBmC,GAA0B,IAC5F69C,EACAt/C,GAFK,SAAE+O,KAAawwC,GAAep9C,EAevC,IAAK,IAAI2I,EAAI,EAAGA,EAAI2yC,GAAa3yC,IAAK,CAClC,MAAM3N,EAAOqgD,GAAa1yC,IACpB,UAAEhM,EAAWgZ,QAAS0nC,EAAkB,eAAE5F,EAAgB55C,cAAey/C,GAA4B7gD,EAAmBzB,GAC1Hy8C,IACA0F,EAA4B1F,GAC5B96C,EAAUygD,MACLhtC,KAAK5S,SAASxC,IAASqiD,IACxBjtC,KAAK5S,SAASxC,GAAQ,IAAIqiD,EAAmBjtC,OAE7CktC,IACAz/C,EAAgBy/C,GAG5B,CACA,IAAmB,SAAdltC,KAAK7N,MAAiC,QAAd6N,KAAK7N,QAC7B6N,KAAKlD,YACNiwC,EAA2B,CAC3B/sC,KAAKlD,WAAa,IAAIiwC,EAA0B/sC,KAAKxI,aAAcwI,KAAKjS,QAAUiS,KAAKjS,OAAO+O,YAC9F,MAAM,SAAEnP,EAAQ,OAAEvB,EAAM,KAAEN,EAAI,gBAAEimC,EAAe,aAAEqO,EAAY,WAAEzB,GAAgBqO,EAC/EhtC,KAAKlD,WAAWk5B,WAAW,CACvBroC,WACAvB,SACA2zC,oBAAqBj1C,QAAQgB,IACxBimC,GAAmBroC,EAAYqoC,GACpCjkC,cAAekS,KACf64B,eAAgBA,IAAM74B,KAAK64B,iBAQ3BuL,cAAiC,kBAAXh4C,EAAsBA,EAAS,OACrDm4C,uBAAwBr1C,EACxBkxC,eACAzB,cAER,CACA,OAAOlxC,CACX,CACAuB,cAAAA,GACI,IAAK,MAAM1C,KAAO0T,KAAK5S,SAAU,CAC7B,MAAM+/C,EAAUntC,KAAK5S,SAASd,GAC1B6gD,EAAQ1nC,UACR0nC,EAAQ1+C,UAGR0+C,EAAQ19C,QACR09C,EAAQ1nC,WAAY,EAE5B,CACJ,CACAimC,YAAAA,GACI1rC,KAAKotC,MAAMptC,KAAK7C,YAAa6C,KAAKxI,aAAcwI,KAAKvI,QAASuI,KAAKvV,MACvE,CAMA8kC,kBAAAA,GACI,OAAOvvB,KAAK1R,QACN0R,KAAKqtC,2BAA2BrtC,KAAK1R,QAAS0R,KAAKvV,OACnDqjC,IACV,CACAwf,cAAAA,CAAehhD,GACX,OAAO0T,KAAKxI,aAAalL,EAC7B,CACAs4C,cAAAA,CAAet4C,EAAKgD,GAChB0Q,KAAKxI,aAAalL,GAAOgD,CAC7B,CAQAi2B,oBAAAA,CAAqB3sB,GAA0B,IAAlB20C,IAASr9C,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,KAAAA,UAAA,GAClC,OAAO8P,KAAKwtC,iCAAiC50C,EAAQoH,KAAKvV,MAAO8iD,EACrE,CAKA9+C,MAAAA,CAAOhE,EAAOwD,IACNxD,EAAMiN,mBAAqBsI,KAAKvV,MAAMiN,oBACtCsI,KAAK64B,iBAET74B,KAAKzC,UAAYyC,KAAKvV,MACtBuV,KAAKvV,MAAQA,EACbuV,KAAKkqB,oBAAsBlqB,KAAK/R,gBAChC+R,KAAK/R,gBAAkBA,EAIvB,IAAK,IAAIsK,EAAI,EAAGA,EAAI4yC,GAAkBh7C,OAAQoI,IAAK,CAC/C,MAAMjM,EAAM6+C,GAAkB5yC,GAC1ByH,KAAKwrC,uBAAuBl/C,KAC5B0T,KAAKwrC,uBAAuBl/C,YACrB0T,KAAKwrC,uBAAuBl/C,IAEvC,MAAMmhD,EAAWhjD,EAAM,KAAO6B,GAC1BmhD,IACAztC,KAAKwrC,uBAAuBl/C,GAAO0T,KAAK6jB,GAAGv3B,EAAKmhD,GAExD,CACAztC,KAAKurC,iBE9Ub,SAAqC3uC,EAASgO,EAAMC,GAChD,MAAM,WAAEmb,GAAepb,EACvB,IAAK,MAAMte,KAAOse,EAAM,CACpB,MAAM8iC,EAAY9iC,EAAKte,GACjBqhD,EAAY9iC,EAAKve,GACvB,GAAIgF,EAAco8C,GAKd9wC,EAAQyoB,SAAS/4B,EAAKohD,GAClBzrB,GAAwB+D,IACxBA,EAAW7lB,IAAI7T,QAUlB,GAAIgF,EAAcq8C,GAKnB/wC,EAAQyoB,SAAS/4B,EAAKu4B,GAAY6oB,EAAW,CAAEnvB,MAAO3hB,KAClDqlB,GAAwB+D,IACxBA,EAAW1lB,OAAOhU,QAGrB,GAAIqhD,IAAcD,EAMnB,GAAI9wC,EAAQuoB,SAAS74B,GAAM,CACvB,MAAMshD,EAAgBhxC,EAAQwoB,SAAS94B,IAEtCshD,EAAclqB,aAAekqB,EAAcl9C,IAAIg9C,EACpD,KACK,CACD,MAAMf,EAAc/vC,EAAQ0wC,eAAehhD,GAC3CsQ,EAAQyoB,SAAS/4B,EAAKu4B,QAA4B15B,IAAhBwhD,EAA4BA,EAAce,EAAW,CAAEnvB,MAAO3hB,IACpG,CAER,CAEA,IAAK,MAAMtQ,KAAOue,OACI1f,IAAdyf,EAAKte,IACLsQ,EAAQixC,YAAYvhD,GAE5B,OAAOse,CACX,CFuRgCkjC,CAA4B9tC,KAAMA,KAAK1C,4BAA4B7S,EAAOuV,KAAKzC,WAAYyC,KAAKurC,kBACpHvrC,KAAK+tC,wBACL/tC,KAAK+tC,wBAEb,CACAhoC,QAAAA,GACI,OAAO/F,KAAKvV,KAChB,CAIAujD,UAAAA,CAAWpjD,GACP,OAAOoV,KAAKvV,MAAMM,SAAWiV,KAAKvV,MAAMM,SAASH,QAAQO,CAC7D,CAIA+zB,oBAAAA,GACI,OAAOlf,KAAKvV,MAAMiV,UACtB,CACA+xB,qBAAAA,GACI,OAAOzxB,KAAKvV,MAAMjC,kBACtB,CACAylD,qBAAAA,GACI,OAAOjuC,KAAKnV,cACNmV,KACAA,KAAKjS,OACDiS,KAAKjS,OAAOkgD,6BACZ9iD,CACd,CACAg9B,iBAAAA,GACI,GAD2Bj4B,UAAAC,OAAA,QAAAhF,IAAA+E,UAAA,IAAAA,UAAA,GAEvB,OAAO8P,KAAKjS,OAASiS,KAAKjS,OAAOo6B,yBAAsBh9B,EAE3D,IAAK6U,KAAKxV,sBAAuB,CAC7B,MAAMU,EAAU8U,KAAKjS,QACfiS,KAAKjS,OAAOo6B,qBACZ,CAAC,EAIP,YAH2Bh9B,IAAvB6U,KAAKvV,MAAMQ,UACXC,EAAQD,QAAU+U,KAAKvV,MAAMQ,SAE1BC,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIqN,EAAI,EAAGA,EAAI6yC,GAAiB7yC,IAAK,CACtC,MAAM3N,EAAOL,EAAagO,GACpB9M,EAAOuU,KAAKvV,MAAMG,IACpBZ,EAAeyB,KAAkB,IAATA,KACxBP,EAAQN,GAAQa,EAExB,CACA,OAAOP,CACX,CAIAghD,eAAAA,CAAgB/lC,GACZ,MAAM+nC,EAAqBluC,KAAKiuC,wBAChC,GAAIC,EAGA,OAFAA,EAAmBtnB,iBACfsnB,EAAmBtnB,gBAAgBzmB,IAAIgG,GACpC,IAAM+nC,EAAmBtnB,gBAAgBnmB,OAAO0F,EAE/D,CAIAkf,QAAAA,CAAS/4B,EAAKgD,GAENA,IAAU0Q,KAAK3D,OAAO9L,IAAIjE,KAC1B0T,KAAK6tC,YAAYvhD,GACjB0T,KAAKmsC,kBAAkB7/C,EAAKgD,IAEhC0Q,KAAK3D,OAAO3L,IAAIpE,EAAKgD,GACrB0Q,KAAKxI,aAAalL,GAAOgD,EAAMiB,KACnC,CAIAs9C,WAAAA,CAAYvhD,GACR0T,KAAK3D,OAAOoE,OAAOnU,GACnB,MAAMw3B,EAAc9jB,KAAKsrC,mBAAmB/6C,IAAIjE,GAC5Cw3B,IACAA,IACA9jB,KAAKsrC,mBAAmB7qC,OAAOnU,WAE5B0T,KAAKxI,aAAalL,GACzB0T,KAAKmuC,2BAA2B7hD,EAAK0T,KAAK7C,YAC9C,CAIAgoB,QAAAA,CAAS74B,GACL,OAAO0T,KAAK3D,OAAO5L,IAAInE,EAC3B,CACA84B,QAAAA,CAAS94B,EAAKkzB,GACV,GAAIxf,KAAKvV,MAAM4R,QAAU2D,KAAKvV,MAAM4R,OAAO/P,GACvC,OAAO0T,KAAKvV,MAAM4R,OAAO/P,GAE7B,IAAIgD,EAAQ0Q,KAAK3D,OAAO9L,IAAIjE,GAK5B,YAJcnB,IAAVmE,QAAwCnE,IAAjBq0B,IACvBlwB,EAAQu1B,GAAYrF,EAAc,CAAEjB,MAAOve,OAC3CA,KAAKqlB,SAAS/4B,EAAKgD,IAEhBA,CACX,CAMA8+C,SAAAA,CAAU9hD,GACN,IAAI6N,EACJ,YAAkChP,IAA3B6U,KAAKxI,aAAalL,IAAuB0T,KAAK1R,QAES,QAAvD6L,EAAK6F,KAAKquC,uBAAuBruC,KAAKvV,MAAO6B,UAAyB,IAAP6N,EAAgBA,EAAK6F,KAAKsuC,sBAAsBtuC,KAAK1R,QAAShC,EAAK0T,KAAKvI,SADxIuI,KAAKxI,aAAalL,EAE5B,CAKAiiD,aAAAA,CAAcjiD,EAAKgD,GACf0Q,KAAK4rC,WAAWt/C,GAAOgD,CAC3B,CAKAk6B,aAAAA,CAAcl9B,GACV,IAAI6N,EACJ,MAAM,QAAElP,GAAY+U,KAAKvV,MACnB+jD,EAAsC,kBAAZvjD,GAA2C,kBAAZA,EACD,QAAvDkP,EAAK0D,GAAwBmC,KAAKvV,MAAOQ,UAA6B,IAAPkP,OAAgB,EAASA,EAAG7N,QAC5FnB,EAIN,GAAIF,QAAgCE,IAArBqjD,EACX,OAAOA,EAMX,MAAM51C,EAASoH,KAAKquC,uBAAuBruC,KAAKvV,MAAO6B,GACvD,YAAenB,IAAXyN,GAAyBtH,EAAcsH,QAMRzN,IAA5B6U,KAAK6rC,cAAcv/C,SACDnB,IAArBqjD,OACErjD,EACA6U,KAAK4rC,WAAWt/C,GARXsM,CASf,CACAirB,EAAAA,CAAGtgB,EAAWrB,GAIV,OAHKlC,KAAKkjB,OAAO3f,KACbvD,KAAKkjB,OAAO3f,GAAa,IAAI+e,IAE1BtiB,KAAKkjB,OAAO3f,GAAWpD,IAAI+B,EACtC,CACAsgB,MAAAA,CAAOjf,GACH,GAAIvD,KAAKkjB,OAAO3f,GAAY,SAAAmB,EAAAxU,UAAAC,OADXotC,EAAI,IAAArzC,MAAAwa,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ24B,EAAI34B,EAAA,GAAA1U,UAAA0U,GAEjB5E,KAAKkjB,OAAO3f,GAAWif,UAAU+a,EACrC,CACJ,EGrfJ,MAAMkR,WAAyBpD,GAC3ByB,wBAAAA,CAAyBvoC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEmqC,wBAAwBlqC,GAAS,GAAK,CACnD,CACA6pC,sBAAAA,CAAuB5jD,EAAO6B,GAC1B,OAAO7B,EAAMkN,MAAQlN,EAAMkN,MAAMrL,QAAOnB,CAC5C,CACAgjD,0BAAAA,CAA2B7hD,EAAGQ,GAAmB,IAAjB,KAAE8K,EAAI,MAAED,GAAO7K,SACpC8K,EAAKtL,UACLqL,EAAMrL,EACjB,CACAkhD,gCAAAA,CAAgC59C,EAAAg5C,EAAgEnjC,GAAW,IAA1E,WAAE/F,EAAU,cAAED,KAAkB7G,GAAQhJ,GAAE,gBAAEqJ,GAAiB2vC,EACtFvuC,EnDqFZ,SAAmBzB,EAAQ8G,EAAY5R,GACnC,MAAMuM,EAAS,CAAC,EAChB,IAAK,MAAM/N,KAAOsM,EAAQ,CACtB,MAAM+1C,EAAmBnpB,GAAwBl5B,EAAKoT,GACtD,QAAyBvU,IAArBwjD,EACAt0C,EAAO/N,GAAOqiD,MAEb,CACD,MAAMr/C,EAAQxB,EAAcs3B,SAAS94B,GACjCgD,IACA+K,EAAO/N,GAAOgD,EAAMiB,MAE5B,CACJ,CACA,OAAO8J,CACX,CmDpGqBu0C,CAAUh2C,EAAQ8G,GAAc,CAAC,EAAGM,MAYjD,GARI/G,IACIwG,IACAA,EAAgBxG,EAAgBwG,IAChC7G,IACAA,EAASK,EAAgBL,IACzByB,IACAA,EAASpB,EAAgBoB,KAE7BoL,EAAW,EnDoBvB,SAAiC3X,EAAe8K,EAAQyB,GACpD,IAAIF,EAAIsY,EACR,MAAMo8B,EAAejlD,OAAO6R,KAAK7C,GAAQ8mB,QAAQpzB,IAASwB,EAAcq3B,SAAS74B,KAC3EwiD,EAAeD,EAAa1+C,OD5CflG,MC6CnB,GAAK6kD,EAEL,IAAK,IAAIv2C,EAAI,EAAGA,EAAIu2C,EAAcv2C,IAAK,CACnC,MAAMjM,EAAMuiD,EAAat2C,GACnBw2C,EAAcn2C,EAAOtM,GAC3B,IAAIgD,EAAQ,KAKRpF,MAAMC,QAAQ4kD,KACdz/C,EAAQy/C,EAAY,IAOV,OAAVz/C,IACAA,EAAoG,QAA3FmjB,EAA4B,QAAtBtY,EAAKE,EAAO/N,UAAyB,IAAP6N,EAAgBA,EAAKrM,EAAcsgD,UAAU9hD,UAAyB,IAAPmmB,EAAgBA,EAAK7Z,EAAOtM,SAM9HnB,IAAVmE,GAAiC,OAAVA,IAEN,kBAAVA,IACN4yB,GAAkB5yB,IAAUkxB,GAAkBlxB,IAE/CA,EAAQqD,WAAWrD,ID3ERrF,EC6ESqF,GD7EH21B,GAAWlU,KAAK+T,GAAc76B,KC6EjBuoB,GAAQzhB,KAAKg+C,KAC3Cz/C,EAAQqjB,GAAkBrmB,EAAKyiD,KAEnCjhD,EAAcu3B,SAAS/4B,EAAKu4B,GAAYv1B,EAAO,CAAEivB,MAAOzwB,UACpC3C,IAAhBkP,EAAO/N,KACP+N,EAAO/N,GAAOgD,GAEJ,OAAVA,GACAxB,EAAcygD,cAAcjiD,EAAKgD,GACzC,CACJ,CmDjEY0/C,CAAwBhvC,KAAMpH,EAAQyB,GACtC,MAAMuY,EAASg4B,GAAgB5qC,KAAMpH,EAAQyB,EAAQoF,GACrDA,EAAgBmT,EAAOnT,cACvB7G,EAASga,EAAOha,MACpB,CACA,MAAO,CACH8G,aACAD,mBACG7G,EAEX,EC/BJ,MAAMq2C,WAA0BR,GAC5B1uC,WAAAA,GACI8H,SAAS3X,WACT8P,KAAK7N,KAAO,MAChB,CACAm8C,qBAAAA,CAAsB9+C,EAAUlD,GAC5B,GAAI4E,EAAeT,IAAInE,GAAM,CACzB,MAAM4iD,EAAc5uB,GAAoBh0B,GACxC,OAAO4iD,GAAcA,EAAYp8C,SAAe,CACpD,CACK,CACD,MAAMq8C,GAdQvyC,EAcyBpN,EAbxCb,OAAO63C,iBAAiB5pC,IAcjBtN,GAAS0C,EAAkB1F,GAC3B6iD,EAAcvH,iBAAiBt7C,GAC/B6iD,EAAc7iD,KAAS,EAC7B,MAAwB,kBAAVgD,EAAqBA,EAAMkJ,OAASlJ,CACtD,CAnBR,IAA0BsN,CAoBtB,CACAywC,0BAAAA,CAA2B79C,EAAQ1C,GAA0B,IAAxB,mBAAEtE,GAAoBsE,EACvD,OAAOyiC,GAAmB//B,EAAUhH,EACxC,CACA4kD,KAAAA,CAAMjwC,EAAa3F,EAAcC,EAAShN,GACtC6M,GAAgB6F,EAAa3F,EAAcC,EAAShN,EAAMiN,kBAC9D,CACA4F,2BAAAA,CAA4B7S,EAAO8S,GAC/B,OAAOD,GAA4B7S,EAAO8S,EAC9C,CACAwwC,sBAAAA,GACQ/tC,KAAKovC,oBACLpvC,KAAKovC,2BACEpvC,KAAKovC,mBAEhB,MAAM,SAAE5yC,GAAawD,KAAKvV,MACtB6G,EAAckL,KACdwD,KAAKovC,kBAAoB5yC,EAASqnB,GAAG,UAAW3oB,IACxC8E,KAAK1R,UACL0R,KAAK1R,QAAQ+gD,YAAc,GAAGn0C,IAAQ,IAGtD,CACAywC,cAAAA,CAAen8C,EAAU2N,EAAaN,EAAWC,GAC7CH,GAAWnN,EAAU2N,EAAaN,EAAWC,EACjD,EC5CJ,MAAMwyC,WAAyBb,GAC3B1uC,WAAAA,GACI8H,SAAS3X,WACT8P,KAAK7N,KAAO,MACZ6N,KAAKrF,UAAW,CACpB,CACA0zC,sBAAAA,CAAuB5jD,EAAO6B,GAC1B,OAAO7B,EAAM6B,EACjB,CACAgiD,qBAAAA,CAAsB9+C,EAAUlD,GAC5B,GAAI4E,EAAeT,IAAInE,GAAM,CACzB,MAAM4iD,EAAc5uB,GAAoBh0B,GACxC,OAAO4iD,GAAcA,EAAYp8C,SAAe,CACpD,CAEA,OADAxG,EAAO2Q,GAAoBxM,IAAInE,GAA0BA,EAAnBjD,EAAYiD,GAC3CkD,EAAS+/C,aAAajjD,EACjC,CACA+gD,0BAAAA,GACI,OAAOvf,IACX,CACAxwB,2BAAAA,CAA4B7S,EAAO8S,GAC/B,OAAOD,GAA4B7S,EAAO8S,EAC9C,CACA6vC,KAAAA,CAAMjwC,EAAa3F,EAAcC,EAAShN,GACtCiQ,GAAcyC,EAAa3F,EAAcC,EAASuI,KAAKrF,SAAUlQ,EAAMiN,kBAC3E,CACAi0C,cAAAA,CAAen8C,EAAU2N,EAAaN,EAAWC,GAC7CI,GAAU1N,EAAU2N,EAAaN,EAAWC,EAChD,CACArN,KAAAA,CAAMD,GACFwQ,KAAKrF,SAAWA,GAASnL,EAAS4T,SAClCyE,MAAMpY,MAAMD,EAChB,ECvCJ,MAAMggD,GAAyBA,CAACriD,EAAWsK,IAChC7G,EAAezD,GAChB,IAAImiD,GAAiB73C,EAAS,CAAEW,4BAA4B,IAC5D,IAAI62C,GAAkBx3C,EAAS,CAAEW,4BAA4B,ICEjErL,GAAoB,IACnBk5B,MACAre,MACA9b,MCTQ,CACXM,OAAQ,CACJi7C,eAAgBf,GAChB74C,cAAaA,MDefgiD,GAAuB1/C,GAAkB,CAAC5C,EAAWsR,IEhB3D,SAA+BtR,EAASL,EAAkCC,EAAmBC,GAAqB,IAAxE,mBAAEkP,GAAqB,GAAOpP,EAIpE,MAAO,IAHY8D,EAAezD,GAC5B4V,GACAM,GAGFtW,oBACAE,UAAWgP,GAAgBC,GAC3BlP,sBACAG,YAER,CFKsEuiD,CAAsBviD,EAAWsR,EAAQ1R,GAAmByiD,K","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}